{
  FromHeader fromHeader=((FromHeader)response.getHeader(FromHeader.NAME));
  int requestedExpiration=0;
  Request register=clientTransatcion.getRequest();
  ExpiresHeader expiresHeader=register.getExpires();
  if (expiresHeader != null)   requestedExpiration=expiresHeader.getExpires();
 else {
    ContactHeader contactHeader=(ContactHeader)register.getHeader(ContactHeader.NAME);
    if (contactHeader != null)     requestedExpiration=contactHeader.getExpires();
 else     requestedExpiration=0;
  }
  int grantedExpiration=registrationsExpiration;
  expiresHeader=response.getExpires();
  if (expiresHeader != null) {
    grantedExpiration=expiresHeader.getExpires();
  }
 else {
    ContactHeader contactHeader=(ContactHeader)response.getHeader(ContactHeader.NAME);
    if (contactHeader != null) {
      grantedExpiration=contactHeader.getExpires();
    }
 else {
      grantedExpiration=requestedExpiration;
    }
  }
  if (grantedExpiration <= 0 || requestedExpiration <= 0) {
    setRegistrationState(RegistrationState.UNREGISTERED,RegistrationStateChangeEvent.REASON_USER_REQUEST,"Registration terminated.");
  }
 else {
    int scheduleTime=grantedExpiration;
    String keepAliveMethod=sipProvider.getAccountID().getAccountPropertyString(KEEP_ALIVE_METHOD);
    if ((keepAliveMethod != null && keepAliveMethod.equalsIgnoreCase("register")) || keepAliveMethod == null) {
      int registrationInterval=sipProvider.getAccountID().getAccountPropertyInt(KEEP_ALIVE_INTERVAL,KEEP_ALIVE_INTERVAL_DEFAULT_VALUE);
      if (registrationInterval < grantedExpiration) {
        scheduleTime=registrationInterval;
      }
    }
    scheduleReRegistration(scheduleTime);
    setRegistrationState(RegistrationState.REGISTERED,RegistrationStateChangeEvent.REASON_NOT_SPECIFIED,null);
  }
}
