{
  ClientTransaction clientTransaction=responseEvent.getClientTransaction();
  Response response=responseEvent.getResponse();
  SipProvider sourceProvider=(SipProvider)responseEvent.getSource();
  boolean processed=false;
  if (response.getStatusCode() == Response.OK) {
    processOK(clientTransaction,response);
    processed=true;
  }
 else   if (response.getStatusCode() == Response.NOT_IMPLEMENTED) {
    processNotImplemented(clientTransaction,response);
    processed=true;
  }
 else   if (response.getStatusCode() == Response.TRYING) {
  }
 else   if (response.getStatusCode() == Response.UNAUTHORIZED || response.getStatusCode() == Response.PROXY_AUTHENTICATION_REQUIRED) {
    processAuthenticationChallenge(clientTransaction,response,sourceProvider);
    processed=true;
  }
 else   if (response.getStatusCode() == Response.INTERVAL_TOO_BRIEF) {
    processIntervalTooBrief(response);
    processed=true;
  }
 else   if (response.getStatusCode() >= 400) {
    logger.error("Received an error response (" + response.getStatusCode() + ")");
    int registrationStateReason=RegistrationStateChangeEvent.REASON_NOT_SPECIFIED;
    if (response.getStatusCode() == Response.NOT_FOUND)     registrationStateReason=RegistrationStateChangeEvent.REASON_NON_EXISTING_USER_ID;
    this.setRegistrationState(RegistrationState.CONNECTION_FAILED,registrationStateReason,"Received an error while trying to register. " + "Server returned error:" + response.getReasonPhrase());
    processed=true;
  }
  return processed;
}
