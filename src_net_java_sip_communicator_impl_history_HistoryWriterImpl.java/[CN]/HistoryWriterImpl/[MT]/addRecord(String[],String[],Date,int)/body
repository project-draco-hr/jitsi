{
synchronized (this.docCreateLock) {
    if (this.currentDoc == null || this.currentDocElements > MAX_RECORDS_PER_FILE) {
      this.createNewDoc(date,this.currentDoc == null);
    }
  }
synchronized (this.currentDoc) {
    Node root=this.currentDoc.getFirstChild();
synchronized (root) {
      if (maxNumberOfRecords > -1 && this.currentDocElements >= maxNumberOfRecords) {
        removeFirstRecord(root);
      }
      Element elem=this.currentDoc.createElement("record");
      SimpleDateFormat sdf=new SimpleDateFormat(DATE_FORMAT);
      elem.setAttribute("timestamp",sdf.format(date));
      for (int i=0; i < propertyNames.length; i++) {
        String propertyName=propertyNames[i];
        if (propertyName.endsWith(CDATA_SUFFIX)) {
          if (propertyValues[i] != null) {
            propertyName=propertyName.replaceFirst(CDATA_SUFFIX,"");
            Element propertyElement=this.currentDoc.createElement(propertyName);
            Text value=this.currentDoc.createCDATASection(XmlEscapers.xmlContentEscaper().escape(propertyValues[i].replaceAll("\0"," ")));
            propertyElement.appendChild(value);
            elem.appendChild(propertyElement);
          }
        }
 else {
          if (propertyValues[i] != null) {
            Element propertyElement=this.currentDoc.createElement(propertyName);
            Text value=this.currentDoc.createTextNode(XmlEscapers.xmlContentEscaper().escape(propertyValues[i].replaceAll("\0"," ")));
            propertyElement.appendChild(value);
            elem.appendChild(propertyElement);
          }
        }
      }
      root.appendChild(elem);
      this.currentDocElements++;
    }
  }
synchronized (this.docWriteLock) {
    if (historyImpl.getHistoryServiceImpl().isCacheEnabled())     this.historyImpl.writeFile(this.currentFile);
 else     this.historyImpl.writeFile(this.currentFile,this.currentDoc);
  }
}
