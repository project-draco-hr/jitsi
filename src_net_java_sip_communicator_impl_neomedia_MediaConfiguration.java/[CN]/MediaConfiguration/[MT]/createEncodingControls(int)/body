{
  ResourceManagementService resources=NeomediaActivator.getResources();
  String key;
  final JTable table=new JTable();
  table.setShowGrid(false);
  table.setTableHeader(null);
  key="impl.media.configform.ENCODINGS";
  JLabel label=new JLabel(resources.getI18NString(key));
  label.setDisplayedMnemonic(resources.getI18nMnemonic(key));
  label.setLabelFor(table);
  key="impl.media.configform.UP";
  final JButton upButton=new JButton(resources.getI18NString(key));
  upButton.setMnemonic(resources.getI18nMnemonic(key));
  upButton.setOpaque(false);
  key="impl.media.configform.DOWN";
  final JButton downButton=new JButton(resources.getI18NString(key));
  downButton.setMnemonic(resources.getI18nMnemonic(key));
  downButton.setOpaque(false);
  Container buttonBar=new TransparentPanel(new GridLayout(0,1));
  buttonBar.add(upButton);
  buttonBar.add(downButton);
  Container parentButtonBar=new TransparentPanel(new BorderLayout());
  parentButtonBar.add(buttonBar,BorderLayout.NORTH);
  Container container=new TransparentPanel(new BorderLayout());
  container.setPreferredSize(new Dimension(WIDTH,100));
  container.setMaximumSize(new Dimension(WIDTH,100));
  container.add(label,BorderLayout.NORTH);
  container.add(new JScrollPane(table),BorderLayout.CENTER);
  container.add(parentButtonBar,BorderLayout.EAST);
  table.setModel(new EncodingConfigurationTableModel(mediaService.getEncodingConfiguration(),type));
  TableColumnModel tableColumnModel=table.getColumnModel();
  TableColumn tableColumn=tableColumnModel.getColumn(0);
  tableColumn.setMaxWidth(tableColumn.getMinWidth());
  ListSelectionListener tableSelectionListener=new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent event){
      if (table.getSelectedRowCount() == 1) {
        int selectedRow=table.getSelectedRow();
        if (selectedRow > -1) {
          upButton.setEnabled(selectedRow > 0);
          downButton.setEnabled(selectedRow < (table.getRowCount() - 1));
          return;
        }
      }
      upButton.setEnabled(false);
      downButton.setEnabled(false);
    }
  }
;
  table.getSelectionModel().addListSelectionListener(tableSelectionListener);
  tableSelectionListener.valueChanged(null);
  ActionListener buttonListener=new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      Object source=event.getSource();
      boolean up;
      if (source == upButton)       up=true;
 else       if (source == downButton)       up=false;
 else       return;
      move(table,up);
    }
  }
;
  upButton.addActionListener(buttonListener);
  downButton.addActionListener(buttonListener);
  return container;
}
