{
  final JComboBox cboDevice=new JComboBox();
  cboDevice.setEditable(false);
  cboDevice.setModel(new DeviceConfigurationComboBoxModel(mediaService.getDeviceConfiguration(),type));
  final JPanel portAudioPanel;
  if (type == DeviceConfigurationComboBoxModel.AUDIO) {
    portAudioPanel=new TransparentPanel(new GridBagLayout());
    portAudioPanel.setPreferredSize(new Dimension(WIDTH,200));
    portAudioPanel.setMaximumSize(new Dimension(WIDTH,200));
    cboDevice.addItemListener(new ItemListener(){
      public void itemStateChanged(      ItemEvent e){
        if (ItemEvent.SELECTED == e.getStateChange()) {
          if (DeviceConfiguration.AUDIO_SYSTEM_PORTAUDIO.equals(e.getItem()))           createPortAudioControls(portAudioPanel);
 else           portAudioPanel.removeAll();
          portAudioPanel.revalidate();
          portAudioPanel.repaint();
        }
      }
    }
);
    if (DeviceConfiguration.AUDIO_SYSTEM_PORTAUDIO.equals(cboDevice.getSelectedItem()))     createPortAudioControls(portAudioPanel);
  }
 else   portAudioPanel=null;
  JPanel pnlDeviceAndDetails=new TransparentPanel(new BorderLayout());
  if (addTypeCbo) {
    Container pnlDevice=new TransparentPanel(new FlowLayout(FlowLayout.CENTER));
    JLabel label=new JLabel(getLabelText(type));
    label.setDisplayedMnemonic(getDisplayedMnemonic(type));
    label.setLabelFor(cboDevice);
    pnlDevice.setMaximumSize(new Dimension(WIDTH,25));
    pnlDevice.add(label);
    pnlDevice.add(cboDevice);
    pnlDeviceAndDetails.add(pnlDevice,BorderLayout.NORTH);
  }
  if (portAudioPanel != null)   pnlDeviceAndDetails.add(portAudioPanel,BorderLayout.CENTER);
 else {
    cboDevice.setLightWeightPopupEnabled(false);
    pnlDeviceAndDetails.add(createPreview(type,cboDevice),BorderLayout.CENTER);
  }
  return pnlDeviceAndDetails;
}
