{
  assertFalse("No installed accounts found",fixture.providerFactory.getRegisteredAccounts().isEmpty());
  assertNotNull("Found no provider corresponding to URI " + fixture.userID1,fixture.providerFactory.getProviderForAccount(fixture.provider1.getAccountID()));
  assertTrue("Failed to remove a provider corresponding to URI " + fixture.userID1,fixture.providerFactory.uninstallAccount(fixture.provider1.getAccountID()));
  assertTrue("Failed to remove a provider corresponding to URI " + fixture.userID1,fixture.providerFactory.uninstallAccount(fixture.provider2.getAccountID()));
  ServiceReference[] jabberProviderRefs=null;
  try {
    jabberProviderRefs=fixture.bc.getServiceReferences(ProtocolProviderService.class.getName(),"(" + ProtocolProviderFactory.PROTOCOL + "="+ ProtocolNames.JABBER+ ")");
  }
 catch (  InvalidSyntaxException ex) {
    fail("We apparently got our filter wrong " + ex.getMessage());
  }
  assertTrue("A Protocol Provider Service was still regged as an osgi " + "service for Jabber URI:" + fixture.userID1 + "After it was explicitly uninstalled",jabberProviderRefs == null || jabberProviderRefs.length == 0);
  assertTrue("The Jabber provider factory kept a reference to the provider we just " + "uninstalled (uri=" + fixture.userID1 + ")",fixture.providerFactory.getRegisteredAccounts().isEmpty() && fixture.providerFactory.getProviderForAccount(fixture.provider1.getAccountID()) == null);
}
