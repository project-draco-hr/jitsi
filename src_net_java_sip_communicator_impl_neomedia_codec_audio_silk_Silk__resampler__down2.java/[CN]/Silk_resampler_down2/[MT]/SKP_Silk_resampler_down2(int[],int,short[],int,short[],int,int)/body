{
  int k, len2=inLen >> 1;
  int in32, out32, Y, X;
  assert(Silk_resampler_rom.SKP_Silk_resampler_down2_0 > 0);
  assert(Silk_resampler_rom.SKP_Silk_resampler_down2_1 < 0);
  for (k=0; k < len2; k++) {
    in32=in[in_offset + 2 * k] << 10;
    Y=in32 - S[S_offset];
    X=Silk_macros.SKP_SMLAWB(Y,Y,Silk_resampler_rom.SKP_Silk_resampler_down2_1);
    out32=S[S_offset] + X;
    S[S_offset]=in32 + X;
    in32=in[in_offset + 2 * k + 1] << 10;
    Y=in32 - S[S_offset + 1];
    X=Silk_macros.SKP_SMULWB(Y,Silk_resampler_rom.SKP_Silk_resampler_down2_0);
    out32=out32 + S[S_offset + 1];
    out32=out32 + X;
    S[S_offset + 1]=in32 + X;
    out[out_offset + k]=(short)Silk_SigProc_FIX.SKP_SAT16(Silk_SigProc_FIX.SKP_RSHIFT_ROUND(out32,11));
  }
}
