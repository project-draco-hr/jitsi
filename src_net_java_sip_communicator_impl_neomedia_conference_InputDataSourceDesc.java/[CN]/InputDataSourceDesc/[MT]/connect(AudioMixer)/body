{
  final DataSource effectiveInputDataSource=(transcodingDataSource == null) ? inputDataSource : transcodingDataSource;
  if (effectiveInputDataSource instanceof TranscodingDataSource) {
    if (connectThread == null) {
      connectThread=new Thread(){
        @Override public void run(){
          try {
            audioMixer.connect(effectiveInputDataSource,inputDataSource);
synchronized (InputDataSourceDesc.this) {
              connected=true;
            }
            audioMixer.connected(InputDataSourceDesc.this);
          }
 catch (          IOException ioex) {
            logger.error("Failed to connect to inputDataSource " + MediaStreamImpl.toString(inputDataSource),ioex);
          }
 finally {
synchronized (InputDataSourceDesc.this) {
              if (connectThread == Thread.currentThread())               connectThread=null;
            }
          }
        }
      }
;
      connectThread.setDaemon(true);
      connectThread.start();
    }
  }
 else {
    audioMixer.connect(effectiveInputDataSource,inputDataSource);
    connected=true;
  }
}
