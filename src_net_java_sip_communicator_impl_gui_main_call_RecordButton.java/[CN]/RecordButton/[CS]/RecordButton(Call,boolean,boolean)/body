{
  super(call,fullScreen,selected,ImageLoader.RECORD_BUTTON,null);
  callFileChooser=GenericFileDialog.create(null,resources.getI18NString("plugin.callrecordingconfig.SAVE_CALL"),SipCommFileChooser.SAVE_FILE_OPERATION);
  callFileChooser.addFilter(new SipCommFileFilter(){
    public boolean accept(    File f){
      return f.isDirectory() || isSupportedFormat(f);
    }
    public String getDescription(){
      StringBuilder description=new StringBuilder();
      description.append("Recorded call");
      Recorder recorder;
      try {
        recorder=getRecorder();
      }
 catch (      OperationFailedException ofex) {
        logger.error("Failed to get Recorder",ofex);
        recorder=null;
      }
      if (recorder != null) {
        List<String> supportedFormats=recorder.getSupportedFormats();
        if (supportedFormats != null) {
          description.append(" (");
          boolean firstSupportedFormat=true;
          for (          String supportedFormat : supportedFormats) {
            if (firstSupportedFormat)             firstSupportedFormat=false;
 else             description.append(", ");
            description.append("*.");
            description.append(supportedFormat);
          }
          description.append(')');
        }
      }
      return description.toString();
    }
  }
);
  String toolTip=resources.getI18NString("service.gui.RECORD_BUTTON_TOOL_TIP");
  String saveDir=configuration.getString(Recorder.SAVED_CALLS_PATH);
  if ((saveDir != null) && (saveDir.length() != 0))   toolTip+=" (" + saveDir + ")";
  setToolTipText(toolTip);
}
