{
  if (logger.isInfoEnabled())   logger.info("Start detecting DirectShow capture devices");
  DSManager manager=DSManager.getInstance();
  DSCaptureDevice devices[]=null;
  boolean captureDeviceInfoIsAdded=false;
  devices=manager.getCaptureDevices();
  if (devices == null || devices.length == 0) {
    throw new Exception("no devices!");
  }
  for (int i=0; i < devices.length; i++) {
    DSFormat fmt=devices[i].getFormat();
    long pixelFormat=fmt.getPixelFormat();
    Format format=null;
    int ffmpegPixFmt=(int)DataSource.getFFmpegPixFmt(pixelFormat);
    if (ffmpegPixFmt != FFmpeg.PIX_FMT_NONE) {
      format=new AVFrameFormat(ffmpegPixFmt,(int)pixelFormat);
    }
 else {
      logger.warn("No support for this webcam: " + devices[i].getName() + "(format "+ pixelFormat+ " not supported)");
      continue;
    }
    if (logger.isInfoEnabled()) {
      DSFormat[] fs=devices[i].getSupportedFormats();
      for (      DSFormat f : fs) {
        if (f.getWidth() != 0 && f.getHeight() != 0)         logger.info("Webcam available resolution for " + devices[i].getName() + ":"+ f.getWidth()+ "x"+ f.getHeight());
      }
    }
    CaptureDeviceInfo device=new CaptureDeviceInfo(devices[i].getName(),new MediaLocator(LOCATOR_PROTOCOL + ':' + devices[i].getName()),new Format[]{format});
    if (logger.isInfoEnabled())     logger.info("Found[" + i + "]: "+ device.getName());
    CaptureDeviceManager.addDevice(device);
    captureDeviceInfoIsAdded=true;
  }
  if (captureDeviceInfoIsAdded)   CaptureDeviceManager.commit();
  devices=null;
  DSManager.dispose();
  if (logger.isInfoEnabled())   logger.info("Finish detecting DirectShow capture devices");
}
