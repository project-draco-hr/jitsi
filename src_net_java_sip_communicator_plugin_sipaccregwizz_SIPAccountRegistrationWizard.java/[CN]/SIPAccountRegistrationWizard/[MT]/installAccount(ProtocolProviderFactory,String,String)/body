{
  Hashtable accountProperties=new Hashtable();
  if (registration.isRememberPassword()) {
    accountProperties.put(ProtocolProviderFactory.PASSWORD,passwd);
  }
  accountProperties.put(ProtocolProviderFactory.SERVER_ADDRESS,registration.getServerAddress());
  accountProperties.put(ProtocolProviderFactory.SERVER_PORT,registration.getServerPort());
  accountProperties.put(ProtocolProviderFactory.PROXY_ADDRESS,registration.getProxy());
  accountProperties.put(ProtocolProviderFactory.PROXY_PORT,registration.getProxyPort());
  accountProperties.put(ProtocolProviderFactory.PREFERRED_TRANSPORT,registration.getPreferredTransport());
  if (isModification) {
    providerFactory.uninstallAccount(protocolProvider.getAccountID());
    this.protocolProvider=null;
  }
  try {
    AccountID accountID=providerFactory.installAccount(user,accountProperties);
    ServiceReference serRef=providerFactory.getProviderForAccount(accountID);
    protocolProvider=(ProtocolProviderService)SIPAccRegWizzActivator.bundleContext.getService(serRef);
  }
 catch (  IllegalArgumentException e) {
    JOptionPane.showMessageDialog(null,e.getMessage());
  }
catch (  IllegalStateException e) {
    JOptionPane.showMessageDialog(null,e.getMessage());
  }
  return protocolProvider;
}
