{
  DataSource captureDevice=getConnectedCaptureDevice();
  if (captureDevice != null) {
    Processor processor=null;
    Throwable exception=null;
    try {
      processor=Manager.createProcessor(captureDevice);
    }
 catch (    IOException ioe) {
      exception=ioe;
    }
catch (    NoProcessorException npe) {
      exception=npe;
    }
    if (exception != null)     logger.error("Failed to create Processor for " + captureDevice,exception);
 else {
      if (processorControllerListener == null)       processorControllerListener=new ControllerListener(){
        /** 
 * Notifies this <tt>ControllerListener</tt> that
 * the <tt>Controller</tt> which it is registered
 * with has generated an event.
 * @param event the <tt>ControllerEvent</tt>
 * specifying the <tt>Controller</tt> which is the
 * source of the event and the very type of the
 * event
 * @see ControllerListener#controllerUpdate(ControllerEvent)
 */
        public void controllerUpdate(        ControllerEvent event){
          processorControllerUpdate(event);
        }
      }
;
      processor.addControllerListener(processorControllerListener);
      if (waitForState(processor,Processor.Configured)) {
        this.processor=processor;
        processorIsPrematurelyClosed=false;
      }
 else {
        if (processorControllerListener != null)         processor.removeControllerListener(processorControllerListener);
        processor=null;
      }
    }
  }
  return this.processor;
}
