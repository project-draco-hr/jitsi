{
  bundleContext=bc;
  faService=ServiceUtils.getService(bundleContext,FileAccessService.class);
  ConfigurationService configurationService=ServiceUtils.getService(bundleContext,ConfigurationService.class);
  String fileName=configurationService.getString(FILE_NAME_PROPERTY);
  if (fileName == null) {
    fileName=System.getProperty(FILE_NAME_PROPERTY);
    if (fileName == null)     fileName=DEFAULT_FILE_NAME;
  }
  try {
    contactlistFile=faService.getPrivatePersistentFile(fileName,FileCategory.PROFILE);
    if (!contactlistFile.exists() && !contactlistFile.createNewFile()) {
      throw new IOException("Failed to create file" + contactlistFile.getAbsolutePath());
    }
  }
 catch (  Exception ex) {
    logger.error("Failed to get a reference to the contact list file.",ex);
    throw new IOException("Failed to get a reference to the contact " + "list file=" + fileName + ". error was:"+ ex.getMessage());
  }
  multiTenantMode=configurationService.getBoolean(MULTI_TENANT_MODE_PROP,multiTenantMode);
  try {
    contactlistTrans=faService.createFailSafeTransaction(this.contactlistFile);
    contactlistTrans.restoreFile();
  }
 catch (  NullPointerException e) {
    logger.error("the contactlist file is null",e);
  }
catch (  IllegalStateException e) {
    logger.error("The contactlist file can't be found",e);
  }
  try {
    DocumentBuilder builder=XMLUtils.newDocumentBuilderFactory().newDocumentBuilder();
    if (contactlistFile.length() == 0) {
      contactListDocument=builder.newDocument();
      initVirginDocument(mclServImpl,contactListDocument);
      storeContactList0();
    }
 else {
      try {
        contactListDocument=builder.parse(contactlistFile);
      }
 catch (      Throwable ex) {
        logger.error("Error parsing configuration file",ex);
        logger.error("Creating replacement file");
        contactlistFile.delete();
        contactlistFile.createNewFile();
        contactListDocument=builder.newDocument();
        initVirginDocument(mclServImpl,contactListDocument);
        storeContactList0();
      }
    }
  }
 catch (  ParserConfigurationException ex) {
    logger.error("Error finding configuration for default parsers",ex);
  }
  mclServImpl.addMetaContactListListener(this);
  this.mclServiceImpl=mclServImpl;
  started=true;
  this.launchStorageThread();
}
