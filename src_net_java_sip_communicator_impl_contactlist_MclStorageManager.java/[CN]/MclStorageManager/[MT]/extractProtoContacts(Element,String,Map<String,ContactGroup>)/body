{
  if (logger.isTraceEnabled())   logger.trace("Extracting proto contacts for " + XMLUtils.getAttribute(metaContactNode,"uid"));
  List<StoredProtoContactDescriptor> protoContacts=new LinkedList<StoredProtoContactDescriptor>();
  NodeList children=metaContactNode.getChildNodes();
  List<Node> duplicates=new LinkedList<Node>();
  for (int i=0; i < children.getLength(); i++) {
    Node currentNode=children.item(i);
    if (currentNode.getNodeName() == null)     continue;
    if (currentNode.getNodeType() != Node.ELEMENT_NODE || !currentNode.getNodeName().equals(PROTO_CONTACT_NODE_NAME))     continue;
    String contactAccountID=XMLUtils.getAttribute(currentNode,ACCOUNT_ID_ATTR_NAME);
    if (!accountID.equals(contactAccountID))     continue;
    String contactAddress=XMLUtils.getAttribute(currentNode,PROTO_CONTACT_ADDRESS_ATTR_NAME);
    if (StoredProtoContactDescriptor.findContactInList(contactAddress,protoContacts) != null) {
      duplicates.add(currentNode);
      continue;
    }
    String protoGroupUID=XMLUtils.getAttribute(currentNode,PARENT_PROTO_GROUP_UID_ATTR_NAME);
    Element persistentDataNode=XMLUtils.findChild((Element)currentNode,PERSISTENT_DATA_NODE_NAME);
    String persistentData=(persistentDataNode == null) ? "" : XMLUtils.getText(persistentDataNode);
    protoContacts.add(new StoredProtoContactDescriptor(contactAddress,persistentData,protoGroups.get(protoGroupUID)));
  }
  for (  Node node : duplicates) {
    metaContactNode.removeChild(node);
  }
  return protoContacts;
}
