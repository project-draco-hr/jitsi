{
  Hashtable accountProperties=new Hashtable();
  accountProperties.put("first",registration.getFirst());
  accountProperties.put("last",registration.getLast());
  accountProperties.put("mail",registration.getMail());
  accountProperties.put(ProtocolProviderFactory.NO_PASSWORD_REQUIRED,new Boolean(true).toString());
  accountProperties.put("rememberContacts",new Boolean(registration.isRememberContacts()).toString());
  if (isModification) {
    providerFactory.uninstallAccount(protocolProvider.getAccountID());
    this.protocolProvider=null;
    this.isModification=false;
  }
  try {
    AccountID accountID=providerFactory.installAccount(user,accountProperties);
    ServiceReference serRef=providerFactory.getProviderForAccount(accountID);
    protocolProvider=(ProtocolProviderService)ZeroconfAccRegWizzActivator.bundleContext.getService(serRef);
  }
 catch (  IllegalArgumentException exc) {
    ZeroconfAccRegWizzActivator.getUIService().getPopupDialog().showMessagePopupDialog(exc.getMessage(),Resources.getString("error"),PopupDialog.ERROR_MESSAGE);
  }
catch (  IllegalStateException exc) {
    ZeroconfAccRegWizzActivator.getUIService().getPopupDialog().showMessagePopupDialog(exc.getMessage(),Resources.getString("error"),PopupDialog.ERROR_MESSAGE);
  }
  return protocolProvider;
}
