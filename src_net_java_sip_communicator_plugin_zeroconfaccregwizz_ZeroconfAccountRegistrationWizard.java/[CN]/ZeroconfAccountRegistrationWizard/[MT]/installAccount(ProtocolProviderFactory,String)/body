{
  Hashtable<String,String> accountProperties=new Hashtable<String,String>();
  accountProperties.put(ProtocolProviderFactory.ACCOUNT_ICON_PATH,"resources/images/protocol/zeroconf/zeroconf32x32.png");
  accountProperties.put("first",registration.getFirst());
  accountProperties.put("last",registration.getLast());
  accountProperties.put("mail",registration.getMail());
  accountProperties.put(ProtocolProviderFactory.NO_PASSWORD_REQUIRED,new Boolean(true).toString());
  accountProperties.put("rememberContacts",new Boolean(registration.isRememberContacts()).toString());
  if (isModification()) {
    providerFactory.uninstallAccount(protocolProvider.getAccountID());
    this.protocolProvider=null;
    setModification(false);
  }
  try {
    AccountID accountID=providerFactory.installAccount(user,accountProperties);
    ServiceReference serRef=providerFactory.getProviderForAccount(accountID);
    protocolProvider=(ProtocolProviderService)ZeroconfAccRegWizzActivator.bundleContext.getService(serRef);
  }
 catch (  IllegalStateException exc) {
    logger.warn(exc.getMessage());
    throw new OperationFailedException("Account already exists.",OperationFailedException.IDENTIFICATION_CONFLICT);
  }
catch (  Exception exc) {
    logger.warn(exc.getMessage());
    throw new OperationFailedException("Failed to add account",OperationFailedException.GENERAL_ERROR);
  }
  return protocolProvider;
}
