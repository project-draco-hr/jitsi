{
  final JFrame frame=new JFrame();
  frame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
  frame.setTitle(peerPanel.getPeerName());
  frame.setUndecorated(true);
  Component center=null;
  final Component buttonBar=createFullScreenButtonBar();
  final Container contentPane=frame.getContentPane();
  contentPane.setLayout(new FullScreenLayout(false,10));
  if (buttonBar != null)   contentPane.add(buttonBar,FullScreenLayout.SOUTH);
  if (center != null)   contentPane.add(center,FullScreenLayout.CENTER);
  Color background=Color.black;
  contentPane.setBackground(background);
  CallPeerRendererUtils.setBackground(center,background);
class FullScreenListener implements ContainerListener, KeyListener, WindowStateListener {
    public void componentAdded(    ContainerEvent event){
      event.getChild().addKeyListener(this);
    }
    public void componentRemoved(    ContainerEvent event){
      event.getChild().removeKeyListener(this);
    }
    public void keyPressed(    KeyEvent event){
      if (!event.isConsumed() && (event.getKeyCode() == KeyEvent.VK_ESCAPE)) {
        event.consume();
        exitFullScreen();
      }
    }
    public void keyReleased(    KeyEvent event){
    }
    public void keyTyped(    KeyEvent event){
    }
    public void windowStateChanged(    WindowEvent event){
switch (event.getID()) {
case WindowEvent.WINDOW_CLOSED:
case WindowEvent.WINDOW_DEACTIVATED:
case WindowEvent.WINDOW_ICONIFIED:
case WindowEvent.WINDOW_LOST_FOCUS:
        exitFullScreen();
      break;
  }
}
}
FullScreenListener listener=new FullScreenListener();
CallPeerRendererUtils.addKeyListener(frame,listener);
if (center instanceof Container) ((Container)center).addContainerListener(listener);
frame.addWindowStateListener(listener);
GraphicsConfiguration graphicsConfiguration=getGraphicsConfiguration();
if (graphicsConfiguration != null) {
GraphicsDevice graphicsDevice=graphicsConfiguration.getDevice();
this.fullScreenWindow=frame;
graphicsDevice.setFullScreenWindow(frame);
}
GuiUtils.addWindow(fullScreenWindow);
}
