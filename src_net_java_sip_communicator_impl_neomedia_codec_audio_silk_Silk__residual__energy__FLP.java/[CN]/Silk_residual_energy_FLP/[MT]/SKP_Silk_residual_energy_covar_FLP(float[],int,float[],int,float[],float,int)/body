{
  int i, j, k;
  float tmp, nrg=0, regularization;
  assert(D >= 0);
  regularization=REGULARIZATION_FACTOR * (wXX[wXX_offset + 0] + wXX[wXX_offset + D * D - 1]);
  for (k=0; k < MAX_ITERATIONS_RESIDUAL_NRG; k++) {
    nrg=wxx;
    tmp=0.0f;
    for (i=0; i < D; i++) {
      tmp+=wXx[i] * c[c_offset + i];
    }
    nrg-=2.0f * tmp;
    for (i=0; i < D; i++) {
      tmp=0.0f;
      for (j=i + 1; j < D; j++) {
        tmp+=wXX[wXX_offset + i + j * D] * c[c_offset + j];
      }
      nrg+=c[c_offset + i] * (2.0f * tmp + wXX[wXX_offset + i + D * i] * c[c_offset + i]);
    }
    if (nrg > 0) {
      break;
    }
 else {
      for (i=0; i < D; i++) {
        wXX[wXX_offset + i + D * i]+=regularization;
      }
      regularization*=2.0f;
    }
  }
  if (k == MAX_ITERATIONS_RESIDUAL_NRG) {
    assert(nrg == 0);
    nrg=1.0f;
  }
  return nrg;
}
