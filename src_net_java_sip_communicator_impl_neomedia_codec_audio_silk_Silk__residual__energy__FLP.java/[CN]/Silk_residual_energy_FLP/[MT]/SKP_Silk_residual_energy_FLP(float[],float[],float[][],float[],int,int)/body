{
  int shift;
  float LPC_res_ptr[], LPC_res[]=new float[(Silk_define.MAX_FRAME_LENGTH + Silk_define.NB_SUBFR * Silk_define.MAX_LPC_ORDER) / 2];
  LPC_res_ptr=LPC_res;
  int LPC_res_ptr_offset=LPC_order;
  shift=LPC_order + subfr_length;
  Silk_LPC_analysis_filter_FLP.SKP_Silk_LPC_analysis_filter_FLP(LPC_res,a[0],x,0 + 0 * shift,2 * shift,LPC_order);
  nrgs[0]=(float)(gains[0] * gains[0] * Silk_energy_FLP.SKP_Silk_energy_FLP(LPC_res_ptr,LPC_res_ptr_offset + 0 * shift,subfr_length));
  nrgs[1]=(float)(gains[1] * gains[1] * Silk_energy_FLP.SKP_Silk_energy_FLP(LPC_res_ptr,LPC_res_ptr_offset + 1 * shift,subfr_length));
  Silk_LPC_analysis_filter_FLP.SKP_Silk_LPC_analysis_filter_FLP(LPC_res,a[1],x,0 + 2 * shift,2 * shift,LPC_order);
  nrgs[2]=(float)(gains[2] * gains[2] * Silk_energy_FLP.SKP_Silk_energy_FLP(LPC_res_ptr,LPC_res_ptr_offset + 0 * shift,subfr_length));
  nrgs[3]=(float)(gains[3] * gains[3] * Silk_energy_FLP.SKP_Silk_energy_FLP(LPC_res_ptr,LPC_res_ptr_offset + 1 * shift,subfr_length));
}
