{
  if (logger.isDebugEnabled())   logger.debug("Started.");
  NeomediaActivator.bundleContext=bundleContext;
  mediaServiceImpl=(MediaServiceImpl)LibJitsi.getMediaService();
  bundleContext.registerService(MediaService.class.getName(),mediaServiceImpl,null);
  if (logger.isDebugEnabled())   logger.debug("Media Service ... [REGISTERED]");
  mediaConfiguration=new MediaConfigurationImpl();
  bundleContext.registerService(MediaConfigurationService.class.getName(),getMediaConfiguration(),null);
  if (logger.isDebugEnabled())   logger.debug("Media Configuration ... [REGISTERED]");
  ConfigurationService cfg=NeomediaActivator.getConfigurationService();
  Dictionary<String,String> mediaProps=new Hashtable<String,String>();
  mediaProps.put(ConfigurationForm.FORM_TYPE,ConfigurationForm.GENERAL_TYPE);
  if ((cfg == null) || !cfg.getBoolean(AUDIO_CONFIG_DISABLED_PROP,false)) {
    final ConfigurationForm audioConfigurationForm=new LazyConfigurationForm(AudioConfigurationPanel.class.getName(),getClass().getClassLoader(),"plugin.mediaconfig.AUDIO_ICON","impl.neomedia.configform.AUDIO",3);
    bundleContext.registerService(ConfigurationForm.class.getName(),audioConfigurationForm,mediaProps);
    if (deviceConfigurationPropertyChangeListener == null) {
      deviceConfigurationPropertyChangeListener=new PropertyChangeListener(){
        public void propertyChange(        PropertyChangeEvent event){
          if (DeviceConfiguration.PROP_AUDIO_SYSTEM_DEVICES.equals(event.getPropertyName())) {
            showAudioConfiguration();
          }
        }
      }
;
      mediaServiceImpl.getDeviceConfiguration().addPropertyChangeListener(deviceConfigurationPropertyChangeListener);
    }
  }
  if ((cfg == null) || !cfg.getBoolean(VIDEO_CONFIG_DISABLED_PROP,false)) {
    bundleContext.registerService(ConfigurationForm.class.getName(),new LazyConfigurationForm(VideoConfigurationPanel.class.getName(),getClass().getClassLoader(),"plugin.mediaconfig.VIDEO_ICON","impl.neomedia.configform.VIDEO",4),mediaProps);
  }
  if ((cfg == null) || !cfg.getBoolean(H264_CONFIG_DISABLED_PROP,false)) {
    Dictionary<String,String> h264Props=new Hashtable<String,String>();
    h264Props.put(ConfigurationForm.FORM_TYPE,ConfigurationForm.ADVANCED_TYPE);
    bundleContext.registerService(ConfigurationForm.class.getName(),new LazyConfigurationForm(ConfigurationPanel.class.getName(),getClass().getClassLoader(),"plugin.mediaconfig.VIDEO_ICON","impl.neomedia.configform.H264",-1,true),h264Props);
  }
  if ((cfg == null) || !cfg.getBoolean(ZRTP_CONFIG_DISABLED_PROP,false)) {
    Dictionary<String,String> securityProps=new Hashtable<String,String>();
    securityProps.put(ConfigurationForm.FORM_TYPE,ConfigurationForm.SECURITY_TYPE);
    bundleContext.registerService(ConfigurationForm.class.getName(),new LazyConfigurationForm(SecurityConfigForm.class.getName(),getClass().getClassLoader(),"impl.media.security.zrtp.CONF_ICON","impl.media.security.zrtp.TITLE",0),securityProps);
  }
  System.setProperty("gov.nist.core.STRIP_ADDR_SCOPES","true");
  AudioNotifierService audioNotifierService=LibJitsi.getAudioNotifierService();
  audioNotifierService.setMute((cfg == null) || !cfg.getBoolean("net.java.sip.communicator" + ".impl.sound.isSoundEnabled",true));
  bundleContext.registerService(AudioNotifierService.class.getName(),audioNotifierService,null);
  if (logger.isInfoEnabled())   logger.info("Audio Notifier Service ...[REGISTERED]");
  if ((cfg == null) || !cfg.getBoolean(CALL_RECORDING_CONFIG_DISABLED_PROP,false)) {
    Dictionary<String,String> callRecordingProps=new Hashtable<String,String>();
    callRecordingProps.put(ConfigurationForm.FORM_TYPE,ConfigurationForm.ADVANCED_TYPE);
    bundleContext.registerService(ConfigurationForm.class.getName(),new LazyConfigurationForm(CallRecordingConfigForm.class.getName(),getClass().getClassLoader(),null,"plugin.callrecordingconfig.CALL_RECORDING_CONFIG",1100,true),callRecordingProps);
  }
}
