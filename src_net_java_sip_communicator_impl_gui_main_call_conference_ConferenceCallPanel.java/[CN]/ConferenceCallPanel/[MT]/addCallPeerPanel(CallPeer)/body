{
  if (callPeerPanels.containsKey(peer))   return;
  ConferenceCallPeerRenderer confPeerRenderer;
  UIVideoHandler videoHandler=new UIVideoHandler(peer,this,videoContainers);
  videoHandler.addVideoListener();
  videoHandler.addRemoteControlListener();
  if (peer.getConferenceMemberCount() > 0) {
    confPeerRenderer=new ConferenceFocusPanel(this,callPanel,peer,videoHandler);
    peer.addConferenceMembersSoundLevelListener(confPeerRenderer.getConferenceMembersSoundLevelListener());
    peer.addStreamSoundLevelListener(confPeerRenderer.getStreamSoundLevelListener());
  }
 else {
    confPeerRenderer=new ConferencePeerPanel(this,callPanel,peer,videoHandler);
    peer.addStreamSoundLevelListener(confPeerRenderer.getStreamSoundLevelListener());
  }
  callPeerPanels.put(peer,confPeerRenderer);
  constraints.fill=GridBagConstraints.BOTH;
  constraints.gridx=0;
  constraints.gridy++;
  constraints.weightx=1;
  constraints.weighty=0;
  constraints.insets=new Insets(0,0,3,0);
  mainPanel.add((Component)confPeerRenderer,constraints);
  CallPeerAdapter callPeerAdapter=new CallPeerAdapter(peer,confPeerRenderer);
  confPeerRenderer.setCallPeerAdapter(callPeerAdapter);
  peer.addCallPeerListener(callPeerAdapter);
  peer.addPropertyChangeListener(callPeerAdapter);
  peer.addCallPeerSecurityListener(callPeerAdapter);
  peer.addCallPeerConferenceListener(callPeerAdapter);
  SwingUtilities.invokeLater(scrollToBottomRunnable);
}
