{
  int x=evt.getX();
  int y=evt.getY();
  Rectangle callButtonRect=getCallButtonRect();
  if (isCallIconVisible && callButtonRect.contains(x,y)) {
    JTextComponent c=getComponent();
    String searchText=c.getText();
    if (searchText == null)     return;
    if (ConfigurationManager.isNormalizePhoneNumber()) {
      if (!StringUtils.containsLetters(searchText) && GuiActivator.getPhoneNumberService().isPhoneNumber(searchText)) {
        searchText=GuiActivator.getPhoneNumberService().normalize(searchText);
      }
 else {
        searchText=StringUtils.concatenateWords(searchText);
      }
    }
    getComponent().setToolTipText(callString + " " + searchText);
    ToolTipManager.sharedInstance().mouseEntered(new MouseEvent(getComponent(),0,x,y,x,y,0,false));
    isCallMouseOver=true;
    getComponent().setCursor(Cursor.getDefaultCursor());
    if (evt.getID() == MouseEvent.MOUSE_CLICKED) {
      List<ProtocolProviderService> telephonyProviders=CallManager.getTelephonyProviders();
      if (telephonyProviders.size() == 1) {
        CallManager.createCall(telephonyProviders.get(0),searchText);
      }
 else       if (telephonyProviders.size() > 1) {
        ChooseCallAccountPopupMenu chooseAccountDialog=new ChooseCallAccountPopupMenu(c,searchText,telephonyProviders);
        chooseAccountDialog.setLocation(getCallButtonRect().getLocation());
        chooseAccountDialog.showPopupMenu();
      }
    }
  }
 else {
    getComponent().setToolTipText("");
    ToolTipManager.sharedInstance().mouseExited(new MouseEvent(getComponent(),0,x,y,x,y,0,false));
    isCallMouseOver=false;
  }
  getComponent().repaint();
}
