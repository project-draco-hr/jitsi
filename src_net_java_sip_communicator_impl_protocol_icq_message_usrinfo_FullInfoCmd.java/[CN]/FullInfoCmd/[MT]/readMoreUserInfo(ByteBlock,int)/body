{
  List infoData=getInfoForRequest(requestID);
  int offset=1;
  String[] tmp=new String[1];
  offset+=2;
  short genderCode=LEBinaryTools.getUByte(block,offset);
  ServerStoredDetails.GenderDetail gender=genders[genderCode];
  if (gender != null)   infoData.add(gender);
  offset+=1;
  offset=readStrings(block,tmp,offset);
  try {
    if (tmp[0] != null)     infoData.add(new ServerStoredDetails.WebPageDetail(new URL(tmp[0])));
  }
 catch (  MalformedURLException ex) {
  }
  int birthdayYear=LEBinaryTools.getUShort(block,offset);
  offset+=2;
  short birthdayMonth=LEBinaryTools.getUByte(block,offset);
  offset+=1;
  short birthdayDay=LEBinaryTools.getUByte(block,offset);
  offset+=1;
  if (birthdayYear != 0 && birthdayMonth != 0 && birthdayDay != 0) {
    Calendar birthDate=Calendar.getInstance();
    birthDate.set(Calendar.YEAR,birthdayYear);
    birthDate.set(Calendar.MONTH,birthdayMonth);
    birthDate.set(Calendar.DAY_OF_MONTH,birthdayDay);
    infoData.add(new ServerStoredDetails.BirthDateDetail(birthDate));
  }
  short speakingLanguage1=LEBinaryTools.getUByte(block,offset);
  offset+=1;
  logger.trace("read lang 1 " + speakingLanguage1);
  Locale spokenLanguage1=getSpokenLanguage(speakingLanguage1);
  if (spokenLanguage1 != null)   infoData.add(new ServerStoredDetails.SpokenLanguageDetail(spokenLanguage1));
  short speakingLanguage2=LEBinaryTools.getUByte(block,offset);
  offset+=1;
  logger.trace("read lang 2 " + speakingLanguage2);
  Locale spokenLanguage2=getSpokenLanguage(speakingLanguage2);
  if (spokenLanguage2 != null)   infoData.add(new ServerStoredDetails.SpokenLanguageDetail(spokenLanguage2));
  short speakingLanguage3=LEBinaryTools.getUByte(block,offset);
  offset+=1;
  logger.trace("read lang 3 " + speakingLanguage3);
  Locale spokenLanguage3=getSpokenLanguage(speakingLanguage3);
  if (spokenLanguage3 != null)   infoData.add(new ServerStoredDetails.SpokenLanguageDetail(spokenLanguage3));
  offset+=2;
  offset=readStrings(block,tmp,offset);
  if (tmp[0] != null)   infoData.add(new OriginCityDetail(tmp[0]));
  offset=readStrings(block,tmp,offset);
  if (tmp[0] != null)   infoData.add(new OriginProvinceDetail(tmp[0]));
  int originCountryCode=LEBinaryTools.getUShort(block,offset);
  offset+=2;
  Locale originCountryLocale=getCountry(originCountryCode);
  if (originCountryLocale != null)   infoData.add(new OriginCountryDetail(originCountryLocale));
  short userGMTOffset=LEBinaryTools.getUByte(block,offset);
  offset+=1;
  TimeZone userTimeZone=null;
  if (userGMTOffset >= 0)   userTimeZone=TimeZone.getTimeZone("GMT+" + userGMTOffset);
 else   userTimeZone=TimeZone.getTimeZone("GMT" + userGMTOffset);
  infoData.add(new ServerStoredDetails.TimeZoneDetail("GMT Offest",userTimeZone));
}
