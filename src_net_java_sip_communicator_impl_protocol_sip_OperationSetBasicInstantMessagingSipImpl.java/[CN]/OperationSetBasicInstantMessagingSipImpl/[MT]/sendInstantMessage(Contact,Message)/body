{
  if (!(to instanceof ContactSipImpl))   throw new IllegalArgumentException("The specified contact is not a Sip contact." + to);
  assertConnected();
  if (to.getPresenceStatus().equals(sipStatusEnum.getStatus(SipStatusEnum.OFFLINE)) && !offlineMessageSupported) {
    if (logger.isDebugEnabled())     logger.debug("trying to send a message to an offline contact");
    fireMessageDeliveryFailed(message,to,MessageDeliveryFailedEvent.OFFLINE_MESSAGES_NOT_SUPPORTED);
    return;
  }
  Request mes;
  try {
    mes=createMessageRequest(to,message);
  }
 catch (  OperationFailedException ex) {
    logger.error("Failed to create the message.",ex);
    fireMessageDeliveryFailed(message,to,MessageDeliveryFailedEvent.INTERNAL_ERROR);
    return;
  }
  try {
    sendMessageRequest(mes,to,message);
  }
 catch (  TransactionUnavailableException ex) {
    logger.error("Failed to create messageTransaction.\n" + "This is most probably a network connection error.",ex);
    fireMessageDeliveryFailed(message,to,MessageDeliveryFailedEvent.NETWORK_FAILURE);
    return;
  }
catch (  SipException ex) {
    logger.error("Failed to send the message.",ex);
    fireMessageDeliveryFailed(message,to,MessageDeliveryFailedEvent.INTERNAL_ERROR);
    return;
  }
}
