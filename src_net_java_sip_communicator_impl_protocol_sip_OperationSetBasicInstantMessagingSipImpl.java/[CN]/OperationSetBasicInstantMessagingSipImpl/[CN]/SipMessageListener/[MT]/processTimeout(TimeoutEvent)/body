{
  logger.error("Timeout event thrown : " + timeoutEvent.toString());
  if (timeoutEvent.isServerTransaction()) {
    logger.warn("The sender has probably not received our OK");
    return;
  }
  Request req=timeoutEvent.getClientTransaction().getRequest();
  String content=null;
  try {
    content=new String(req.getRawContent(),getCharset(req));
  }
 catch (  UnsupportedEncodingException ex) {
    logger.warn("failed to convert the message charset",ex);
    content=new String(req.getRawContent());
  }
  ToHeader toHeader=(ToHeader)req.getHeader(ToHeader.NAME);
  if (toHeader == null) {
    logger.error("received a request without a to header");
    return;
  }
  Contact to=resolveContact(toHeader.getAddress().getURI().toString());
  Message failedMessage=null;
  if (to == null) {
    logger.error("timeout on a message sent to an unknown contact : " + toHeader.getAddress().getURI().toString());
    failedMessage=createMessage(content);
  }
 else {
    String key=((CallIdHeader)req.getHeader(CallIdHeader.NAME)).getCallId();
    failedMessage=(Message)sentMsg.get(key);
    if (failedMessage == null) {
      logger.error("Couldn't find the sent message.");
      failedMessage=createMessage(content);
    }
  }
  MessageDeliveryFailedEvent evt=new MessageDeliveryFailedEvent(failedMessage,to,MessageDeliveryFailedEvent.INTERNAL_ERROR,new Date());
  fireMessageEvent(evt);
}
