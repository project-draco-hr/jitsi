{
  Collection msgList=null;
  if (historyContact instanceof MetaContact) {
    msgList=msgHistory.findByEndDate((MetaContact)historyContact,new Date(System.currentTimeMillis()));
  }
 else   if (historyContact instanceof ChatRoomWrapper) {
    ChatRoomWrapper chatRoomWrapper=(ChatRoomWrapper)historyContact;
    if (chatRoomWrapper.getChatRoom() == null)     return;
    msgList=msgHistory.findByEndDate(chatRoomWrapper.getChatRoom(),new Date(System.currentTimeMillis()));
  }
  if (msgList != null)   for (  Object o : msgList) {
    Date date=null;
    if (o instanceof MessageDeliveredEvent) {
      MessageDeliveredEvent evt=(MessageDeliveredEvent)o;
      date=evt.getTimestamp();
    }
 else     if (o instanceof MessageReceivedEvent) {
      MessageReceivedEvent evt=(MessageReceivedEvent)o;
      date=evt.getTimestamp();
    }
 else     if (o instanceof ChatRoomMessageReceivedEvent) {
      ChatRoomMessageReceivedEvent evt=(ChatRoomMessageReceivedEvent)o;
      date=evt.getTimestamp();
    }
 else     if (o instanceof ChatRoomMessageDeliveredEvent) {
      ChatRoomMessageDeliveredEvent evt=(ChatRoomMessageDeliveredEvent)o;
      date=evt.getTimestamp();
    }
    boolean containsDate=false;
    long milisecondsPerDay=24 * 60 * 60* 1000;
    for (int j=0; !containsDate && j < datesVector.size(); j++) {
      Date date1=(Date)datesVector.get(j);
      containsDate=Math.floor(date1.getTime() / milisecondsPerDay) == Math.floor(date.getTime() / milisecondsPerDay);
    }
    if (!containsDate) {
      datesVector.add(new Date(date.getTime() - date.getTime() % milisecondsPerDay));
    }
  }
  if ((msgList != null) && (msgList.size() > 0)) {
    Runnable updateDatesPanel=new Runnable(){
      public void run(){
        Date date=null;
        for (int i=0; i < datesVector.size(); i++) {
          date=(Date)datesVector.get(i);
          datesPanel.addDate(date);
        }
        if (date != null) {
          ignoreProgressDate=date;
        }
        int lastDateIndex=datesPanel.getDatesNumber() - 1;
        datesPanel.setSelected(lastDateIndex);
      }
    }
;
    SwingUtilities.invokeLater(updateDatesPanel);
  }
}
