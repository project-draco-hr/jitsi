{
  Collection<Object> msgList=null;
  if (historyContact instanceof MetaContact) {
    msgList=history.findByKeyword(HISTORY_FILTER,(MetaContact)historyContact,keyword);
  }
 else   if (historyContact instanceof ChatRoomWrapper) {
    ChatRoomWrapper chatRoomWrapper=(ChatRoomWrapper)historyContact;
    if (chatRoomWrapper.getChatRoom() == null)     return;
    msgList=history.findByKeyword(HISTORY_FILTER,chatRoomWrapper.getChatRoom(),keyword);
  }
  if (msgList != null)   for (  Object o : msgList) {
    long date=0;
    if (o instanceof MessageDeliveredEvent) {
      MessageDeliveredEvent evt=(MessageDeliveredEvent)o;
      date=evt.getTimestamp();
    }
 else     if (o instanceof MessageReceivedEvent) {
      MessageReceivedEvent evt=(MessageReceivedEvent)o;
      date=evt.getTimestamp();
    }
    long milisecondsPerDay=24 * 60 * 60* 1000;
    for (    Date date1 : datesDisplayed) {
      if (Math.floor(date1.getTime() / milisecondsPerDay) == Math.floor(date / milisecondsPerDay) && !keywordDatesVector.contains(date1)) {
        keywordDatesVector.add(date1);
      }
    }
  }
  Runnable updateDatesPanel=new Runnable(){
    public void run(){
      datesPanel.removeAllDates();
      if (keywordDatesVector.size() > 0) {
        Date date=null;
        for (int i=0; i < keywordDatesVector.size(); i++) {
          date=keywordDatesVector.get(i);
          if (!datesPanel.containsDate(date))           datesPanel.addDate(date);
        }
        if (date != null) {
          ignoreProgressDate=date;
        }
        datesPanel.setSelected(datesPanel.getDatesNumber() - 1);
      }
 else {
        chatConvPanel.setDefaultContent();
      }
    }
  }
;
  SwingUtilities.invokeLater(updateDatesPanel);
}
