{
  String newContactID="TestyPesty";
  MetaContact metaContact=fixture.metaClService.getRoot().getMetaContact(0);
  MetaContact dstMetaContact=fixture.metaClService.getRoot().getMetaContact(1);
  MclEventCollector evtCollector=new MclEventCollector();
  fixture.metaClService.addMetaContactListListener(evtCollector);
  fixture.metaClService.addNewContactToMetaContact(fixture.mockProvider,metaContact,newContactID);
  fixture.metaClService.removeMetaContactListListener(evtCollector);
  assertEquals("Dest. meta Contact did not seem to contain an " + "extra proto contact.",2,metaContact.getContactCount());
  MockContact newContact=(MockContact)metaContact.getContact(newContactID,fixture.mockProvider);
  assertNotNull("newContact",newContact);
  assertSame("Proto specific contact in mock contact list.",newContact,fixture.mockPresOpSet.getServerStoredContactListRoot().getContact(newContactID));
  assertEquals("Events delivered while adding a new contact to a " + "meta contact",1,evtCollector.collectedMetaContactEvents.size());
  ProtoContactEvent event=(ProtoContactEvent)evtCollector.collectedMetaContactEvents.remove(0);
  assertSame("Source contact in ProtoContactEvent gen. upon add.",newContact,event.getProtoContact());
  assertSame("Source provider in ProtoContactEvent gen. upon add.",fixture.mockProvider,event.getProtoContact().getProtocolProvider());
  assertEquals("Event ID in MetaContactEvent gen. upon add.",ProtoContactEvent.PROTO_CONTACT_ADDED,event.getPropertyName());
  fixture.metaClService.addMetaContactListListener(evtCollector);
  fixture.metaClService.moveContact(newContact,dstMetaContact);
  fixture.metaClService.removeMetaContactListListener(evtCollector);
  assertEquals("Orig. Meta Contact did not seem restored after removing " + "the newly added contact.",1,metaContact.getContactCount());
  assertEquals("A Meta Contact did not seem updated after moving a " + "contact inside it.",2,dstMetaContact.getContactCount());
  newContact=(MockContact)dstMetaContact.getContact(newContactID,fixture.mockProvider);
  assertNotNull("newContact",newContact);
  assertEquals("Events delivered while adding a moving a proto contact. ",1,evtCollector.collectedMetaContactEvents.size());
  event=(ProtoContactEvent)evtCollector.collectedMetaContactEvents.remove(0);
  assertSame("Source contact in ProtoContactEvent gen. upon move.",newContact,event.getProtoContact());
  assertSame("Parent meta contact in ProtoContactEvent gen. upon move.",dstMetaContact,event.getParent());
  assertSame("Source provider in ProtoContactEvent gen. upon move.",fixture.mockProvider,event.getProtoContact().getProtocolProvider());
  assertEquals("Event ID in ProtoContactEvent gen. upon add.",ProtoContactEvent.PROTO_CONTACT_MOVED,event.getPropertyName());
  fixture.metaClService.addMetaContactListListener(evtCollector);
  fixture.metaClService.removeContact(newContact);
  fixture.metaClService.removeMetaContactListListener(evtCollector);
  assertEquals("Dest. Meta Contact did not seem restored after removing " + "the newly added contact.",1,dstMetaContact.getContactCount());
  assertNull("The MetaContactList did not remove a contact from the " + "MockList on del.",fixture.mockPresOpSet.getServerStoredContactListRoot().getContact(newContactID));
  assertEquals("Events delivered while adding a new contact to a " + "meta contact",1,evtCollector.collectedMetaContactEvents.size());
  event=(ProtoContactEvent)evtCollector.collectedMetaContactEvents.remove(0);
  assertSame("Source contact in ProtoContactEvent gen. upon remove.",newContact,event.getProtoContact());
  assertSame("Parent meta contact in ProtoContactEvent gen. upon remove.",dstMetaContact,event.getParent());
  assertSame("Source provider in ProtoContactEvent gen. upon remove.",fixture.mockProvider,event.getProtoContact().getProtocolProvider());
  assertEquals("Event ID in ProtoContactEvent gen. upon remove.",ProtoContactEvent.PROTO_CONTACT_REMOVED,event.getPropertyName());
}
