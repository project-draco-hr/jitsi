{
  MclEventCollector mclEvtCollector=new MclEventCollector();
  fixture.metaClService.addMetaContactListListener(mclEvtCollector);
  fixture.mockPresOpSet.subscribe(newSubscriptionName);
  fixture.metaClService.removeMetaContactListListener(mclEvtCollector);
  MockContact newProtoContact=(MockContact)fixture.mockPresOpSet.findContactByID(newSubscriptionName);
  MetaContact newMetaContact=fixture.metaClService.findMetaContactByContact(newProtoContact);
  assertNotNull("The meta contact list was not updated after adding " + "contact " + newProtoContact + " to the mock provider.",newMetaContact);
  assertEquals("Number of evts dispatched while adding a contact",1,mclEvtCollector.collectedMetaContactEvents.size());
  MetaContactEvent evt=(MetaContactEvent)mclEvtCollector.collectedMetaContactEvents.remove(0);
  assertEquals("ID of the generated event",MetaContactEvent.META_CONTACT_ADDED,evt.getEventID());
  assertEquals("Parent group of the source contact",fixture.metaClService.getRoot(),evt.getParentGroup());
  assertEquals("Source meta contact.",newMetaContact,evt.getSourceMetaContact());
  fixture.metaClService.addMetaContactListListener(mclEvtCollector);
  fixture.mockPresOpSet.unsubscribe(newProtoContact);
  fixture.metaClService.removeMetaContactListListener(mclEvtCollector);
  assertNull("The impl contact list did not update after a subscr. was removed.",fixture.metaClService.findMetaContactByContact(newProtoContact));
  assertEquals("Number of evts dispatched while adding a contact",1,mclEvtCollector.collectedMetaContactEvents.size());
  evt=(MetaContactEvent)mclEvtCollector.collectedMetaContactEvents.remove(0);
  assertEquals("ID of the generated event",MetaContactEvent.META_CONTACT_REMOVED,evt.getEventID());
  assertEquals("Parent group of the source contact",fixture.metaClService.getRoot(),evt.getParentGroup());
  assertEquals("Source meta contact.",newMetaContact,evt.getSourceMetaContact());
}
