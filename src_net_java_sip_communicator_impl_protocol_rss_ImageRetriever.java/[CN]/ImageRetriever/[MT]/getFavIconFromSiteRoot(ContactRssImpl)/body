{
  Image selectedIcon;
  URL location=null;
  int maxWidth=0;
  int maxColors=0;
  int crtDescriptor=-1;
  ByteArrayOutputStream output=new ByteArrayOutputStream();
  byte[] result=null;
  try {
    URL feedLocation=new URL(contact.getRssFeedReader().getURL());
    location=new URL(feedLocation.getProtocol() + "://" + feedLocation.getHost()+ "/favicon.ico");
    ICOFile favicon=new ICOFile(location);
    if (logger.isTraceEnabled())     logger.trace("Icon has " + favicon.getImageCount() + " pages");
    for (int i=0; i < favicon.getDescriptors().size(); i++) {
      BitmapDescriptor bmpDesc=favicon.getDescriptor(i);
      if ((maxWidth < bmpDesc.getWidth())) {
        maxWidth=bmpDesc.getWidth();
        maxColors=bmpDesc.getColorCount();
        crtDescriptor=i;
      }
      if ((maxColors < bmpDesc.getColorCount())) {
        maxWidth=bmpDesc.getWidth();
        maxColors=bmpDesc.getColorCount();
        crtDescriptor=i;
      }
    }
    if (crtDescriptor == -1) {
      return null;
    }
    selectedIcon=favicon.getDescriptor(crtDescriptor).getImageRGB();
    ImageIO.write((BufferedImage)selectedIcon,"PNG",output);
    result=output.toByteArray();
    if (logger.isTraceEnabled())     logger.trace("Result has " + result.length + " bytes");
    if (logger.isTraceEnabled())     logger.trace("Icon is " + maxWidth + " px X "+ maxWidth+ " px @ "+ maxColors+ " colors");
    output.close();
    return result;
  }
 catch (  MalformedURLException murlex) {
    logger.error("Malformed URL " + murlex,murlex);
  }
catch (  IOException ioex) {
    logger.warn("I/O Error on favicon retrieval. " + ioex.getMessage());
    if (logger.isDebugEnabled())     logger.debug("I/O Error on favicon retrieval. " + ioex,ioex);
  }
catch (  Exception ex) {
    logger.warn("Unknown error on favicon retrieval. " + ex + ". Error for location: "+ location,ex);
    if (logger.isDebugEnabled())     logger.debug("",ex);
  }
  return null;
}
