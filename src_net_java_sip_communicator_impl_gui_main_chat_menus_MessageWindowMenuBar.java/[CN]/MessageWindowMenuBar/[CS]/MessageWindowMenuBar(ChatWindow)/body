{
  super("service.gui.CHAT_MENU_FOREGROUND");
  fileMenu=new FileMenu(parentWindow);
  editMenu=new EditMenu(parentWindow);
  optionsMenu=new OptionsMenu(parentWindow);
  helpMenu=new HelpMenu(parentWindow);
  this.init();
  pluginContainer=new PluginContainer(this,Container.CONTAINER_CHAT_MENU_BAR){
    /** 
 * Overrides{@link PluginContainer#addComponentToContainer(Component,JComponent,int)}.
 * Keeps the Help menu last as it is its conventional place.
 * @param component the <tt>Component</tt> to be added to
 * <tt>container</tt>
 * @param container the <tt>JComponent</tt> container to
 * which <tt>component</tt> is to be added
 * @param preferredIndex ignored because
 * <tt>MessageWindowMenuBar</tt> keeps the Help menu last as
 * it is its conventional place
 */
    @Override protected void addComponentToContainer(    Component component,    JComponent container,    int preferredIndex){
      if (component instanceof SIPCommMenu)       ((SIPCommMenu)component).setOpaque(false);
      container.add(component,getComponentIndex(helpMenu));
    }
  }
;
  parentWindow.addChatChangeListener(new ChatChangeListener(){
    public void chatChanged(    ChatPanel panel){
      MetaContact contact=GuiActivator.getUIService().getChatContact(panel);
      for (      PluginComponent c : pluginContainer.getPluginComponents())       c.setCurrentContact(contact);
    }
  }
);
}
