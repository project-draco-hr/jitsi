{
  if (logger.isTraceEnabled()) {
    logger.trace("Looking for call participant with callID " + callID + ", localTag "+ localTag+ ", and remoteTag "+ remoteTag+ " among "+ this.activeCalls.size()+ " calls.");
  }
  List<CallParticipantSipImpl> callParticipants=new ArrayList<CallParticipantSipImpl>();
  for (Iterator<CallSipImpl> activeCalls=getActiveCalls(); activeCalls.hasNext(); ) {
    CallSipImpl call=activeCalls.next();
    if (!callID.equals(call.getCallID()))     continue;
    for (Iterator<CallPeer> callParticipantIter=call.getCallParticipants(); callParticipantIter.hasNext(); ) {
      CallParticipantSipImpl callParticipant=(CallParticipantSipImpl)callParticipantIter.next();
      Dialog dialog=callParticipant.getDialog();
      if (dialog != null) {
        String dialogLocalTag=dialog.getLocalTag();
        if (((localTag == null) || "0".equals(localTag)) ? ((dialogLocalTag == null) || "0".equals(dialogLocalTag)) : localTag.equals(dialogLocalTag)) {
          String dialogRemoteTag=dialog.getRemoteTag();
          if (((remoteTag == null) || "0".equals(remoteTag)) ? ((dialogRemoteTag == null) || "0".equals(dialogRemoteTag)) : remoteTag.equals(dialogRemoteTag)) {
            callParticipants.add(callParticipant);
          }
        }
      }
    }
  }
  return callParticipants;
}
