{
  final JFrame callFrame=callRenderer.getCallContainer().getCallWindow().getFrame();
  final JPanel glassPane=(JPanel)callFrame.getGlassPane();
  if (!isVisible) {
    securityPanel.setVisible(false);
    glassPane.setVisible(false);
    glassPane.removeAll();
  }
 else {
    glassPane.setLayout(null);
    glassPane.addMouseListener(new MouseListener(){
      public void mouseReleased(      MouseEvent e){
        redispatchMouseEvent(glassPane,e);
      }
      public void mousePressed(      MouseEvent e){
        redispatchMouseEvent(glassPane,e);
      }
      public void mouseExited(      MouseEvent e){
        redispatchMouseEvent(glassPane,e);
      }
      public void mouseEntered(      MouseEvent e){
        redispatchMouseEvent(glassPane,e);
      }
      public void mouseClicked(      MouseEvent e){
        redispatchMouseEvent(glassPane,e);
      }
    }
);
    Point securityLabelPoint=securityStatusLabel.getLocation();
    Point newPoint=SwingUtilities.convertPoint(securityStatusLabel.getParent(),securityLabelPoint.x,securityLabelPoint.y,callFrame);
    securityPanel.setBeginPoint(new Point((int)newPoint.getX() + 15,0));
    securityPanel.setBounds(0,(int)newPoint.getY() - 5,callFrame.getWidth(),110);
    glassPane.add(securityPanel);
    securityPanel.setVisible(true);
    glassPane.setVisible(true);
    glassPane.addComponentListener(new ComponentAdapter(){
      /** 
 * Invoked when the component's size changes.
 */
      public void componentResized(      ComponentEvent e){
        if (glassPane.isVisible()) {
          glassPane.setVisible(false);
          callFrame.removeComponentListener(this);
        }
      }
    }
);
  }
}
