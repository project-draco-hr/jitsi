{
  g.setFont(font);
  int titleWidth=SwingUtilities.computeStringWidth(metrics,title);
  int preferredWidth=0;
  if (isOneActionButtonEnabled()) {
    preferredWidth=calculateTabWidth(tabPlacement,tabIndex,metrics) - WIDTHDELTA - 15;
    if (isCloseEnabled())     preferredWidth-=BUTTONSIZE;
    if (isMaxEnabled())     preferredWidth-=BUTTONSIZE;
  }
 else {
    preferredWidth=titleWidth;
  }
  while (titleWidth > preferredWidth) {
    if (title.endsWith("..."))     title=title.substring(0,title.indexOf("...") - 1).concat("...");
 else     title=title.substring(0,title.length() - 4).concat("...");
    titleWidth=SwingUtilities.computeStringWidth(metrics,title);
  }
  textRect.width=titleWidth;
  View v=getTextViewForTab(tabIndex);
  if (v != null) {
    v.paint(g,textRect);
  }
 else {
    int mnemIndex=tabPane.getDisplayedMnemonicIndexAt(tabIndex);
    if (tabPane.isEnabled() && tabPane.isEnabledAt(tabIndex)) {
      if (isSelected)       g.setColor(whiteColor);
 else {
        if (this.isTabHighlighted(tabIndex)) {
          g.setColor(new Color(UtilActivator.getResources().getColor("service.gui.TAB_TITLE_HIGHLIGHT")));
        }
 else         g.setColor(tabPane.getForegroundAt(tabIndex));
      }
      BasicGraphicsUtils.drawString(g,title,mnemIndex,textRect.x,textRect.y + metrics.getAscent());
    }
 else {
      g.setColor(tabPane.getBackgroundAt(tabIndex).brighter());
      BasicGraphicsUtils.drawStringUnderlineCharAt(g,title,mnemIndex,textRect.x,textRect.y + metrics.getAscent());
      g.setColor(tabPane.getBackgroundAt(tabIndex).darker());
      BasicGraphicsUtils.drawStringUnderlineCharAt(g,title,mnemIndex,textRect.x - 1,textRect.y + metrics.getAscent() - 1);
    }
  }
}
