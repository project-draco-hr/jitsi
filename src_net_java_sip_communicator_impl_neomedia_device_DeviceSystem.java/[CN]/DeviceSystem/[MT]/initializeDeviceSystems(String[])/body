{
synchronized (deviceSystems) {
    String packageName=null;
    for (    String className : classNames) {
      if (className == null)       continue;
      if (className.startsWith(".")) {
        if (packageName == null)         packageName=DeviceSystem.class.getPackage().getName();
        className=packageName + className;
      }
      DeviceSystem deviceSystem=null;
      boolean reinitialize=true;
      for (      DeviceSystem aDeviceSystem : deviceSystems)       if (aDeviceSystem.getClass().getName().equals(className)) {
        deviceSystem=aDeviceSystem;
        break;
      }
      if (deviceSystem == null) {
        Object o=null;
        try {
          o=Class.forName(className).newInstance();
        }
 catch (        Throwable t) {
          if (t instanceof ThreadDeath)           throw (ThreadDeath)t;
 else           if (logger.isDebugEnabled())           logger.debug("Failed to initialize " + className,t);
        }
        if (o instanceof DeviceSystem) {
          deviceSystem=(DeviceSystem)o;
          if (!deviceSystems.contains(deviceSystem) && deviceSystems.add(deviceSystem))           reinitialize=false;
        }
      }
      if (reinitialize && ((deviceSystem.getFeatures() & FEATURE_REINITIALIZE) != 0)) {
        try {
          deviceSystem.initialize();
        }
 catch (        Throwable t) {
          if (t instanceof ThreadDeath)           throw (ThreadDeath)t;
 else           if (logger.isDebugEnabled())           logger.debug("Failed to reinitialize " + className,t);
        }
      }
    }
  }
}
