{
  String htmlText=getTextFromWriteArea("text/html");
  String plainText=getTextFromWriteArea(OperationSetBasicInstantMessaging.DEFAULT_MIME_TYPE);
  String messageText;
  String mimeType;
  if ((htmlText.indexOf("<b") > -1 || htmlText.indexOf("<i") > -1 || htmlText.indexOf("<u") > -1 || htmlText.indexOf("<font") > -1)) {
    messageText=htmlText;
    mimeType=OperationSetBasicInstantMessaging.HTML_MIME_TYPE;
  }
 else {
    messageText=plainText;
    mimeType=OperationSetBasicInstantMessaging.DEFAULT_MIME_TYPE;
  }
  try {
    chatSession.getCurrentChatTransport().sendInstantMessage(messageText,mimeType);
  }
 catch (  IllegalStateException ex) {
    logger.error("Failed to send message.",ex);
    this.addMessage(chatSession.getCurrentChatTransport().getName(),System.currentTimeMillis(),Constants.OUTGOING_MESSAGE,messageText,mimeType);
    this.addErrorMessage(chatSession.getCurrentChatTransport().getName(),GuiActivator.getResources().getI18NString("service.gui.MSG_SEND_CONNECTION_PROBLEM"));
  }
catch (  Exception ex) {
    logger.error("Failed to send message.",ex);
    this.refreshWriteArea();
    this.addMessage(chatSession.getCurrentChatTransport().getName(),System.currentTimeMillis(),Constants.OUTGOING_MESSAGE,messageText,mimeType);
    this.addErrorMessage(chatSession.getCurrentChatTransport().getName(),GuiActivator.getResources().getI18NString("service.gui.MSG_DELIVERY_UNKNOWN_ERROR",new String[]{ex.getMessage()}));
  }
  if (chatSession.getCurrentChatTransport().allowsTypingNotifications()) {
    getChatWritePanel().stopTypingTimer();
  }
  this.refreshWriteArea();
  this.requestFocusInWriteArea();
}
