{
  final ChatTransport sendFileTransport=this.findFileTransferChatTransport();
  this.setSelectedChatTransport(sendFileTransport);
  SwingWorker worker=new SwingWorker(){
    public Object construct() throws Exception {
      if (file.length() > sendFileTransport.getMaximumFileLength()) {
        addMessage(chatSession.getCurrentChatTransport().getName(),System.currentTimeMillis(),Chat.ERROR_MESSAGE,GuiActivator.getResources().getI18NString("service.gui.FILE_TOO_BIG",new String[]{sendFileTransport.getMaximumFileLength() / 1024 / 1024 + " MB"}),"","text");
        fileComponent.setFailed();
        return "";
      }
      final FileTransfer fileTransfer=sendFileTransport.sendFile(file);
      addActiveFileTransfer(fileTransfer.getID(),fileTransfer);
      fileTransfer.addStatusListener(ChatPanel.this);
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          fileComponent.setProtocolFileTransfer(fileTransfer);
        }
      }
);
      return "";
    }
    public void catchException(    Throwable ex){
      logger.error("Failed to send file.",ex);
      if (ex instanceof IllegalStateException) {
        addErrorMessage(chatSession.getCurrentChatTransport().getName(),GuiActivator.getResources().getI18NString("service.gui.MSG_SEND_CONNECTION_PROBLEM"));
      }
 else {
        addErrorMessage(chatSession.getCurrentChatTransport().getName(),GuiActivator.getResources().getI18NString("service.gui.MSG_DELIVERY_UNKNOWN_ERROR",new String[]{ex.getMessage()}));
      }
    }
  }
;
  worker.start();
}
