{
  int i;
  float L_tmp[]=new float[Silk_define.MAX_MATRIX_SIZE * Silk_define.MAX_MATRIX_SIZE];
  float T[]=new float[Silk_define.MAX_MATRIX_SIZE];
  float Dinv[]=new float[Silk_define.MAX_MATRIX_SIZE];
  assert(M <= Silk_define.MAX_MATRIX_SIZE);
  SKP_Silk_LDL_FLP(A,A_offset,M,L_tmp,Dinv);
  SKP_Silk_SolveWithLowerTriangularWdiagOnes_FLP(L_tmp,M,b,T);
  for (i=0; i < M; i++) {
    T[i]=T[i] * Dinv[i];
  }
  SKP_Silk_SolveWithUpperTriangularFromLowerWdiagOnes_FLP(L_tmp,M,T,x,x_offset);
}
