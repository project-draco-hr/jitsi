{
  long context=getContext();
  final List<CaptureDeviceInfo> captureDevices=new LinkedList<CaptureDeviceInfo>();
  final List<Format> captureDeviceFormats=new LinkedList<Format>();
  PA.source_info_cb_t sourceInfoListCallback=new PA.source_info_cb_t(){
    public void callback(    long c,    long i,    int eol){
      try {
        if ((eol == 0) && (i != 0)) {
          sourceInfoListCallback(c,i,captureDevices,captureDeviceFormats);
        }
      }
  finally {
        signalMainloop(false);
      }
    }
  }
;
  final List<CaptureDeviceInfo> playbackDevices=new LinkedList<CaptureDeviceInfo>();
  final List<Format> playbackDeviceFormats=new LinkedList<Format>();
  PA.sink_info_cb_t sinkInfoListCallback=new PA.sink_info_cb_t(){
    public void callback(    long c,    long i,    int eol){
      try {
        if ((eol == 0) && (i != 0)) {
          sinkInfoListCallback(c,i,playbackDevices,playbackDeviceFormats);
        }
      }
  finally {
        signalMainloop(false);
      }
    }
  }
;
  lockMainloop();
  try {
    long o=PA.context_get_source_info_list(context,sourceInfoListCallback);
    if (o == 0)     throw new RuntimeException("pa_context_get_source_info_list");
    try {
      while (PA.operation_get_state(o) == PA.OPERATION_RUNNING)       waitMainloop();
    }
  finally {
      PA.operation_unref(o);
    }
    o=PA.context_get_sink_info_list(context,sinkInfoListCallback);
    if (o == 0)     throw new RuntimeException("pa_context_get_sink_info_list");
    try {
      while (PA.operation_get_state(o) == PA.OPERATION_RUNNING)       waitMainloop();
    }
  finally {
      PA.operation_unref(o);
    }
  }
  finally {
    unlockMainloop();
  }
  if (!captureDeviceFormats.isEmpty()) {
    captureDevices.add(0,new CaptureDeviceInfo(NULL_DEV_CAPTURE_DEVICE_INFO_NAME,new MediaLocator(LOCATOR_PROTOCOL + ":"),captureDeviceFormats.toArray(new Format[captureDeviceFormats.size()])));
  }
  if (!playbackDevices.isEmpty()) {
    playbackDevices.add(0,new CaptureDeviceInfo(NULL_DEV_CAPTURE_DEVICE_INFO_NAME,new MediaLocator(LOCATOR_PROTOCOL + ":"),null));
  }
  setCaptureDevices(captureDevices);
  setPlaybackDevices(playbackDevices);
}
