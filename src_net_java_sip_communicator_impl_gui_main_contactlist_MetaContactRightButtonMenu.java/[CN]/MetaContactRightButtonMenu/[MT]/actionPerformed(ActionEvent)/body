{
  JMenuItem menuItem=(JMenuItem)e.getSource();
  String itemName=menuItem.getName();
  Contact contact;
  if (itemName.equals(addContactItem.getName())) {
    AddContactDialog dialog=new AddContactDialog(mainFrame,metaContact);
    ProtocolProviderService protocolProvider=GuiActivator.getPreferredAccount();
    if (protocolProvider != null)     dialog.setSelectedAccount(protocolProvider);
    dialog.setVisible(true);
  }
 else   if (itemName.equalsIgnoreCase("sendMessage")) {
    GuiActivator.getUIService().getChatWindowManager().startChat(metaContact);
  }
 else   if (itemName.equalsIgnoreCase("sendSms")) {
    Contact defaultSmsContact=metaContact.getDefaultContact(OperationSetSmsMessaging.class);
    GuiActivator.getUIService().getChatWindowManager().startChat(metaContact,defaultSmsContact,true);
  }
 else   if (itemName.equals("call")) {
    call(false,false,false,null);
  }
 else   if (itemName.equals("videoCall")) {
    call(true,false,false,null);
  }
 else   if (itemName.equals("shareFullScreen")) {
    call(true,true,false,null);
  }
 else   if (itemName.equals("shareRegion")) {
    call(true,true,true,null);
  }
 else   if (itemName.equals("sendFile")) {
    SipCommFileChooser scfc=GenericFileDialog.create(null,"Send file...",SipCommFileChooser.LOAD_FILE_OPERATION,ConfigurationUtils.getSendFileLastDir());
    File selectedFile=scfc.getFileFromDialog();
    if (selectedFile != null) {
      ConfigurationUtils.setSendFileLastDir(selectedFile.getParent());
      ChatPanel chatPanel=GuiActivator.getUIService().getChatWindowManager().getContactChat(metaContact,true);
      chatPanel.sendFile(selectedFile);
      GuiActivator.getUIService().getChatWindowManager().openChat(chatPanel,true);
    }
    GuiActivator.getUIService().getChatWindowManager().startChat(metaContact);
  }
 else   if (itemName.equals("renameContact")) {
    RenameContactDialog dialog=new RenameContactDialog(mainFrame,metaContact);
    dialog.setVisible(true);
    dialog.requestFocusInFiled();
  }
 else   if (itemName.equals("viewHistory")) {
    HistoryWindow history;
    HistoryWindowManager historyWindowManager=GuiActivator.getUIService().getHistoryWindowManager();
    if (historyWindowManager.containsHistoryWindowForContact(metaContact)) {
      history=historyWindowManager.getHistoryWindowForContact(metaContact);
      if (history.getState() == JFrame.ICONIFIED)       history.setState(JFrame.NORMAL);
      history.toFront();
    }
 else {
      history=new HistoryWindow(this.metaContact);
      historyWindowManager.addHistoryWindowForContact(metaContact,history);
      history.setVisible(true);
    }
  }
 else   if (itemName.equals("requestAuth")) {
    if (firstUnsubscribedContact != null)     contact=firstUnsubscribedContact;
 else     contact=metaContact.getDefaultContact();
    requestAuthorization(contact);
  }
 else   if (itemName.startsWith(moveToPrefix)) {
    MetaContactListManager.moveMetaContactToGroup(metaContact,itemName.substring(moveToPrefix.length()));
  }
 else   if (itemName.startsWith(removeContactPrefix)) {
    if (menuItem instanceof ContactMenuItem) {
      MetaContactListManager.removeContact(((ContactMenuItem)menuItem).getContact());
    }
 else {
      MetaContactListManager.removeMetaContact(metaContact);
    }
  }
 else   if (itemName.startsWith(moveSubcontactPrefix)) {
    contactList.addContactListListener(this);
    contactList.setGroupClickConsumed(true);
    this.moveDialog=new MoveSubcontactMessageDialog(mainFrame,this);
    this.moveDialog.addWindowListener(new WindowAdapter(){
      @Override public void windowClosed(      WindowEvent e){
        contactList.setGroupClickConsumed(false);
      }
    }
);
    this.moveDialog.setVisible(true);
    if (menuItem instanceof ContactMenuItem) {
      this.contactToMove=((ContactMenuItem)menuItem).getContact();
    }
 else {
      this.moveAllContacts=true;
    }
  }
 else   if (itemName.startsWith(callContactPrefix)) {
    if (menuItem instanceof ContactMenuItem) {
      ContactMenuItem contactItem=(ContactMenuItem)menuItem;
      call(false,false,false,contactItem.getContact(),contactItem.getContactResource());
    }
 else     call(false,false,false,itemName.substring(callContactPrefix.length()));
  }
 else   if (itemName.startsWith(videoCallPrefix)) {
    if (menuItem instanceof ContactMenuItem) {
      ContactMenuItem contactItem=(ContactMenuItem)menuItem;
      call(true,false,false,contactItem.getContact(),contactItem.getContactResource());
    }
 else     call(true,false,false,itemName.substring(videoCallPrefix.length()));
  }
 else   if (itemName.startsWith(fullDesktopSharingPrefix)) {
    if (menuItem instanceof ContactMenuItem) {
      ContactMenuItem contactItem=(ContactMenuItem)menuItem;
      call(true,true,false,contactItem.getContact(),contactItem.getContactResource());
    }
 else     call(true,true,false,itemName.substring(fullDesktopSharingPrefix.length()));
  }
 else   if (itemName.startsWith(regionDesktopSharingPrefix)) {
    if (menuItem instanceof ContactMenuItem) {
      ContactMenuItem contactItem=(ContactMenuItem)menuItem;
      call(true,true,true,contactItem.getContact(),contactItem.getContactResource());
    }
 else     call(true,true,true,itemName.substring(regionDesktopSharingPrefix.length()));
  }
 else   if (itemName.startsWith(requestAuthPrefix)) {
    if (menuItem instanceof ContactMenuItem) {
      contact=((ContactMenuItem)menuItem).getContact();
    }
 else     contact=getContactFromMetaContact(itemName.substring(requestAuthPrefix.length()));
    requestAuthorization(contact);
  }
 else   if (itemName.startsWith(callPhonePrefix)) {
    String phone=itemName.substring(callPhonePrefix.length());
    call(false,false,false,phone);
  }
}
