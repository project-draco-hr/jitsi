{
  shellInputStream=sshContact.getShellInputStream();
  shellReader=sshContact.getShellReader();
  replyBuffer=new StringBuffer();
  try {
    do {
      bytesAvailable=shellInputStream.available();
      if (bytesAvailable == 0) {
        Thread.sleep(250);
        continue;
      }
      bufferCount=0;
      do {
        storeMessage(replyBuffer);
        Thread.sleep(250);
        bytesAvailable=shellInputStream.available();
      }
 while (bytesAvailable > 0 && bufferCount < 16384);
      message=replyBuffer.toString();
      if (sshContact.isCommandSent()) {
        sshContact.setMessageType(ContactSSH.CONVERSATION_MESSAGE_RECEIVED);
        message=message.substring(message.indexOf('\n') + 1);
        sshContact.setCommandSent(false);
      }
 else {
        sshContact.setMessageType(ContactSSH.SYSTEM_MESSAGE_RECEIVED);
      }
      instantMessaging.deliverMessage(instantMessaging.createMessage(message),sshContact);
      replyBuffer.delete(0,replyBuffer.length());
    }
 while (isActive);
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
}
