{
  logger.trace("Waiting for a CallPeerEvent with newState=" + awaitedState + " for peer "+ this.listenedCallPeer);
synchronized (this) {
    if (exitIfAlreadyInState && listenedCallPeer.getState().equals(awaitedState)) {
      logger.trace("Src peer is already in the awaited " + "state." + collectedEvents);
      listenedCallPeer.removeCallPeerListener(this);
      return;
    }
    if (collectedEvents.size() > 0) {
      CallPeerChangeEvent lastEvent=(CallPeerChangeEvent)collectedEvents.get(collectedEvents.size() - 1);
      if (lastEvent.getNewValue().equals(awaitedState)) {
        logger.trace("Event already received. " + collectedEvents);
        listenedCallPeer.removeCallPeerListener(this);
        return;
      }
    }
    try {
      wait(waitFor);
      if (collectedEvents.size() > 0)       logger.trace("Received a CallParticpantStateEvent.");
 else       logger.trace("No CallParticpantStateEvent received for " + waitFor + "ms.");
      listenedCallPeer.removeCallPeerListener(this);
    }
 catch (    InterruptedException ex) {
      logger.debug("Interrupted while waiting for a " + "CallParticpantEvent",ex);
    }
  }
}
