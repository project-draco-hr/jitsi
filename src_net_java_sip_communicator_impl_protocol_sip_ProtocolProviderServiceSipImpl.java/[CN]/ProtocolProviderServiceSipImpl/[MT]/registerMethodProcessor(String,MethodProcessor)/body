{
  List<MethodProcessor> processors=methodProcessors.get(method);
  if (processors == null) {
    processors=new LinkedList<MethodProcessor>();
    methodProcessors.put(method,processors);
  }
 else {
    Iterator<MethodProcessor> processorIter=processors.iterator();
    Class<? extends MethodProcessor> methodProcessorClass=methodProcessor.getClass();
    String eventPackage=(methodProcessor instanceof EventPackageSupport) ? ((EventPackageSupport)methodProcessor).getEventPackage() : null;
    while (processorIter.hasNext()) {
      MethodProcessor processor=processorIter.next();
      if (!processor.getClass().equals(methodProcessorClass))       continue;
      if ((eventPackage != null) && (processor instanceof EventPackageSupport) && !eventPackage.equals(((EventPackageSupport)processor).getEventPackage()))       continue;
      processorIter.remove();
    }
  }
  processors.add(methodProcessor);
}
