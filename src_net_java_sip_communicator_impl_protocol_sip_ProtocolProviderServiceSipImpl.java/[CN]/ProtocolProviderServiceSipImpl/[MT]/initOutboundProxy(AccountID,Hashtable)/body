{
  String proxyAddressStr=(String)accountID.getAccountProperties().get(ProtocolProviderFactory.PROXY_ADDRESS);
  InetAddress proxyAddress=null;
  if (proxyAddressStr == null || proxyAddressStr.length() == 0)   return;
  try {
    proxyAddress=InetAddress.getByName(proxyAddressStr);
  }
 catch (  UnknownHostException ex) {
    logger.error(proxyAddressStr + " appears to be an either invalid or inaccessible address",ex);
    throw new IllegalArgumentException(proxyAddressStr + " appears to be an either invalid or inaccessible address " + ex.getMessage());
  }
  int proxyPort=ListeningPoint.PORT_5060;
  String proxyPortStr=(String)accountID.getAccountProperties().get(ProtocolProviderFactory.PROXY_PORT);
  if (proxyPortStr != null && proxyPortStr.length() > 0) {
    try {
      proxyPort=Integer.parseInt(proxyPortStr);
    }
 catch (    NumberFormatException ex) {
      logger.error(proxyPortStr + " is not a valid port value. Expected an integer",ex);
    }
    if (proxyPort > NetworkUtils.MAX_PORT_NUMBER)     throw new IllegalArgumentException(proxyPort + " is larger than " + NetworkUtils.MAX_PORT_NUMBER+ " and does not therefore represent a valid port nubmer.");
  }
  String proxyTransport=(String)accountID.getAccountProperties().get(ProtocolProviderFactory.PROXY_TRANSPORT);
  if (proxyTransport != null && proxyTransport.length() > 0) {
    if (!proxyTransport.equals(ListeningPoint.UDP) || !proxyTransport.equals(ListeningPoint.TCP) || !proxyTransport.equals(ListeningPoint.TLS))     throw new IllegalArgumentException(proxyTransport + " is not a valid transport protocol. Transport must be " + "left blanc or set to TCP, UDP or TLS.");
  }
 else {
    proxyTransport=ListeningPoint.UDP;
  }
  StringBuffer proxyStringBuffer=new StringBuffer(proxyAddress.getHostAddress());
  if (proxyAddress instanceof Inet6Address) {
    proxyStringBuffer.insert(0,'[');
    proxyStringBuffer.append(']');
  }
  proxyStringBuffer.append(':');
  proxyStringBuffer.append(Integer.toString(proxyPort));
  proxyStringBuffer.append('/');
  proxyStringBuffer.append(proxyTransport);
  jainSipProperties.put(this.JSPNAME_OUTBOUND_PROXY,proxyStringBuffer.toString());
}
