{
  try {
    String bindRetriesStr=SipActivator.getConfigurationService().getString(BIND_RETRIES_PROPERTY_NAME);
    int bindRetries=5;
    if (bindRetriesStr != null) {
      try {
        bindRetries=Integer.parseInt(bindRetriesStr);
      }
 catch (      NumberFormatException ex) {
        logger.error(bindRetriesStr + " does not appear to be an integer. " + "Defaulting port bind retries to 5.",ex);
        bindRetries=5;
      }
    }
    udpListeningPoint=createListeningPoint(preferredPortNumber,ListeningPoint.UDP,bindRetries);
    tcpListeningPoint=createListeningPoint(preferredPortNumber,ListeningPoint.TCP,bindRetries);
    tlsListeningPoint=createListeningPoint(ListeningPoint.PORT_5061,ListeningPoint.TLS,bindRetries);
    try {
      udpJainSipProvider=jainSipStack.createSipProvider(udpListeningPoint);
      udpJainSipProvider.addSipListener(this);
      tcpJainSipProvider=jainSipStack.createSipProvider(tcpListeningPoint);
      tcpJainSipProvider.addSipListener(this);
      tlsJainSipProvider=jainSipStack.createSipProvider(tlsListeningPoint);
      tlsJainSipProvider.addSipListener(this);
    }
 catch (    ObjectInUseException ex) {
      logger.fatal("Failed to create a SIP Provider",ex);
      throw new OperationFailedException("An error occurred while creating SIP Provider for",OperationFailedException.INTERNAL_ERROR,ex);
    }
    logger.debug("Created listening points and SIP provider for account" + "  " + getAccountID().toString());
  }
 catch (  TransportNotSupportedException ex) {
    logger.fatal("Failed to create a listening point",ex);
    throw new OperationFailedException("A unexpected error occurred while creating listening point",OperationFailedException.INTERNAL_ERROR,ex);
  }
catch (  TooManyListenersException ex) {
    logger.fatal("Failed to add a provider listener",ex);
    throw new OperationFailedException("A unexpected error occurred while creating listening point",OperationFailedException.INTERNAL_ERROR,ex);
  }
  logger.trace("Done creating listening points.");
}
