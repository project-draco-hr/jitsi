{
  try {
    String bindRetriesStr=SipActivator.getConfigurationService().getString(BIND_RETRIES_PROPERTY_NAME);
    int bindRetries=5;
    if (bindRetriesStr != null) {
      try {
        bindRetries=Integer.parseInt(bindRetriesStr);
      }
 catch (      NumberFormatException ex) {
        logger.error(bindRetriesStr + " does not appear to be an integer. " + "Defaulting port bind retries to 5.",ex);
        bindRetries=5;
      }
    }
    int currentlyTriedPort=preferredPortNumber;
    for (int i=0; i < bindRetries; i++) {
      try {
        udpListeningPoint=jainSipStack.createListeningPoint(NetworkUtils.IN_ADDR_ANY,currentlyTriedPort,ListeningPoint.UDP);
      }
 catch (      InvalidArgumentException exc) {
        if (!exc.getMessage().contains("Address already in use")) {
          logger.fatal("An exception occurred while " + "trying to create a listening point.",exc);
          throw new OperationFailedException("An error occurred while creating listening points. ",OperationFailedException.NETWORK_FAILURE,exc);
        }
        logger.debug("Port " + currentlyTriedPort + " seems in use.");
        currentlyTriedPort=NetworkUtils.getRandomPortNumber();
        logger.debug("Retrying bind on port " + currentlyTriedPort);
      }
    }
    try {
      jainSipProvider=jainSipStack.createSipProvider(udpListeningPoint);
      jainSipProvider.addSipListener(this);
    }
 catch (    ObjectInUseException ex) {
      logger.fatal("Failed to create a listening point",ex);
      throw new OperationFailedException("An error occurred while creating SIP Provider for " + "listening point " + udpListeningPoint.toString(),OperationFailedException.INTERNAL_ERROR,ex);
    }
    logger.debug("Created listening point and SIP provider for " + " address:[" + udpListeningPoint.getIPAddress() + "]:"+ udpListeningPoint.getPort());
  }
 catch (  TransportNotSupportedException ex) {
    logger.fatal("Failed to create a listening point",ex);
    throw new OperationFailedException("A unexpected error occurred while creating listening point",OperationFailedException.INTERNAL_ERROR,ex);
  }
catch (  TooManyListenersException ex) {
    logger.fatal("Failed to add a provider listener",ex);
    throw new OperationFailedException("A unexpected error occurred while creating listening point",OperationFailedException.INTERNAL_ERROR,ex);
  }
  logger.trace("Done creating listening points.");
}
