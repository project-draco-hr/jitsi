{
  ContactHeader registrationContactHeader=null;
  ListeningPoint srcListeningPoint=getListeningPoint(intendedDestination);
  InetAddress targetAddress=getIntendedDestination(intendedDestination);
  try {
    InetAddress localAddress=SipActivator.getNetworkAddressManagerService().getLocalHost(targetAddress);
    SipURI contactURI=addressFactory.createSipURI(getAccountID().getUserID(),localAddress.getHostAddress());
    String transport=srcListeningPoint.getTransport();
    contactURI.setTransportParam(transport);
    int localPort=srcListeningPoint.getPort();
    if (ListeningPoint.TCP.equalsIgnoreCase(transport)) {
      int dstPort=intendedDestination.getPort();
      if (dstPort == -1)       dstPort=5060;
      InetSocketAddress localSockAddr=sipStackSharing.obtainLocalAddress(NetworkUtils.getInetAddress(intendedDestination.getHost()),dstPort,localAddress);
      localPort=localSockAddr.getPort();
    }
    contactURI.setPort(localPort);
    String paramValue=getContactAddressCustomParamValue();
    if (paramValue != null) {
      contactURI.setParameter(SipStackSharing.CONTACT_ADDRESS_CUSTOM_PARAM_NAME,paramValue);
    }
    Address contactAddress=addressFactory.createAddress(contactURI);
    if (ourDisplayName != null) {
      contactAddress.setDisplayName(ourDisplayName);
    }
    registrationContactHeader=headerFactory.createContactHeader(contactAddress);
    logger.debug("generated contactHeader:" + registrationContactHeader);
  }
 catch (  ParseException ex) {
    logger.error("A ParseException occurred while creating From Header!",ex);
    throw new IllegalArgumentException("A ParseException occurred while creating From Header!",ex);
  }
catch (  java.io.IOException ex) {
    logger.error("A ParseException occurred while creating From Header!",ex);
    throw new IllegalArgumentException("A ParseException occurred while creating From Header!",ex);
  }
  return registrationContactHeader;
}
