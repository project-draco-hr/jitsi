{
  int k;
  int in_Q8, out1_Q8, out2_Q8, X;
  for (k=0; k < len; k++) {
    in_Q8=(int)in[in_offset + k] << 8;
    out1_Q8=in_Q8 + (S[S_offset] << 2);
    out2_Q8=out1_Q8 + (S[S_offset + 2] << 2);
    X=Silk_macros.SKP_SMLAWB(S[S_offset + 1],in_Q8,Coef[Coef_offset]);
    S[S_offset]=Silk_macros.SKP_SMLAWB(X,out1_Q8,Coef[Coef_offset + 2]);
    X=Silk_macros.SKP_SMLAWB(S[S_offset + 3],out1_Q8,Coef[Coef_offset + 1]);
    S[S_offset + 2]=Silk_macros.SKP_SMLAWB(X,out2_Q8,Coef[Coef_offset + 4]);
    S[S_offset + 1]=Silk_macros.SKP_SMLAWB(in_Q8 >> 2,out1_Q8,Coef[Coef_offset + 3]);
    S[S_offset + 3]=Silk_macros.SKP_SMLAWB(out1_Q8 >> 2,out2_Q8,Coef[Coef_offset + 5]);
    out[out_offset + k]=(short)Silk_SigProc_FIX.SKP_SAT16(Silk_macros.SKP_SMLAWB(128,out2_Q8,Coef[Coef_offset + 6]) >> 8);
  }
}
