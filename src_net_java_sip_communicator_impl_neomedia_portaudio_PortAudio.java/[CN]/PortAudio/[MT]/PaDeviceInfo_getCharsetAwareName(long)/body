{
  try {
    byte[] nameBytes=PaDeviceInfo_getNameBytes(deviceInfo);
    Charset defaultCharset=Charset.defaultCharset();
    String charsetName=(defaultCharset == null) ? "UTF-8" : defaultCharset.name();
    try {
      return new String(nameBytes,charsetName);
    }
 catch (    UnsupportedEncodingException ueex) {
      return new String(nameBytes);
    }
  }
 catch (  UnsatisfiedLinkError ulerr) {
    logger.warn("The JNI library jportaudio is out-of-date and needs to be" + " recompiled. The application will continue with the" + " presumtion that the charset is modified UTF-8 which"+ " may result in an inaccurate PaDeviceInfo name.",ulerr);
    return PaDeviceInfo_getName(deviceInfo);
  }
}
