{
  if (audioMixer == null)   audioMixer=new AudioMixer(device.createCaptureDevice()){
    @Override protected void connect(    DataSource dataSource,    DataSource inputDataSource) throws IOException {
      if (inputDataSource == captureDevice)       AudioMixerMediaDevice.this.connect(dataSource);
 else       super.connect(dataSource,inputDataSource);
    }
    @Override protected void read(    PushBufferStream stream,    Buffer buffer,    DataSource dataSource) throws IOException {
      super.read(stream,buffer,dataSource);
      if (dataSource == captureDevice) {
        if (localEventsDispatcher == null) {
          localEventsDispatcher=new LocalSliEventDispatcher();
          new Thread(localEventsDispatcher).start();
        }
        localEventsDispatcher.addData(buffer);
      }
 else       if (dataSource instanceof ReceiveStreamPushBufferDataSource) {
        ReceiveStream receiveStream=((ReceiveStreamPushBufferDataSource)dataSource).getReceiveStream();
        StreamSliEventDispatcher stEvDispatch;
synchronized (streamSoundLevelListeners) {
          stEvDispatch=streamSoundLevelListeners.get(receiveStream);
        }
        if (stEvDispatch != null)         stEvDispatch.addData(buffer);
      }
    }
  }
;
  return audioMixer;
}
