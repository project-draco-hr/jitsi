{
  BundleContext context=SipActivator.getBundleContext();
  if (context == null)   throw new NullPointerException("The specified BundleContext was null");
  if (protocolProvider == null)   throw new NullPointerException("The specified Protocol Provider was null");
  SipAccountID accountID=(SipAccountID)protocolProvider.getAccountID();
  if (!registeredAccounts.containsKey(accountID))   return;
  ServiceRegistration registration=(ServiceRegistration)registeredAccounts.get(accountID);
  if (registration != null)   registration.unregister();
  if (accountProperties == null)   throw new NullPointerException("The specified property map was null");
  if (!accountProperties.containsKey(PROTOCOL))   accountProperties.put(PROTOCOL,ProtocolNames.SIP);
  accountID.setAccountProperties(accountProperties);
  this.storeAccount(accountID);
  String userIDStr=(String)accountProperties.get(USER_ID);
  Hashtable<String,String> properties=new Hashtable<String,String>();
  properties.put(PROTOCOL,ProtocolNames.SIP);
  properties.put(USER_ID,userIDStr);
  try {
    ((ProtocolProviderServiceSipImpl)protocolProvider).initialize(userIDStr,accountID);
    this.storeAccount(accountID);
    registration=context.registerService(ProtocolProviderService.class.getName(),protocolProvider,properties);
    registeredAccounts.put(accountID,registration);
  }
 catch (  OperationFailedException ex) {
    logger.error("Failed to initialize account",ex);
    throw new IllegalArgumentException("Failed to initialize account" + ex.getMessage());
  }
}
