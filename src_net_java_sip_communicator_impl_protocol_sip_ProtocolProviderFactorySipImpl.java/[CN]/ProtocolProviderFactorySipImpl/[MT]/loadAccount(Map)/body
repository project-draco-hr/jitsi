{
  BundleContext context=SipActivator.getBundleContext();
  if (context == null)   throw new NullPointerException("The specified BundleContext was null");
  String userIDStr=(String)accountProperties.get(USER_ID);
  if (userIDStr == null)   throw new NullPointerException("The account properties contained no user id.");
  if (accountProperties == null)   throw new NullPointerException("The specified property map was null");
  String serverAddress=(String)accountProperties.get(SERVER_ADDRESS);
  if (serverAddress == null)   throw new NullPointerException(serverAddress + " is not a valid ServerAddress");
  if (!accountProperties.containsKey(PROTOCOL))   accountProperties.put(PROTOCOL,ProtocolNames.SIP);
  AccountID accountID=new SipAccountID(userIDStr,accountProperties,serverAddress);
  Hashtable properties=new Hashtable();
  properties.put(PROTOCOL,ProtocolNames.SIP);
  properties.put(USER_ID,userIDStr);
  ProtocolProviderServiceSipImpl sipProtocolProvider=new ProtocolProviderServiceSipImpl();
  try {
    sipProtocolProvider.initialize(userIDStr,accountID);
  }
 catch (  OperationFailedException ex) {
    logger.error("Failed to initialize account",ex);
    throw new IllegalArgumentException("Failed to initialize account" + ex.getMessage());
  }
  ServiceRegistration registration=context.registerService(ProtocolProviderService.class.getName(),sipProtocolProvider,properties);
  registeredAccounts.put(accountID,registration);
  return accountID;
}
