{
  JLabel button=(JLabel)e.getSource();
  String buttonName=button.getName();
  if (buttonName.equals("add")) {
    Action a=new AddContactAction();
    a.putValue(Action.NAME,button.getToolTipText());
    a.actionPerformed(null);
  }
 else   if (buttonName.equals("config")) {
    GuiActivator.getUIService().setConfigurationWindowVisible(true);
  }
 else   if (buttonName.equals("search")) {
    ContactList contactList=mainFrame.getContactListPanel().getContactList();
    ContactListModel listModel=(ContactListModel)contactList.getModel();
    Object selectedObject=null;
    int currentlySelectedIndex=contactList.getSelectedIndex();
    if (currentlySelectedIndex != -1) {
      selectedObject=listModel.getElementAt(currentlySelectedIndex);
    }
    if (ConfigurationManager.isShowOffline()) {
      button.setIcon(new ImageIcon(ImageLoader.getImage(ImageLoader.QUICK_MENU_SHOW_OFFLINE_ICON)));
      button.setToolTipText(GuiActivator.getResources().getI18NString("service.gui.SHOW_OFFLINE_CONTACTS"));
    }
 else {
      button.setIcon(new ImageIcon(ImageLoader.getImage(ImageLoader.QUICK_MENU_HIDE_OFFLINE_ICON)));
      button.setToolTipText(GuiActivator.getResources().getI18NString("service.gui.HIDE_OFFLINE_CONTACTS"));
    }
    contactList.setShowOffline(!ConfigurationManager.isShowOffline());
    if (selectedObject != null) {
      contactList.setSelectedIndex(listModel.indexOf(selectedObject));
    }
  }
 else   if (buttonName.equals("info")) {
    Object selectedValue=mainFrame.getContactListPanel().getContactList().getSelectedValue();
    if (selectedValue == null || !(selectedValue instanceof MetaContact)) {
      AboutWindow aboutWindow=new AboutWindow();
      aboutWindow.pack();
      Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
      aboutWindow.setLocation(screenSize.width / 2 - aboutWindow.getWidth() / 2,screenSize.height / 2 - aboutWindow.getHeight() / 2);
      aboutWindow.setVisible(true);
    }
 else {
      MetaContact selectedMetaContact=(MetaContact)selectedValue;
      OperationSetWebContactInfo wContactInfo=null;
      Iterator<Contact> protocolContacts=selectedMetaContact.getContacts();
      while (protocolContacts.hasNext()) {
        Contact protoContact=protocolContacts.next();
        wContactInfo=mainFrame.getWebContactInfoOpSet(protoContact.getProtocolProvider());
        if (wContactInfo != null)         break;
      }
      if (wContactInfo != null) {
        Contact defaultContact=selectedMetaContact.getDefaultContact();
        GuiActivator.getBrowserLauncher().openURL(wContactInfo.getWebContactInfo(defaultContact).toString());
      }
 else {
        new ErrorDialog(mainFrame,GuiActivator.getResources().getI18NString("service.gui.WARNING"),GuiActivator.getResources().getI18NString("service.gui.SELECT_CONTACT_SUPPORTING_INFO"),ErrorDialog.WARNING).showDialog();
      }
    }
  }
 else   if (buttonName.equals("sound")) {
    ToolBarButton muteButton=(ToolBarButton)button;
    boolean mute=!GuiActivator.getAudioNotifier().isMute();
    updateMuteButton(muteButton,mute);
    GuiActivator.getAudioNotifier().setMute(mute);
  }
 else   if (buttonName.equals("createGroup")) {
    CreateGroupDialog dialog=new CreateGroupDialog(mainFrame);
    dialog.setVisible(true);
  }
}
