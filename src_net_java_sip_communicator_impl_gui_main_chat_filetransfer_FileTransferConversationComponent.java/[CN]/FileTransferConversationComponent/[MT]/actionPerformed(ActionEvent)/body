{
  JButton sourceButton=(JButton)evt.getSource();
  if (sourceButton.equals(openFileButton)) {
    this.openFile(downloadFile);
  }
 else   if (sourceButton.equals(openFolderButton)) {
    try {
      File downloadDir=GuiActivator.getFileAccessService().getDefaultDownloadDirectory();
      GuiActivator.getDesktopService().open(downloadDir);
    }
 catch (    IllegalArgumentException e) {
      logger.debug("Unable to open folder.",e);
      this.showErrorMessage(resources.getI18NString("service.gui.FOLDER_DOES_NOT_EXIST"));
    }
catch (    NullPointerException e) {
      logger.debug("Unable to open folder.",e);
      this.showErrorMessage(resources.getI18NString("service.gui.FOLDER_DOES_NOT_EXIST"));
    }
catch (    UnsupportedOperationException e) {
      logger.debug("Unable to open folder.",e);
      this.showErrorMessage(resources.getI18NString("service.gui.FILE_OPEN_NOT_SUPPORTED"));
    }
catch (    SecurityException e) {
      logger.debug("Unable to open folder.",e);
      this.showErrorMessage(resources.getI18NString("service.gui.FOLDER_OPEN_NO_PERMISSION"));
    }
catch (    IOException e) {
      logger.debug("Unable to open folder.",e);
      this.showErrorMessage(resources.getI18NString("service.gui.FOLDER_OPEN_NO_APPLICATION"));
    }
catch (    Exception e) {
      logger.debug("Unable to open file.",e);
      this.showErrorMessage(resources.getI18NString("service.gui.FOLDER_OPEN_FAILED"));
    }
  }
 else   if (sourceButton.equals(cancelButton)) {
    if (fileTransfer != null)     fileTransfer.cancel();
  }
}
