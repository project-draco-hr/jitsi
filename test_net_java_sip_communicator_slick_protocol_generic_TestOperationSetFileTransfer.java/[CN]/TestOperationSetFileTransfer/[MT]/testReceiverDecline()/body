{
  if (!enableTestReceiverDecline())   return;
  logger.info("Start test: receiver will decline incoming fileTransfer");
  File fileToTransfer=getTempFileToTransfer(12345);
  OperationSetFileTransfer ftOpSet1=getOpSetFilTransfer1();
  OperationSetFileTransfer ftOpSet2=getOpSetFilTransfer2();
  FileTransferStatusEventCollector senderStatusListener=new FileTransferStatusEventCollector("Sender");
  FileTransferEventCollector senderFTListerner=new FileTransferEventCollector("Sender",senderStatusListener);
  ftOpSet1.addFileTransferListener(senderFTListerner);
  FileTransferEventCollector receiverFTListerner=new FileTransferEventCollector("Receiver",null);
  ftOpSet2.addFileTransferListener(receiverFTListerner);
  try {
    ftOpSet1.sendFile(getContact1(),fileToTransfer);
    senderFTListerner.waitForEvent(2000);
    receiverFTListerner.waitForEvent(6000);
    senderStatusListener.waitForEvent(2000);
    assertEquals("A file transfer created must be received on send side",1,senderFTListerner.collectedEvents.size());
    FileTransferCreatedEvent fileTransferCreatedEvent=(FileTransferCreatedEvent)senderFTListerner.collectedEvents.get(0);
    assertEquals("FileTransfer file",fileTransferCreatedEvent.getFileTransfer().getLocalFile(),fileToTransfer);
    assertEquals("A file transfer status changed - " + "preparing received on send side",1,senderStatusListener.collectedEvents.size());
    FileTransferStatusChangeEvent fileTransferStatusEvent=senderStatusListener.collectedEvents.get(0);
    assertEquals("Event must be preparing",FileTransferStatusChangeEvent.PREPARING,fileTransferStatusEvent.getNewStatus());
    assertEquals("A file transfer request must be " + "received on the receiver side",1,receiverFTListerner.collectedEvents.size());
    FileTransferRequestEvent fileTransferRequestEvent=(FileTransferRequestEvent)receiverFTListerner.collectedEvents.get(0);
    IncomingFileTransferRequest req=fileTransferRequestEvent.getRequest();
    assertEquals("FileTransfer file name must be the same",req.getFileName(),fileToTransfer.getName());
    assertEquals("FileTransfer file size must be the same",req.getFileSize(),fileToTransfer.length());
    senderFTListerner.clear();
    receiverFTListerner.clear();
    senderStatusListener.clear();
    req.rejectFile();
    senderStatusListener.waitForEvent(4000);
    receiverFTListerner.waitForEvent(4000);
    assertEquals("A file transfer rejected must be " + "received on receiver side",1,receiverFTListerner.collectedEvents.size());
    fileTransferRequestEvent=(FileTransferRequestEvent)receiverFTListerner.collectedEvents.get(0);
    assertTrue("FileTransfer must be rejected",receiverFTListerner.isRejected());
    assertEquals("A file transfer status changed - " + "refused received on send side",1,senderStatusListener.collectedEvents.size());
    fileTransferStatusEvent=senderStatusListener.collectedEvents.get(0);
    assertTrue("Event must be refused (or failed)",(fileTransferStatusEvent.getNewStatus() == FileTransferStatusChangeEvent.REFUSED) || (fileTransferStatusEvent.getNewStatus() == FileTransferStatusChangeEvent.FAILED));
  }
  finally {
    ftOpSet1.removeFileTransferListener(senderFTListerner);
    ftOpSet2.addFileTransferListener(receiverFTListerner);
  }
}
