{
  String version=System.getProperty("java.version");
  String vmVendor=System.getProperty("java.vendor");
  String osName=System.getProperty("os.name");
  setSystemProperties(osName);
  setScHomeDir(osName);
  File f=new File(System.getProperty(PNAME_SC_HOME_DIR_LOCATION),System.getProperty(PNAME_SC_HOME_DIR_NAME) + File.separator + ".usednsjava");
  if (f.exists()) {
    System.setProperty("sun.net.spi.nameservice.provider.1","dns,dnsjava");
  }
  if (version.startsWith("1.4") || vmVendor.startsWith("Gnu") || vmVendor.startsWith("Free")) {
    String os="";
    if (osName.startsWith("Mac"))     os=ChangeJVMFrame.MAC_OSX;
 else     if (osName.startsWith("Linux"))     os=ChangeJVMFrame.LINUX;
 else     if (osName.startsWith("Windows"))     os=ChangeJVMFrame.WINDOWS;
    ChangeJVMFrame changeJVMFrame=new ChangeJVMFrame(os);
    Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
    changeJVMFrame.setLocation(screenSize.width / 2 - changeJVMFrame.getWidth() / 2,screenSize.height / 2 - changeJVMFrame.getHeight() / 2);
    changeJVMFrame.setVisible(true);
    return;
  }
  LaunchArgHandler argHandler=LaunchArgHandler.getInstance();
  int argHandlerRes=argHandler.handleArgs(args);
  if (argHandlerRes == LaunchArgHandler.ACTION_EXIT || argHandlerRes == LaunchArgHandler.ACTION_ERROR) {
    System.exit(argHandler.getErrorCode());
  }
  if (argHandlerRes != LaunchArgHandler.ACTION_CONTINUE_LOCK_DISABLED) {
switch (new SipCommunicatorLock().tryLock(args)) {
case SipCommunicatorLock.LOCK_ERROR:
      System.err.println("Failed to lock Jitsi's " + "configuration directory.\n" + "Try launching with the --multiple param.");
    System.exit(SipCommunicatorLock.LOCK_ERROR);
  break;
case SipCommunicatorLock.ALREADY_STARTED:
System.out.println("Jitsi is already running and will " + "handle your parameters (if any).\n" + "Launch with the --multiple param to override this "+ "behaviour.");
System.exit(SipCommunicatorLock.SUCCESS);
break;
case SipCommunicatorLock.SUCCESS:
break;
}
}
System.setOut(new ScStdOut(System.out));
Main.main(new String[0]);
}
