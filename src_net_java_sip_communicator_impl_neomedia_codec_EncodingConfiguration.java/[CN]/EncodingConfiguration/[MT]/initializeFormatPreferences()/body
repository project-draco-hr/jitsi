{
  setEncodingPreference("H264",VideoMediaFormatImpl.DEFAULT_CLOCK_RATE,1100);
  setEncodingPreference("H263",VideoMediaFormatImpl.DEFAULT_CLOCK_RATE,1000);
  setEncodingPreference("JPEG",VideoMediaFormatImpl.DEFAULT_CLOCK_RATE,950);
  setEncodingPreference("H261",VideoMediaFormatImpl.DEFAULT_CLOCK_RATE,800);
  setEncodingPreference("PCMU",8000,650);
  setEncodingPreference("PCMA",8000,600);
  setEncodingPreference("iLBC",8000,500);
  setEncodingPreference("GSM",8000,450);
  setEncodingPreference("speex",8000,352);
  setEncodingPreference("speex",16000,351);
  setEncodingPreference("speex",32000,350);
  setEncodingPreference("DVI4",8000,300);
  setEncodingPreference("DVI4",16000,250);
  setEncodingPreference("G723",8000,150);
  setEncodingPreference("G728",8000,100);
  setEncodingPreference("G729",8000,50);
  ConfigurationService confService=NeomediaActivator.getConfigurationService();
  for (  String pName : confService.getPropertyNamesByPrefix(PROP_SDP_PREFERENCE,false)) {
    String prefStr=confService.getString(pName);
    String fmtName=pName.substring(pName.lastIndexOf('.') + 1).replaceAll("sdp","");
    int preference=-1;
    String encoding;
    double clockRate;
    try {
      preference=Integer.parseInt(prefStr);
      int encodingClockRateSeparator=fmtName.lastIndexOf('/');
      if (encodingClockRateSeparator > -1) {
        encoding=fmtName.substring(0,encodingClockRateSeparator);
        clockRate=Double.parseDouble(fmtName.substring(encodingClockRateSeparator + 1));
      }
 else {
        encoding=fmtName;
        clockRate=MediaFormatFactory.CLOCK_RATE_NOT_SPECIFIED;
      }
    }
 catch (    NumberFormatException nfe) {
      logger.warn("Failed to parse format (" + fmtName + ") or preference ("+ prefStr+ ").",nfe);
      continue;
    }
    setEncodingPreference(encoding,clockRate,preference);
  }
  updateSupportedEncodings();
}
