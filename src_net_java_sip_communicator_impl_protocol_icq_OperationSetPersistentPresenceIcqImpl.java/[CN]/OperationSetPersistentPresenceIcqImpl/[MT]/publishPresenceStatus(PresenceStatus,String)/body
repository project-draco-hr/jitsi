{
  assertConnected();
  if (!(status instanceof IcqStatusEnum || status instanceof AimStatusEnum))   throw new IllegalArgumentException(status + " is not a valid ICQ/AIM status");
  logger.debug("Will set status: " + status);
  MainBosService bosService=parentProvider.getAimConnection().getBosService();
  if (!parentProvider.USING_ICQ) {
    if (status.equals(AimStatusEnum.AWAY)) {
      if (getPresenceStatus().equals(AimStatusEnum.INVISIBLE))       bosService.setVisibleStatus(true);
      bosService.getOscarConnection().sendSnac(new SetInfoCmd(new InfoData(null,"I'm away!",null,null)));
    }
 else     if (status.equals(AimStatusEnum.INVISIBLE)) {
      if (getPresenceStatus().equals(AimStatusEnum.AWAY))       bosService.getOscarConnection().sendSnac(new SetInfoCmd(new InfoData(null,InfoData.NOT_AWAY,null,null)));
      bosService.setVisibleStatus(false);
    }
 else     if (status.equals(AimStatusEnum.ONLINE)) {
      if (getPresenceStatus().equals(AimStatusEnum.INVISIBLE))       bosService.setVisibleStatus(true);
 else       if (getPresenceStatus().equals(AimStatusEnum.AWAY)) {
        bosService.getOscarConnection().sendSnac(new SetInfoCmd(new InfoData(null,InfoData.NOT_AWAY,null,null)));
      }
    }
  }
 else {
    long icqStatus=presenceStatusToStatusLong((IcqStatusEnum)status);
    logger.debug("Will set status: " + status + " long="+ icqStatus);
    bosService.getOscarConnection().sendSnac(new SetExtraInfoCmd(icqStatus));
    if (status.equals(IcqStatusEnum.AWAY))     parentProvider.getAimConnection().getInfoService().setAwayMessage(statusMessage);
 else     bosService.setStatusMessage(statusMessage);
  }
  queryContactStatus(parentProvider.getAimConnection().getScreenname().getFormatted());
}
