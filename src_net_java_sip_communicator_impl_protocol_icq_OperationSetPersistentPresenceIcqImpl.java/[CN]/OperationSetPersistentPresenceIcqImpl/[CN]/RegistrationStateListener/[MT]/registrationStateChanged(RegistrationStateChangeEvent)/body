{
  logger.debug("The ICQ provider changed state from: " + evt.getOldState() + " to: "+ evt.getNewState());
  if (evt.getNewState() == RegistrationState.FINALIZING_REGISTRATION) {
    logger.debug("adding a Bos Service Listener");
    parentProvider.getAimConnection().getBosService().addMainBosServiceListener(joustSimBosListener);
    ssContactList.init(parentProvider.getAimConnection().getSsiService());
    parentProvider.getAimConnection().getBuddyService().addBuddyListener(joustSimBuddySerListener);
    parentProvider.getAimConnection().getBuddyInfoManager().addGlobalBuddyInfoListener(new GlobalBuddyInfoListener());
    parentProvider.getAimConnection().getExternalServiceManager().getIconServiceArbiter().addIconRequestListener(new IconUpdateListener());
    parentProvider.getAimConnection().getInfoService().addInfoListener(new AwayMessageListener());
  }
 else   if (evt.getNewState() == RegistrationState.REGISTERED) {
    if (parentProvider.USING_ICQ) {
      opSetExtendedAuthorizations=(OperationSetExtendedAuthorizationsIcqImpl)parentProvider.getSupportedOperationSets().get(OperationSetExtendedAuthorizations.class.getName());
      if (presenceQueryTimer == null)       presenceQueryTimer=new Timer();
 else {
        presenceQueryTimer.cancel();
        presenceQueryTimer=new Timer();
      }
      AwaitingAuthorizationContactsPresenceTimer queryTask=new AwaitingAuthorizationContactsPresenceTimer();
      presenceQueryTimer.scheduleAtFixedRate(queryTask,15000,PRESENCE_QUERY_INTERVAL);
    }
  }
 else   if (evt.getNewState() == RegistrationState.UNREGISTERED || evt.getNewState() == RegistrationState.AUTHENTICATION_FAILED || evt.getNewState() == RegistrationState.CONNECTION_FAILED) {
    long oldStatus=currentIcqStatus;
    currentIcqStatus=-1;
    if (oldStatus != -1)     fireProviderPresenceStatusChangeEvent(oldStatus,currentIcqStatus);
    Iterator groupsIter=getServerStoredContactListRoot().subgroups();
    while (groupsIter.hasNext()) {
      ContactGroupIcqImpl group=(ContactGroupIcqImpl)groupsIter.next();
      Iterator contactsIter=group.contacts();
      while (contactsIter.hasNext()) {
        ContactIcqImpl contact=(ContactIcqImpl)contactsIter.next();
        PresenceStatus oldContactStatus=contact.getPresenceStatus();
        if (!oldContactStatus.isOnline())         continue;
        if (parentProvider.USING_ICQ) {
          contact.updatePresenceStatus(IcqStatusEnum.OFFLINE);
          fireContactPresenceStatusChangeEvent(contact,contact.getParentContactGroup(),oldContactStatus,IcqStatusEnum.OFFLINE);
        }
 else {
          contact.updatePresenceStatus(AimStatusEnum.OFFLINE);
          fireContactPresenceStatusChangeEvent(contact,contact.getParentContactGroup(),oldContactStatus,AimStatusEnum.OFFLINE);
        }
      }
    }
  }
}
