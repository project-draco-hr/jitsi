{
switch (msg.getType()) {
case MessageZeroconfImpl.STREAM_OPEN:
    if (contact == null)     contact=bonjourService.getContact(null,remoteIPAddress);
  if (!isStreamOpened()) {
    sendHello();
    setStreamOpen();
  }
if (messagesQueue != null) {
  write(messagesQueue);
  messagesQueue=null;
}
break;
case MessageZeroconfImpl.DELIVERED:
break;
case MessageZeroconfImpl.MESSAGE:
if (!isStreamOpened()) logger.debug("ZEROCONF: client on the other side " + "isn't polite (sending messages without " + "saying hello :P");
if (contact == null) contact=bonjourService.getContact(null,remoteIPAddress);
if (contact == null) {
logger.error("ZEROCONF: ERROR - Couldn't identify " + "contact. Closing socket.");
return -1;
}
 else if (contact.getClientThread() == null) contact.setClientThread(this);
MessageReceivedEvent msgReceivedEvt=new MessageReceivedEvent(msg,(Contact)contact,new Date());
opSetBasicIM.fireMessageReceived(msg,contact);
opSetTyping.fireTypingNotificationsEvent((Contact)contact,opSetTyping.STATE_STOPPED);
break;
case MessageZeroconfImpl.TYPING:
if (!isStreamOpened()) logger.debug("ZEROCONF: client on the other side " + "isn't polite (sending messages without " + "saying hello :P");
if (contact == null) contact=bonjourService.getContact(null,remoteIPAddress);
opSetTyping.fireTypingNotificationsEvent((Contact)contact,opSetTyping.STATE_TYPING);
break;
case MessageZeroconfImpl.STREAM_CLOSE:
sendBye();
contact.setClientThread(null);
return 1;
case MessageZeroconfImpl.UNDEF:
logger.error("ZEROCONF: received strange message. SKIPPING!");
break;
}
return 0;
}
