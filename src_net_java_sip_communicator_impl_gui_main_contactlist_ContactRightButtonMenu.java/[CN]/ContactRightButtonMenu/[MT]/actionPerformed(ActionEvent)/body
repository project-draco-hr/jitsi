{
  JMenuItem menuItem=(JMenuItem)e.getSource();
  String itemName=menuItem.getName();
  String itemText=menuItem.getText();
  if (itemName.startsWith(addSubcontactPrefix)) {
    ProtocolProviderService pps=mainFrame.getProtocolProviderForAccount(itemText);
    if (pps != null) {
      AddContactDialog dialog=new AddContactDialog(mainFrame.getContactList(),contactItem,pps);
      dialog.setLocation(Toolkit.getDefaultToolkit().getScreenSize().width / 2 - 250,Toolkit.getDefaultToolkit().getScreenSize().height / 2 - 100);
      dialog.setVisible(true);
    }
  }
 else   if (itemName.equalsIgnoreCase("sendMessage")) {
    ContactListPanel clistPanel=mainFrame.getContactListPanel();
    SwingUtilities.invokeLater(clistPanel.new RunMessageWindow(contactItem));
  }
 else   if (itemName.equalsIgnoreCase("sendFile")) {
  }
 else   if (itemName.equalsIgnoreCase("renameContact")) {
    RenameContactDialog dialog=new RenameContactDialog(mainFrame.getContactList(),contactItem);
    dialog.setLocation(Toolkit.getDefaultToolkit().getScreenSize().width / 2 - 200,Toolkit.getDefaultToolkit().getScreenSize().height / 2 - 50);
    dialog.setVisible(true);
    dialog.requestFocusInFiled();
  }
 else   if (itemName.equalsIgnoreCase("viewHistory")) {
    HistoryWindow history=new HistoryWindow(this.mainFrame,this.contactItem);
    history.setVisible(true);
  }
 else   if (itemName.equalsIgnoreCase("userInfo")) {
    Contact defaultContact=contactItem.getDefaultContact();
    ProtocolProviderService defaultProvider=defaultContact.getProtocolProvider();
    OperationSetWebContactInfo wContactInfo=mainFrame.getWebContactInfo(defaultProvider);
    CrossPlatformBrowserLauncher.openURL(wContactInfo.getWebContactInfo(defaultContact).toString());
  }
 else   if (itemName.startsWith(moveToPrefix)) {
    MetaContactGroup group=mainFrame.getGroupByID(itemName.substring(moveToPrefix.length()));
    if (group != null) {
      mainFrame.getContactList().moveMetaContact(contactItem,group);
    }
  }
 else   if (itemName.startsWith("removeContact")) {
    Contact contact=getContactFromMetaContact(itemName.substring(removeContactPrefix.length()));
    if (contact != null) {
      if (Constants.REMOVE_CONTACT_ASK) {
        String message="<HTML>Are you sure you want to remove <B>" + this.contactItem.getDisplayName() + "</B><BR>from your contact list?</html>";
        MessageDialog dialog=new MessageDialog(this.mainFrame,message,Messages.getString("remove"));
        int returnCode=dialog.showDialog();
        if (returnCode == MessageDialog.OK_RETURN_CODE) {
          this.mainFrame.getContactList().removeContact(contact);
        }
 else         if (returnCode == MessageDialog.OK_DONT_ASK_CODE) {
          this.mainFrame.getContactList().removeContact(contact);
          Constants.REMOVE_CONTACT_ASK=false;
        }
      }
 else {
        this.mainFrame.getContactList().removeContact(contact);
      }
    }
  }
 else   if (itemName.equals("allContacts")) {
    if (Constants.REMOVE_CONTACT_ASK) {
      String message="<HTML>Are you sure you want to remove <B>" + this.contactItem.getDisplayName() + "</B><BR>from your contact list?</html>";
      MessageDialog dialog=new MessageDialog(this.mainFrame,message,Messages.getString("remove"));
      int returnCode=dialog.showDialog();
      if (returnCode == MessageDialog.OK_RETURN_CODE) {
        this.mainFrame.getContactList().removeMetaContact(contactItem);
      }
 else       if (returnCode == MessageDialog.OK_DONT_ASK_CODE) {
        this.mainFrame.getContactList().removeMetaContact(contactItem);
        Constants.REMOVE_CONTACT_ASK=false;
      }
    }
 else {
      this.mainFrame.getContactList().removeMetaContact(contactItem);
    }
  }
}
