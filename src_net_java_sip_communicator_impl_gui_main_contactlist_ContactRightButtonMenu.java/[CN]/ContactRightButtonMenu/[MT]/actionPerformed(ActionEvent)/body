{
  JMenuItem menuItem=(JMenuItem)e.getSource();
  String itemName=menuItem.getName();
  Contact contact=null;
  if (itemName.startsWith(addSubcontactPrefix)) {
    ProtocolProviderService pps=((ProviderAwareMenuItem)menuItem).getProvider();
    if (pps != null) {
      AddContactDialog dialog=new AddContactDialog(mainFrame,contactItem,pps);
      Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
      dialog.setLocation(screenSize.width / 2 - 250,screenSize.height / 2 - 100);
      dialog.showDialog();
    }
  }
 else   if (itemName.equalsIgnoreCase("sendMessage")) {
    GuiActivator.getUIService().getChatWindowManager().startChat(contactItem);
  }
 else   if (itemName.equalsIgnoreCase("sendSms")) {
    Contact defaultSmsContact=contactItem.getDefaultContact(OperationSetSmsMessaging.class);
    GuiActivator.getUIService().getChatWindowManager().startChat(contactItem,defaultSmsContact,true);
  }
 else   if (itemName.equalsIgnoreCase("call")) {
    contact=contactItem.getDefaultContact(OperationSetBasicTelephony.class);
    callContact(contact);
  }
 else   if (itemName.equalsIgnoreCase("sendFile")) {
    SipCommFileChooser scfc=GenericFileDialog.create(null,"Send file...",SipCommFileChooser.LOAD_FILE_OPERATION,ConfigurationManager.getSendFileLastDir());
    File selectedFile=scfc.getFileFromDialog();
    if (selectedFile != null) {
      ConfigurationManager.setSendFileLastDir(selectedFile.getParent());
      GuiActivator.getUIService().getChatWindowManager().getSelectedChat().sendFile(selectedFile);
    }
    GuiActivator.getUIService().getChatWindowManager().startChat(contactItem);
  }
 else   if (itemName.equalsIgnoreCase("renameContact")) {
    RenameContactDialog dialog=new RenameContactDialog(mainFrame,contactItem);
    dialog.setLocation(Toolkit.getDefaultToolkit().getScreenSize().width / 2 - 200,Toolkit.getDefaultToolkit().getScreenSize().height / 2 - 50);
    dialog.setVisible(true);
    dialog.requestFocusInFiled();
  }
 else   if (itemName.equalsIgnoreCase("viewHistory")) {
    HistoryWindow history;
    HistoryWindowManager historyWindowManager=GuiActivator.getUIService().getHistoryWindowManager();
    if (historyWindowManager.containsHistoryWindowForContact(contactItem)) {
      history=historyWindowManager.getHistoryWindowForContact(contactItem);
      if (history.getState() == JFrame.ICONIFIED)       history.setState(JFrame.NORMAL);
      history.toFront();
    }
 else {
      history=new HistoryWindow(this.contactItem);
      historyWindowManager.addHistoryWindowForContact(contactItem,history);
      history.setVisible(true);
    }
  }
 else   if (itemName.startsWith(moveToPrefix)) {
    MetaContactListManager.moveMetaContactToGroup(contactItem,itemName.substring(moveToPrefix.length()));
  }
 else   if (itemName.startsWith(removeContactPrefix)) {
    contact=getContactFromMetaContact(itemName.substring(removeContactPrefix.length()));
    if (contact != null) {
      MetaContactListManager.removeContact(contact);
    }
 else {
      MetaContactListManager.removeMetaContact(contactItem);
    }
  }
 else   if (itemName.startsWith(moveSubcontactPrefix)) {
    contact=getContactFromMetaContact(itemName.substring(moveSubcontactPrefix.length()));
    contactList.addContactListListener(this);
    contactList.setGroupClickConsumed(true);
    this.moveDialog=new MoveSubcontactMessageDialog(mainFrame,this);
    this.moveDialog.addWindowListener(new WindowAdapter(){
      public void windowClosed(      WindowEvent e){
        contactList.setGroupClickConsumed(false);
      }
    }
);
    this.moveDialog.setVisible(true);
    if (contact != null) {
      this.contactToMove=contact;
    }
 else {
      this.moveAllContacts=true;
    }
  }
 else   if (itemName.startsWith(callContactPrefix)) {
    contact=getContactFromMetaContact(itemName.substring(callContactPrefix.length()));
    callContact(contact);
  }
}
