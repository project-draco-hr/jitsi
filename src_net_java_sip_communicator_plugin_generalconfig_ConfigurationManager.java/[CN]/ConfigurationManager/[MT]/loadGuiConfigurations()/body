{
  String autoPopupProperty="net.java.sip.communicator.impl.gui.autoPopupNewMessage";
  String autoPopup=configService.getString(autoPopupProperty);
  if (autoPopup == null)   autoPopup=Resources.getSettingsString(autoPopupProperty);
  if (autoPopup != null && autoPopup.equalsIgnoreCase("yes"))   autoPopupNewMessage=true;
  String messageCommandProperty="net.java.sip.communicator.impl.gui.sendMessageCommand";
  String messageCommand=configService.getString(messageCommandProperty);
  if (messageCommand == null)   messageCommand=Resources.getSettingsString(messageCommandProperty);
  if (messageCommand != null && messageCommand.length() > 0) {
    sendMessageCommand=messageCommand;
  }
  String isSendTypingNotifProperty="net.java.sip.communicator.impl.gui.sendTypingNotifications";
  String isSendTypingNotif=configService.getString(isSendTypingNotifProperty);
  if (isSendTypingNotif == null)   isSendTypingNotif=Resources.getSettingsString(isSendTypingNotifProperty);
  if (isSendTypingNotif != null && isSendTypingNotif.length() > 0) {
    isSendTypingNotifications=new Boolean(isSendTypingNotif).booleanValue();
  }
  String isMultiChatWindowEnabledStringProperty="net.java.sip.communicator.impl.gui.isMultiChatWindowEnabled";
  String isMultiChatWindowEnabledString=configService.getString(isMultiChatWindowEnabledStringProperty);
  if (isMultiChatWindowEnabledString == null)   isMultiChatWindowEnabledString=Resources.getSettingsString(isMultiChatWindowEnabledStringProperty);
  if (isMultiChatWindowEnabledString != null && isMultiChatWindowEnabledString.length() > 0) {
    isMultiChatWindowEnabled=new Boolean(isMultiChatWindowEnabledString).booleanValue();
  }
  String isHistoryLoggingEnabledPropertyString="net.java.sip.communicator.impl.msghistory.isMessageHistoryEnabled";
  String isHistoryLoggingEnabledString=configService.getString(isHistoryLoggingEnabledPropertyString);
  if (isHistoryLoggingEnabledString == null)   isHistoryLoggingEnabledString=Resources.getSettingsString(isHistoryLoggingEnabledPropertyString);
  if (isHistoryLoggingEnabledString != null && isHistoryLoggingEnabledString.length() > 0) {
    isHistoryLoggingEnabled=new Boolean(isHistoryLoggingEnabledString).booleanValue();
  }
  String isHistoryShownStringProperty="net.java.sip.communicator.impl.gui.isMessageHistoryShown";
  String isHistoryShownString=configService.getString(isHistoryShownStringProperty);
  if (isHistoryShownString == null)   isHistoryShownString=Resources.getSettingsString(isHistoryShownStringProperty);
  if (isHistoryShownString != null && isHistoryShownString.length() > 0) {
    isHistoryShown=new Boolean(isHistoryShownString).booleanValue();
  }
  String chatHistorySizeStringProperty="net.java.sip.communicator.impl.gui.messageHistorySize";
  String chatHistorySizeString=configService.getString(chatHistorySizeStringProperty);
  if (chatHistorySizeString == null)   chatHistorySizeString=Resources.getSettingsString(chatHistorySizeStringProperty);
  if (chatHistorySizeString != null && chatHistorySizeString.length() > 0) {
    chatHistorySize=new Integer(chatHistorySizeString).intValue();
  }
  String isTransparentWindowEnabledProperty="net.java.sip.communicator.impl.gui.isTransparentWindowEnabled";
  String isTransparentWindowEnabledString=configService.getString(isTransparentWindowEnabledProperty);
  if (isTransparentWindowEnabledString == null)   isTransparentWindowEnabledString=Resources.getSettingsString(isTransparentWindowEnabledProperty);
  if (isTransparentWindowEnabledString != null && isTransparentWindowEnabledString.length() > 0) {
    isTransparentWindowEnabled=new Boolean(isTransparentWindowEnabledString).booleanValue();
  }
  String windowTransparencyProperty="net.java.sip.communicator.impl.gui.windowTransparency";
  String windowTransparencyString=configService.getString(windowTransparencyProperty);
  if (windowTransparencyString == null)   windowTransparencyString=Resources.getSettingsString(windowTransparencyProperty);
  if (windowTransparencyString != null && windowTransparencyString.length() > 0) {
    windowTransparency=new Integer(windowTransparencyString).intValue();
  }
}
