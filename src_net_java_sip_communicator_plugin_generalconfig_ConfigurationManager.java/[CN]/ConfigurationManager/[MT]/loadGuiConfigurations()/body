{
  String autoPopupProperty="service.gui.AUTO_POPUP_NEW_MESSAGE";
  String autoPopup=configService.getString(autoPopupProperty);
  if (autoPopup == null)   autoPopup=Resources.getSettingsString(autoPopupProperty);
  if (autoPopup != null && autoPopup.equalsIgnoreCase("yes"))   autoPopupNewMessage=true;
  String messageCommandProperty="service.gui.SEND_MESSAGE_COMMAND";
  String messageCommand=configService.getString(messageCommandProperty);
  if (messageCommand == null)   messageCommand=Resources.getSettingsString(messageCommandProperty);
  if (messageCommand != null && messageCommand.length() > 0) {
    sendMessageCommand=messageCommand;
  }
  String isSendTypingNotifProperty="service.gui.SEND_TYPING_NOTIFICATIONS_ENABLED";
  String isSendTypingNotif=configService.getString(isSendTypingNotifProperty);
  if (isSendTypingNotif == null)   isSendTypingNotif=Resources.getSettingsString(isSendTypingNotifProperty);
  if (isSendTypingNotif != null && isSendTypingNotif.length() > 0) {
    isSendTypingNotifications=new Boolean(isSendTypingNotif).booleanValue();
  }
  String isLeaveChatRoomOnWindowCloseEnabledStringProperty="service.gui.LEAVE_CHATROOM_ON_WINDOW_CLOSE";
  String isLeaveChatRoomOnWindowCloseEnabledString=configService.getString(isLeaveChatRoomOnWindowCloseEnabledStringProperty);
  if (isLeaveChatRoomOnWindowCloseEnabledString == null)   isLeaveChatRoomOnWindowCloseEnabledString=Resources.getSettingsString(isLeaveChatRoomOnWindowCloseEnabledStringProperty);
  if (isLeaveChatRoomOnWindowCloseEnabledString != null && isLeaveChatRoomOnWindowCloseEnabledString.length() > 0) {
    isLeaveChatRoomOnWindowCloseEnabled=new Boolean(isLeaveChatRoomOnWindowCloseEnabledString).booleanValue();
  }
  String isMultiChatWindowEnabledStringProperty="service.gui.IS_MULTI_CHAT_WINDOW_ENABLED";
  String isMultiChatWindowEnabledString=configService.getString(isMultiChatWindowEnabledStringProperty);
  if (isMultiChatWindowEnabledString == null)   isMultiChatWindowEnabledString=Resources.getSettingsString(isMultiChatWindowEnabledStringProperty);
  if (isMultiChatWindowEnabledString != null && isMultiChatWindowEnabledString.length() > 0) {
    isMultiChatWindowEnabled=new Boolean(isMultiChatWindowEnabledString).booleanValue();
  }
  String isHistoryLoggingEnabledPropertyString="impl.msghistory.IS_MESSAGE_HISTORY_ENABLED";
  String isHistoryLoggingEnabledString=configService.getString(isHistoryLoggingEnabledPropertyString);
  if (isHistoryLoggingEnabledString == null)   isHistoryLoggingEnabledString=Resources.getSettingsString(isHistoryLoggingEnabledPropertyString);
  if (isHistoryLoggingEnabledString != null && isHistoryLoggingEnabledString.length() > 0) {
    isHistoryLoggingEnabled=new Boolean(isHistoryLoggingEnabledString).booleanValue();
  }
  String isHistoryShownStringProperty="service.gui.IS_MESSAGE_HISTORY_SHOWN";
  String isHistoryShownString=configService.getString(isHistoryShownStringProperty);
  if (isHistoryShownString == null)   isHistoryShownString=Resources.getSettingsString(isHistoryShownStringProperty);
  if (isHistoryShownString != null && isHistoryShownString.length() > 0) {
    isHistoryShown=new Boolean(isHistoryShownString).booleanValue();
  }
  String chatHistorySizeStringProperty="service.gui.MESSAGE_HISTORY_SIZE";
  String chatHistorySizeString=configService.getString(chatHistorySizeStringProperty);
  if (chatHistorySizeString == null)   chatHistorySizeString=Resources.getSettingsString(chatHistorySizeStringProperty);
  if (chatHistorySizeString != null && chatHistorySizeString.length() > 0) {
    chatHistorySize=Integer.parseInt(chatHistorySizeString);
  }
  String isTransparentWindowEnabledProperty="impl.gui.IS_TRANSPARENT_WINDOW_ENABLED";
  String isTransparentWindowEnabledString=configService.getString(isTransparentWindowEnabledProperty);
  if (isTransparentWindowEnabledString == null)   isTransparentWindowEnabledString=Resources.getSettingsString(isTransparentWindowEnabledProperty);
  if (isTransparentWindowEnabledString != null && isTransparentWindowEnabledString.length() > 0) {
    isTransparentWindowEnabled=new Boolean(isTransparentWindowEnabledString).booleanValue();
  }
  String windowTransparencyProperty="impl.gui.WINDOW_TRANSPARENCY";
  String windowTransparencyString=configService.getString(windowTransparencyProperty);
  if (windowTransparencyString == null)   windowTransparencyString=Resources.getSettingsString(windowTransparencyProperty);
  if (windowTransparencyString != null && windowTransparencyString.length() > 0) {
    windowTransparency=Integer.parseInt(windowTransparencyString);
  }
  String normalizePhoneNumberProperty="impl.gui.NORMALIZE_PHONE_NUMBER";
  isNormalizePhoneNumber=GeneralConfigPluginActivator.getConfigurationService().getBoolean(normalizePhoneNumberProperty,true);
}
