{
  String autoPopup=configService.getString("net.java.sip.communicator.impl.gui.autoPopupNewMessage");
  if (autoPopup != null && autoPopup.equalsIgnoreCase("yes"))   autoPopupNewMessage=true;
  String messageCommand=configService.getString("net.java.sip.communicator.impl.gui.sendMessageCommand");
  if (messageCommand != null && messageCommand != "") {
    sendMessageCommand=messageCommand;
  }
  String isSendTypingNotif=configService.getString("net.java.sip.communicator.impl.gui.sendTypingNotifications");
  if (isSendTypingNotif != null && isSendTypingNotif != "") {
    isSendTypingNotifications=new Boolean(isSendTypingNotif).booleanValue();
  }
  String isMultiChatWindowEnabledString=configService.getString("net.java.sip.communicator.impl.gui.isMultiChatWindowEnabled");
  if (isMultiChatWindowEnabledString != null && isMultiChatWindowEnabledString != "") {
    isMultiChatWindowEnabled=new Boolean(isMultiChatWindowEnabledString).booleanValue();
  }
  String isHistoryLoggingEnabledString=configService.getString("net.java.sip.communicator.impl.msghistory.isMessageHistoryEnabled");
  if (isHistoryLoggingEnabledString != null && isHistoryLoggingEnabledString != "") {
    isHistoryLoggingEnabled=new Boolean(isHistoryLoggingEnabledString).booleanValue();
  }
  String isHistoryShownString=configService.getString("net.java.sip.communicator.impl.gui.isMessageHistoryShown");
  if (isHistoryShownString != null && isHistoryShownString != "") {
    isHistoryShown=new Boolean(isHistoryShownString).booleanValue();
  }
  String chatHistorySizeString=configService.getString("net.java.sip.communicator.impl.gui.messageHistorySize");
  if (chatHistorySizeString != null && chatHistorySizeString != "") {
    chatHistorySize=new Integer(chatHistorySizeString).intValue();
  }
}
