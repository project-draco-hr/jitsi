{
  Object sourceButton=evt.getSource();
  if (sourceButton.equals(newButton)) {
    NewAccountDialog.showNewAccountDialog();
  }
 else   if (sourceButton.equals(removeButton)) {
    Account account=accountList.getSelectedAccount();
    if (account == null)     return;
    AccountID accountID=account.getAccountID();
    ProtocolProviderFactory providerFactory=GuiActivator.getProtocolProviderFactory(accountID.getProtocolName());
    if (providerFactory != null) {
      int result=JOptionPane.showConfirmDialog(this,GuiActivator.getResources().getI18NString("service.gui.REMOVE_ACCOUNT_MESSAGE"),GuiActivator.getResources().getI18NString("service.gui.REMOVE_ACCOUNT"),JOptionPane.YES_NO_OPTION);
      if (result == JOptionPane.YES_OPTION) {
        ConfigurationService configService=GuiActivator.getConfigurationService();
        String prefix="net.java.sip.communicator.impl.gui.accounts";
        List<String> accounts=configService.getPropertyNamesByPrefix(prefix,true);
        for (        String accountRootPropName : accounts) {
          String accountUID=configService.getString(accountRootPropName);
          if (accountUID.equals(accountID.getAccountUniqueID())) {
            configService.setProperty(accountRootPropName,null);
            break;
          }
        }
        boolean isUninstalled=providerFactory.uninstallAccount(accountID);
        if (isUninstalled) {
          accountList.ensureAccountRemoved(accountID);
        }
      }
    }
  }
 else   if (sourceButton.equals(editButton)) {
    Account account=accountList.getSelectedAccount();
    if (account == null)     return;
    AccountRegWizardContainerImpl wizard=(AccountRegWizardContainerImpl)GuiActivator.getUIService().getAccountRegWizardContainer();
    wizard.setTitle(GuiActivator.getResources().getI18NString("service.gui.ACCOUNT_REGISTRATION_WIZARD"));
    wizard.modifyAccount(account.getProtocolProvider());
    wizard.showDialog(false);
  }
}
