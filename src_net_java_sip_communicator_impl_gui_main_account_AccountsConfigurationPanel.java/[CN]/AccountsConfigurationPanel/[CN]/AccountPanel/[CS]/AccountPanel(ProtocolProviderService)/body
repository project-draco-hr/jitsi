{
  super(new GridBagLayout());
  this.protocolProvider=protocolProvider;
  this.setPreferredSize(new Dimension(400,80));
  this.setBorder(BorderFactory.createMatteBorder(0,0,1,0,Color.GRAY));
  try {
    protocolImage=ImageIO.read(new ByteArrayInputStream(protocolProvider.getProtocolIcon().getIcon(ProtocolIcon.ICON_SIZE_16x16)));
  }
 catch (  IOException e) {
    logger.error("Could not read image.",e);
  }
  protocolLabel.setIcon(new ImageIcon(protocolImage));
  constraints.insets=new Insets(0,5,0,5);
  constraints.weightx=0;
  constraints.gridx=0;
  constraints.gridy=0;
  constraints.anchor=GridBagConstraints.FIRST_LINE_START;
  this.add(protocolLabel,constraints);
  this.accountLabel.setText(protocolProvider.getAccountID().getDisplayName());
  constraints.insets=new Insets(0,0,0,0);
  constraints.gridx=1;
  constraints.gridy=0;
  constraints.fill=GridBagConstraints.HORIZONTAL;
  constraints.anchor=GridBagConstraints.FIRST_LINE_START;
  constraints.weightx=1.0;
  this.add(accountLabel,constraints);
  String passwordRequiredProperty=protocolProvider.getAccountID().getAccountPropertyString(ProtocolProviderFactory.NO_PASSWORD_REQUIRED);
  boolean isPasswordRequired=true;
  if (passwordRequiredProperty != null && passwordRequiredProperty != "") {
    isPasswordRequired=!(new Boolean(passwordRequiredProperty).booleanValue());
  }
  if (isPasswordRequired) {
    String password=protocolProvider.getAccountID().getAccountPropertyString(ProtocolProviderFactory.PASSWORD);
    passwordField.setText(password);
    constraints.gridx=1;
    constraints.gridy=1;
    constraints.anchor=GridBagConstraints.FIRST_LINE_START;
    this.add(passwordField,constraints);
  }
  constraints.gridx=2;
  constraints.gridy=0;
  constraints.weightx=0;
  this.add(modifyButton,constraints);
  this.modifyButton.addActionListener(this);
  constraints.gridx=2;
  constraints.gridy=1;
  constraints.weightx=0;
  this.add(removeButton,constraints);
  this.removeButton.addActionListener(this);
}
