{
  if (type == AUDIO)   throw new IllegalStateException("type");
  if (devices != null)   return devices;
  AudioSystem audioSystem;
  List<? extends CaptureDeviceInfo> infos=null;
switch (type) {
case AUDIO_CAPTURE:
    audioSystem=deviceConfiguration.getAudioSystem();
  infos=(audioSystem == null) ? null : audioSystem.getDevices(AudioSystem.CAPTURE_INDEX);
break;
case AUDIO_NOTIFY:
audioSystem=deviceConfiguration.getAudioSystem();
infos=(audioSystem == null) ? null : audioSystem.getDevices(AudioSystem.NOTIFY_INDEX);
break;
case AUDIO_PLAYBACK:
audioSystem=deviceConfiguration.getAudioSystem();
infos=(audioSystem == null) ? null : audioSystem.getDevices(AudioSystem.PLAYBACK_INDEX);
break;
case VIDEO:
infos=deviceConfiguration.getAvailableVideoCaptureDevices(MediaUseCase.CALL);
break;
default :
throw new IllegalStateException("type");
}
final int deviceCount=(infos == null) ? 0 : infos.size();
devices=new CaptureDevice[deviceCount + 1];
if (deviceCount > 0) for (int i=0; i < deviceCount; i++) devices[i]=new CaptureDevice(infos.get(i));
devices[deviceCount]=new CaptureDevice(null);
return devices;
}
