{
  ToolTipManager toolTipManager=ToolTipManager.sharedInstance();
  UIManager.put("ToolTip.background",new Color(GuiActivator.getResources().getColor("service.gui.TOOLTIP_BACKGROUND")));
  toolTipManager.setInitialDelay(500);
  toolTipManager.setDismissDelay(60000);
  toolTipManager.setEnabled(true);
  UIManager.put("ClassLoader",getClass().getClassLoader());
  String laf=UIManager.getSystemLookAndFeelClassName();
  boolean lafIsSet=false;
  if ((laf != null) && !laf.equals(UIManager.getCrossPlatformLookAndFeelClassName())) {
    try {
      UIManager.setLookAndFeel(laf);
      lafIsSet=true;
      UIDefaults uiDefaults=UIManager.getDefaults();
      if (OSUtils.isWindows())       fixWindowsUIDefaults(uiDefaults);
      if (laf.equals("com.sun.java.swing.plaf.gtk.GTKLookAndFeel") || laf.equals("com.sun.java.swing.plaf.motif.MotifLookAndFeel")) {
        uiDefaults.put("ScrollPaneUI",new javax.swing.plaf.metal.MetalLookAndFeel().getDefaults().get("ScrollPaneUI"));
      }
    }
 catch (    ClassNotFoundException ex) {
    }
catch (    InstantiationException ex) {
    }
catch (    IllegalAccessException ex) {
    }
catch (    UnsupportedLookAndFeelException ex) {
    }
  }
  if (!lafIsSet) {
    try {
      SIPCommLookAndFeel lf=new SIPCommLookAndFeel();
      SIPCommLookAndFeel.setCurrentTheme(new SIPCommDefaultTheme());
      boolean isDecorated=Boolean.parseBoolean(GuiActivator.getResources().getSettingsString("impl.gui.IS_LOOK_AND_FEEL_DECORATED"));
      if (isDecorated) {
        JFrame.setDefaultLookAndFeelDecorated(true);
        JDialog.setDefaultLookAndFeelDecorated(true);
      }
      UIManager.setLookAndFeel(lf);
    }
 catch (    UnsupportedLookAndFeelException e) {
      logger.error("The provided Look & Feel is not supported.",e);
    }
  }
}
