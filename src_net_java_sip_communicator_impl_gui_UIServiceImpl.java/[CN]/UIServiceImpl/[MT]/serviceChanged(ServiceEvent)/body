{
  Object sService=GuiActivator.bundleContext.getService(event.getServiceReference());
  if (!(sService instanceof PluginComponent))   return;
  PluginComponent pluginComponent=(PluginComponent)sService;
switch (event.getType()) {
case ServiceEvent.REGISTERED:
    if (logger.isInfoEnabled())     logger.info("Handling registration of a new Plugin Component.");
  Object component=pluginComponent.getComponent();
if (!(component instanceof Component)) {
  logger.error("Plugin Component type is not supported." + "Should provide a plugin in AWT, SWT or Swing.");
  if (logger.isDebugEnabled())   logger.debug("Logging exception to show the calling plugin",new Exception(""));
  return;
}
this.firePluginEvent(pluginComponent,PluginComponentEvent.PLUGIN_COMPONENT_ADDED);
break;
case ServiceEvent.UNREGISTERING:
this.firePluginEvent(pluginComponent,PluginComponentEvent.PLUGIN_COMPONENT_REMOVED);
break;
}
}
