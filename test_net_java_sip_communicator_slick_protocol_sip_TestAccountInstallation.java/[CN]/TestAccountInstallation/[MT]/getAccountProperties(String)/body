{
  Hashtable<String,String> table=new Hashtable<String,String>();
  String userID=System.getProperty(accountPrefix + ProtocolProviderFactory.USER_ID,null);
  assertNotNull("The system property named " + accountPrefix + ProtocolProviderFactory.USER_ID+ " has to tontain a valid SIP address that could be used during "+ "SIP Communicator's tests.",userID);
  table.put(ProtocolProviderFactory.USER_ID,userID);
  String displayName=System.getProperty(accountPrefix + ProtocolProviderFactory.DISPLAY_NAME,null);
  assertNotNull("The system property named " + accountPrefix + ProtocolProviderFactory.DISPLAY_NAME+ " has to contain a valid name string that could be used during "+ "SIP Communicator's tests.",displayName);
  table.put(ProtocolProviderFactory.DISPLAY_NAME,displayName);
  String passwd=System.getProperty(accountPrefix + ProtocolProviderFactory.PASSWORD,null);
  assertNotNull("The system property named " + accountPrefix + ProtocolProviderFactory.PASSWORD+ " has to contain the password corresponding to the account "+ "specified in "+ accountPrefix+ ProtocolProviderFactory.USER_ID,passwd);
  table.put(ProtocolProviderFactory.PASSWORD,passwd);
  String serverAddress=System.getProperty(accountPrefix + ProtocolProviderFactory.SERVER_ADDRESS,null);
  assertNotNull("The system property named " + accountPrefix + ProtocolProviderFactory.SERVER_ADDRESS+ " has to contain a valid server address to use for testing.",serverAddress);
  table.put(ProtocolProviderFactory.SERVER_ADDRESS,serverAddress);
  String serverPort=System.getProperty(accountPrefix + ProtocolProviderFactory.SERVER_PORT,null);
  if (serverPort != null) {
    table.put(ProtocolProviderFactory.SERVER_PORT,serverPort);
  }
  String proxyAddress=System.getProperty(accountPrefix + ProtocolProviderFactory.PROXY_ADDRESS,null);
  if (serverPort != null) {
    table.put(ProtocolProviderFactory.PROXY_ADDRESS,proxyAddress);
    String proxyPort=System.getProperty(accountPrefix + ProtocolProviderFactory.PROXY_PORT,null);
    if (proxyPort != null) {
      table.put(ProtocolProviderFactory.PROXY_PORT,proxyPort);
    }
  }
  String xCapServerUri=System.getProperty(accountPrefix + SipProtocolProviderServiceLick.XCAP_SERVER_PROPERTY_NAME,null);
  if (xCapServerUri != null) {
    table.put(ServerStoredContactListSipImpl.XCAP_ENABLE,Boolean.TRUE.toString());
    table.put(ServerStoredContactListSipImpl.XCAP_USE_SIP_CREDETIALS,Boolean.TRUE.toString());
    table.put(ServerStoredContactListSipImpl.XCAP_USE_SIP_CREDETIALS,Boolean.TRUE.toString());
    table.put(ServerStoredContactListSipImpl.XCAP_SERVER_URI,xCapServerUri);
  }
  table.put(ProtocolProviderFactory.FORCE_P2P_MODE,Boolean.FALSE.toString());
  return table;
}
