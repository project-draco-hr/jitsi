{
  super.doConnect();
  boolean deviceIsOpened;
  try {
    deviceIsOpened=device.open();
  }
 catch (  NSErrorException nseex) {
    IOException ioex=new IOException();
    ioex.initCause(nseex);
    throw ioex;
  }
  if (!deviceIsOpened)   throw new IOException("Failed to open QTCaptureDevice");
  QTCaptureDeviceInput deviceInput=QTCaptureDeviceInput.deviceInputWithDevice(device);
  captureSession=new QTCaptureSession();
  try {
    captureSession.addInput(deviceInput);
  }
 catch (  NSErrorException nseex) {
    IOException ioex=new IOException();
    ioex.initCause(nseex);
    throw ioex;
  }
synchronized (getStreamSyncRoot()) {
    Object[] streams=streams();
    if (streams != null)     for (    Object stream : streams)     if (stream != null)     try {
      captureSession.addOutput(((QuickTimeStream)stream).captureOutput);
    }
 catch (    NSErrorException nseex) {
      logger.error("Failed to addOutput to QTCaptureSession",nseex);
      IOException ioex=new IOException();
      ioex.initCause(nseex);
      throw ioex;
    }
  }
}
