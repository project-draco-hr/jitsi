{
  if (contact == null || this.contact != contact) {
    return;
  }
  menu.removeAll();
  java.util.List<Session> multipleInstances=OtrActivator.scOtrEngine.getSessionInstances(contact);
  int index=0;
  for (  Session session : multipleInstances) {
    index++;
    if (!outgoingSessions.containsKey(session))     outgoingSessions.put(session,new JRadioButtonMenuItem());
    JMenuItem menuItem=outgoingSessions.get(session);
    menuItem.setText("Session " + index);
    ImageIcon imageIcon=null;
switch (session.getSessionStatus(session.getReceiverInstanceTag())) {
case ENCRYPTED:
      PublicKey pubKey=session.getRemotePublicKey(session.getReceiverInstanceTag());
    String fingerprint=OtrActivator.scOtrKeyManager.getFingerprintFromPublicKey(pubKey);
  imageIcon=OtrActivator.scOtrKeyManager.isVerified(contact,fingerprint) ? verifiedLockedPadlockImage : unverifiedLockedPadlockImage;
break;
case FINISHED:
imageIcon=finishedPadlockImage;
break;
case PLAINTEXT:
imageIcon=unlockedPadlockImage;
break;
}
menuItem.setIcon(imageIcon);
menu.add(menuItem);
SelectedObject selectedObject=new SelectedObject(imageIcon,session);
this.menu.setSelected(selectedObject);
buttonGroup.add(menuItem);
menuItem.addActionListener(this);
setSelected(menu.getItem(0));
}
System.out.println("da");
updateEnableStatus();
}
