{
  this.dialog=dialog;
  setLayout(new BoxLayout(this,BoxLayout.Y_AXIS));
  accountsComboBox=new JComboBox();
  accountsComboBox.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      if (e.getStateChange() == ItemEvent.SELECTED) {
        ConnectionDetailsPanel panel=(ConnectionDetailsPanel)e.getItem();
        panel.setOpaque(false);
        centerPanel.removeAll();
        centerPanel.add(panel,BorderLayout.CENTER);
        centerPanel.revalidate();
        centerPanel.repaint();
        currentDetailsPanel=panel;
      }
    }
  }
);
  init();
  centerPanel.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
  ComboBoxRenderer renderer=new ComboBoxRenderer();
  accountsComboBox.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
  accountsComboBox.setRenderer(renderer);
  JLabel comboLabel=new JLabel(Resources.getString("plugin.accountinfo.SELECT_ACCOUNT"));
  comboLabel.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
  JPanel comboBoxPanel=new TransparentPanel();
  comboBoxPanel.setLayout(new BoxLayout(comboBoxPanel,BoxLayout.X_AXIS));
  comboBoxPanel.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
  comboBoxPanel.add(comboLabel);
  comboBoxPanel.add(accountsComboBox);
  add(comboBoxPanel);
  add(centerPanel);
}
