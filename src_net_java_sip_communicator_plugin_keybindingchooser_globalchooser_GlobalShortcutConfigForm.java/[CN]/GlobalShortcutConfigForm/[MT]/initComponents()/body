{
  shortcutsTable.setRowHeight(22);
  shortcutsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  shortcutsTable.setShowHorizontalLines(false);
  shortcutsTable.setShowVerticalLines(false);
  shortcutsTable.setModel(tableModel);
  shortcutsTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
  shortcutsTable.addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() >= 1) {
        int row=GlobalShortcutConfigForm.this.shortcutsTable.getSelectedRow();
        int column=GlobalShortcutConfigForm.this.shortcutsTable.getSelectedColumn();
        if (row >= 0 && column >= 1) {
          currentRow=row;
          currentColumn=column;
        }
      }
    }
  }
);
  shortcutsTable.addKeyListener(new KeyAdapter(){
    private KeyEvent buffer=null;
    @Override public void keyPressed(    KeyEvent event){
      this.buffer=event;
    }
    @Override public void keyReleased(    KeyEvent event){
      if (buffer != null) {
        AWTKeyStroke input=KeyStroke.getKeyStrokeForEvent(buffer);
        buffer=null;
        if (currentRow != -1) {
          GlobalShortcutEntry en=GlobalShortcutConfigForm.this.tableModel.getEntryAt(currentRow);
          List<AWTKeyStroke> kss=new ArrayList<AWTKeyStroke>();
          if (currentColumn == 1) {
            kss.add(input);
            kss.add(en.getShortcut2());
          }
 else           if (currentColumn == 2) {
            kss.add(en.getShortcut());
            kss.add(input);
          }
 else {
            return;
          }
          en.setShortcuts(kss);
          GlobalShortcutConfigForm.this.refresh();
          GlobalShortcutConfigForm.this.saveConfig();
        }
      }
    }
  }
);
  scrollPane.getViewport().add(this.shortcutsTable);
  mainPanel.add(this.scrollPane,BorderLayout.CENTER);
  mainPanel.setPreferredSize(new Dimension(500,400));
  shortcutsTable.getSelectionModel().addListSelectionListener(this);
  loadConfig();
}
