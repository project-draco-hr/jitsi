{
  Dialog dialog=serverTransaction.getDialog();
  CallPeerSipImpl callPeer=activeCallsRepository.findCallPeer(dialog);
  int statusCode;
  CallPeerSipImpl callPeerToReplace=null;
  if (callPeer == null) {
    ReplacesHeader replacesHeader=(ReplacesHeader)invite.getHeader(ReplacesHeader.NAME);
    if (replacesHeader == null) {
      statusCode=Response.RINGING;
    }
 else {
    }
    logger.trace("Creating call peer.");
    callPeer=createCallPeerFor(serverTransaction,sourceProvider);
    logger.trace("call peer created = " + callPeer);
  }
 else {
    statusCode=Response.OK;
  }
  ContentLengthHeader cl=invite.getContentLength();
  if (cl != null && cl.getContentLength() > 0) {
    callPeer.setSdpDescription(new String(invite.getRawContent()));
  }
  Response response=null;
  try {
    response=protocolProvider.getMessageFactory().createResponse(statusCode,invite);
    protocolProvider.attachToTag(response,dialog);
    ((ToHeader)response.getHeader(ToHeader.NAME)).getAddress().setDisplayName(protocolProvider.getOurDisplayName());
    Address callerAddress=((FromHeader)response.getHeader(FromHeader.NAME)).getAddress();
    response.setHeader(protocolProvider.getContactHeader(callerAddress));
    if (statusCode == Response.OK) {
      try {
        processInviteSendingResponse(callPeer,response);
      }
 catch (      OperationFailedException ex) {
        logger.error("Error while trying to send response " + response,ex);
        callPeer.setState(CallPeerState.FAILED,"Internal Error: " + ex.getMessage());
        return;
      }
    }
  }
 catch (  ParseException ex) {
    logger.error("Error while trying to send a response",ex);
    callPeer.setState(CallPeerState.FAILED,"Internal Error: " + ex.getMessage());
    return;
  }
  try {
    logger.trace("will send " + statusCodeString + " response: ");
    serverTransaction.sendResponse(response);
    logger.debug("sent a " + statusCodeString + " response: "+ response);
  }
 catch (  Exception ex) {
    logger.error("Error while trying to send a request",ex);
    callPeer.setState(CallPeerState.FAILED,"Internal Error: " + ex.getMessage());
    return;
  }
  if (statusCode == Response.OK) {
    try {
      processInviteSentResponse(callPeer,response);
    }
 catch (    OperationFailedException ex) {
      logger.error("Error after sending response " + response,ex);
    }
  }
}
