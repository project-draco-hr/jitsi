{
  if (participant.getState().equals(CallPeerState.DISCONNECTED) || participant.getState().equals(CallPeerState.FAILED)) {
    logger.debug("Ignoring a request to hangup a call participant " + "that is already DISCONNECTED");
    return;
  }
  CallPeerSipImpl callParticipant=(CallPeerSipImpl)participant;
  CallPeerState participantState=callParticipant.getState();
  if (participantState.equals(CallPeerState.CONNECTED) || CallPeerState.isOnHold(participantState)) {
    sayBye(callParticipant);
    callParticipant.setState(CallPeerState.DISCONNECTED);
  }
 else   if (callParticipant.getState().equals(CallPeerState.CONNECTING) || callParticipant.getState().equals(CallPeerState.CONNECTING_WITH_EARLY_MEDIA) || callParticipant.getState().equals(CallPeerState.ALERTING_REMOTE_SIDE)) {
    if (callParticipant.getFirstTransaction() != null) {
      sayCancel(callParticipant);
    }
    callParticipant.setState(CallPeerState.DISCONNECTED);
  }
 else   if (participantState.equals(CallPeerState.INCOMING_CALL)) {
    callParticipant.setState(CallPeerState.DISCONNECTED);
    sayBusyHere(callParticipant);
  }
 else   if (participantState.equals(CallPeerState.BUSY)) {
    callParticipant.setState(CallPeerState.DISCONNECTED);
  }
 else   if (participantState.equals(CallPeerState.FAILED)) {
    callParticipant.setState(CallPeerState.DISCONNECTED);
  }
 else {
    callParticipant.setState(CallPeerState.DISCONNECTED);
    logger.error("Could not determine call participant state!");
  }
}
