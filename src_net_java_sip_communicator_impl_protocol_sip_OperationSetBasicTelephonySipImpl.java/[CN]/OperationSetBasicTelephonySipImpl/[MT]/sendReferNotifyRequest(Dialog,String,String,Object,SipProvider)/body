{
  Request notify=createRequest(dialog,Request.NOTIFY);
  HeaderFactory headerFactory=protocolProvider.getHeaderFactory();
  String eventType="refer";
  try {
    notify.setHeader(headerFactory.createEventHeader(eventType));
  }
 catch (  ParseException ex) {
    throwOperationFailedException("Failed to create " + eventType + " Event header.",OperationFailedException.INTERNAL_ERROR,ex);
  }
  SubscriptionStateHeader ssHeader=null;
  try {
    ssHeader=headerFactory.createSubscriptionStateHeader(subscriptionState);
    if (reasonCode != null)     ssHeader.setReasonCode(reasonCode);
  }
 catch (  ParseException ex) {
    throwOperationFailedException("Failed to create " + subscriptionState + " Subscription-State header.",OperationFailedException.INTERNAL_ERROR,ex);
  }
  notify.setHeader(ssHeader);
  ContentTypeHeader ctHeader=null;
  try {
    ctHeader=headerFactory.createContentTypeHeader("message","sipfrag");
  }
 catch (  ParseException ex) {
    throwOperationFailedException("Failed to create Content-Type header.",OperationFailedException.INTERNAL_ERROR,ex);
  }
  try {
    notify.setContent(content,ctHeader);
  }
 catch (  ParseException ex) {
    throwOperationFailedException("Failed to set NOTIFY body/content.",OperationFailedException.INTERNAL_ERROR,ex);
  }
  ClientTransaction clientTransaction=null;
  try {
    clientTransaction=sipProvider.getNewClientTransaction(notify);
  }
 catch (  TransactionUnavailableException ex) {
    throwOperationFailedException("Failed to create a client transaction for the new refer NOTIFY.",OperationFailedException.INTERNAL_ERROR,ex);
  }
  try {
    dialog.sendRequest(clientTransaction);
  }
 catch (  SipException ex) {
    throwOperationFailedException("Failed to send the new refer NOTIFY.",OperationFailedException.NETWORK_FAILURE,ex);
  }
}
