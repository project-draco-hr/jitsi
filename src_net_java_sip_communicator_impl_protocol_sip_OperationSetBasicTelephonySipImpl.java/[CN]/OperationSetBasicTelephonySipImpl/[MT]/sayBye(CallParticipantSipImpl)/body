{
  Request request=callParticipant.getFirstTransaction().getRequest();
  Request bye=null;
  try {
    bye=callParticipant.getDialog().createRequest(Request.BYE);
    InetAddress destinationInetAddress=null;
    String host=((SipURI)bye.getRequestURI()).getHost();
    try {
      destinationInetAddress=InetAddress.getByName(host);
    }
 catch (    UnknownHostException ex) {
      throw new IllegalArgumentException(host + " is not a valid internet address " + ex.getMessage());
    }
    ArrayList viaHeaders=protocolProvider.getLocalViaHeaders(destinationInetAddress,protocolProvider.getRegistrarConnection().getRegistrarListeningPoint());
    bye.setHeader((ViaHeader)viaHeaders.get(0));
    bye.addHeader(protocolProvider.getSipCommUserAgentHeader());
  }
 catch (  SipException ex) {
    logger.error("Failed to create bye request!",ex);
    throw new OperationFailedException("Failed to create bye request!",OperationFailedException.INTERNAL_ERROR,ex);
  }
  ClientTransaction clientTransaction=null;
  try {
    clientTransaction=callParticipant.getJainSipProvider().getNewClientTransaction(bye);
  }
 catch (  TransactionUnavailableException ex) {
    logger.error("Failed to construct a client transaction from the BYE request",ex);
    throw new OperationFailedException("Failed to construct a client transaction from the BYE request",OperationFailedException.INTERNAL_ERROR,ex);
  }
  try {
    callParticipant.getDialog().sendRequest(clientTransaction);
    logger.debug("sent request:\n" + bye);
  }
 catch (  SipException ex) {
    throw new OperationFailedException("Failed to send the BYE request",OperationFailedException.NETWORK_FAILURE,ex);
  }
}
