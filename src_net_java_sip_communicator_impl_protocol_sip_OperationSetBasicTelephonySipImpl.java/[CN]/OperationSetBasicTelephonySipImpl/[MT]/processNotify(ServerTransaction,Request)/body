{
  EventHeader eventHeader=(EventHeader)notifyRequest.getHeader(EventHeader.NAME);
  if ((eventHeader == null) || !"refer".equals(eventHeader.getEventType())) {
    return false;
  }
  SubscriptionStateHeader ssHeader=(SubscriptionStateHeader)notifyRequest.getHeader(SubscriptionStateHeader.NAME);
  if (ssHeader == null) {
    logger.error("NOTIFY of refer event type" + "with no Subscription-State header.");
    return false;
  }
  Dialog dialog=serverTransaction.getDialog();
  CallPeerSipImpl peer=activeCallsRepository.findCallPeer(dialog);
  if (peer == null) {
    logger.debug("Received a stray refer NOTIFY request.");
    return false;
  }
  Response ok;
  try {
    ok=messageFactory.createResponse(Response.OK,notifyRequest);
    serverTransaction.sendResponse(ok);
  }
 catch (  ParseException ex) {
    String message="Failed to create OK response to refer NOTIFY.";
    logger.error(message,ex);
    peer.setState(CallPeerState.DISCONNECTED,message);
    return false;
  }
catch (  Exception ex) {
    String message="Failed to send OK response to refer NOTIFY request.";
    logger.error(message,ex);
    peer.setState(CallPeerState.DISCONNECTED,message);
    return false;
  }
  if (SubscriptionStateHeader.TERMINATED.equals(ssHeader.getState()) && !EventPackageUtils.removeSubscriptionThenIsDialogAlive(dialog,"refer")) {
    peer.setState(CallPeerState.DISCONNECTED);
  }
  if (!CallPeerState.DISCONNECTED.equals(peer.getState()) && !EventPackageUtils.isByeProcessed(dialog)) {
    boolean dialogIsAlive;
    try {
      dialogIsAlive=peer.sayBye();
    }
 catch (    OperationFailedException ex) {
      logger.error("Failed to send BYE in response to refer NOTIFY request.",ex);
      dialogIsAlive=false;
    }
    if (!dialogIsAlive) {
      peer.setState(CallPeerState.DISCONNECTED);
    }
  }
  return true;
}
