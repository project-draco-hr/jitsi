{
  logger.trace("Group added: " + group.getName());
  logger.trace("Buddies: " + buddies);
  ContactGroupIcqImpl newGroup=findContactGroup(group.getName());
  if (newGroup == null) {
    newGroup=new ContactGroupIcqImpl((MutableGroup)group,buddies,ServerStoredContactListIcqImpl.this,true);
  }
 else {
    List newContacts=new ArrayList();
    List deletedContacts=new ArrayList();
    newGroup.updateGroup(buddies,newContacts,deletedContacts);
    fireGroupEvent(newGroup,ServerStoredGroupEvent.GROUP_RESOLVED_EVENT);
    Iterator deletedContactsIter=deletedContacts.iterator();
    while (deletedContactsIter.hasNext()) {
      ContactIcqImpl contact=(ContactIcqImpl)deletedContactsIter.next();
      fireContactRemoved(newGroup,contact);
    }
    Iterator contactsIter=newGroup.contacts();
    while (contactsIter.hasNext()) {
      ContactIcqImpl contact=(ContactIcqImpl)contactsIter.next();
      if (newContacts.contains(contact))       fireContactAdded(newGroup,contact,0);
 else       fireContactResolved(newGroup,contact);
    }
  }
  for (int i=0; i < buddies.size(); i++)   ((Buddy)buddies.get(i)).addBuddyListener(jsimBuddyListener);
  int groupIndex=newItems.indexOf(group);
  int insertPos=0;
  if (groupIndex == 0) {
    rootGroup.addSubGroup(insertPos,newGroup);
  }
 else {
    for (; groupIndex >= 0; groupIndex--) {
      int prevContactGroupIndex=findContactGroupIndex((Group)newItems.get(groupIndex));
      if (prevContactGroupIndex != -1)       insertPos=prevContactGroupIndex + 1;
    }
    rootGroup.addSubGroup(insertPos,newGroup);
  }
  group.addGroupListener(jsimGroupChangeListener);
  fireGroupEvent(newGroup,ServerStoredGroupEvent.GROUP_CREATED_EVENT);
}
