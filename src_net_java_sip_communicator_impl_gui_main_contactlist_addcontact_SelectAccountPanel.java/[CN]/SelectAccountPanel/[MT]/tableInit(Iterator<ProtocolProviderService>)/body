{
  accountsTable.setPreferredScrollableViewportSize(new Dimension(500,70));
  tableModel.addColumn(GuiActivator.getResources().getI18NString("service.gui.PROTOCOL"));
  tableModel.addColumn(GuiActivator.getResources().getI18NString("service.gui.ACCOUNT"));
  while (protocolProvidersList.hasNext()) {
    ProtocolProviderService pps=protocolProvidersList.next();
    OperationSet opSet=pps.getOperationSet(OperationSetPresence.class);
    if (opSet == null)     continue;
    String pName=pps.getProtocolDisplayName();
    Image protocolImage=null;
    try {
      protocolImage=ImageIO.read(new ByteArrayInputStream(pps.getProtocolIcon().getIcon(ProtocolIcon.ICON_SIZE_16x16)));
    }
 catch (    IOException e) {
      logger.error("Could not read image.",e);
    }
    JLabel protocolLabel=new JLabel();
    protocolLabel.setText(pName);
    protocolLabel.setIcon(new ImageIcon(protocolImage));
    tableModel.addRow(new Object[]{protocolLabel,pps});
  }
  accountsTable.setRowHeight(22);
  accountsTable.setModel(tableModel);
  accountsTable.getColumnModel().getColumn(PROTOCOL_COLUMN_INDEX).setCellRenderer(new LabelTableCellRenderer());
  accountsTable.getColumnModel().getColumn(PROTOCOL_COLUMN_INDEX).sizeWidthToFit();
  accountsTable.getColumnModel().getColumn(ACCOUNT_COLUMN_INDEX).setCellRenderer(new LabelTableCellRenderer());
  accountsTable.getColumnModel().getColumn(ACCOUNT_COLUMN_INDEX).setPreferredWidth(300);
  this.tablePane.getViewport().add(accountsTable);
}
