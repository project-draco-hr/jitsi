{
  String[] supportedAudioEncodings=mediaServCallback.getMediaControl().getSupportedAudioEncodings();
  String[] supportedVideoEncodings=mediaServCallback.getMediaControl().getSupportedVideoEncodings();
  if (offerMediaDescs != null && offerMediaDescs.size() > 0) {
    Vector offeredVideoEncodings=new Vector();
    Vector offeredAudioEncodings=new Vector();
    Iterator offerDescsIter=offerMediaDescs.iterator();
    while (offerDescsIter.hasNext()) {
      MediaDescription desc=(MediaDescription)offerDescsIter.next();
      Media media=desc.getMedia();
      String mediaType=media.getMediaType();
      if (mediaType.equalsIgnoreCase("video")) {
        offeredVideoEncodings=media.getMediaFormats(true);
        continue;
      }
      if (mediaType.equalsIgnoreCase("audio")) {
        offeredAudioEncodings=media.getMediaFormats(true);
        continue;
      }
    }
    Hashtable encodings=new Hashtable(2);
    encodings.put("audio",offeredAudioEncodings);
    encodings.put("video",offeredVideoEncodings);
    encodings=intersectMediaEncodings(encodings);
    List intersectedAudioEncsList=(List)encodings.get("audio");
    List intersectedVideoEncsList=(List)encodings.get("video");
    supportedAudioEncodings=new String[intersectedAudioEncsList.size()];
    supportedVideoEncodings=new String[intersectedVideoEncsList.size()];
    for (int i=0; i < supportedAudioEncodings.length; i++)     supportedAudioEncodings[i]=(String)intersectedAudioEncsList.get(i);
    for (int i=0; i < supportedVideoEncodings.length; i++)     supportedVideoEncodings[i]=(String)intersectedVideoEncsList.get(i);
  }
  Vector mediaDescs=new Vector();
  if (supportedAudioEncodings.length > 0) {
    MediaDescription am=mediaServCallback.getSdpFactory().createMediaDescription("audio",publicAudioAddress.getPort(),1,"RTP/AVP",supportedAudioEncodings);
    if (!mediaServCallback.getDeviceConfiguration().isAudioCaptureSupported()) {
      am.setAttribute("recvonly",null);
    }
    mediaDescs.add(am);
  }
  if (supportedVideoEncodings.length > 0) {
    MediaDescription vm=mediaServCallback.getSdpFactory().createMediaDescription("video",publicVideoAddress.getPort(),1,"RTP/AVP",supportedVideoEncodings);
    if (!mediaServCallback.getDeviceConfiguration().isVideoCaptureSupported()) {
      vm.setAttribute("recvonly",null);
    }
    mediaDescs.add(vm);
  }
  return mediaDescs;
}
