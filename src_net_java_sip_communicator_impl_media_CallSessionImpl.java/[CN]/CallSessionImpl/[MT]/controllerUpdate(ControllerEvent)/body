{
  logger.debug("Received a ControllerEvent: " + ce);
  Player player=(Player)ce.getSourceController();
  if (player == null) {
    return;
  }
  if (ce instanceof ConfigureCompleteEvent) {
    try {
      ((Processor)player).setContentDescriptor(new FileTypeDescriptor(FileTypeDescriptor.WAVE));
      player.realize();
    }
 catch (    Exception exc) {
      logger.error("failed to record to file",exc);
    }
  }
  if (ce instanceof RealizeCompleteEvent) {
    logger.debug("A player was realized and will be started.");
    player.start();
    if (dataSink != null) {
      try {
        logger.info("starting recording to file: " + dataSink);
        MediaLocator dest=new MediaLocator(dataSink);
        DataSource ds=((Processor)player).getDataOutput();
        DataSink sink=Manager.createDataSink(((Processor)player).getDataOutput(),dest);
        player.start();
        RecordInitiator record=new RecordInitiator(sink);
        record.start();
      }
 catch (      Exception e) {
        logger.error("failed while trying to record to file",e);
      }
    }
 else {
      player.start();
    }
    java.awt.Component vc=player.getVisualComponent();
    if (vc != null) {
      javax.swing.JFrame frame=new javax.swing.JFrame();
      frame.setTitle("SIP Communicator - Video Call");
      frame.getContentPane().add(vc);
      frame.pack();
      java.awt.Dimension frameSize=frame.getSize();
      if (frameSize.width < 300) {
        frame.setSize(frameSize.width * 2,frameSize.height * 2);
        frameSize=frame.getSize();
      }
      java.awt.Dimension screenSize=java.awt.Toolkit.getDefaultToolkit().getScreenSize();
      frame.setLocation((screenSize.width - frameSize.width) / 2,(screenSize.height - frameSize.height) / 2);
      frame.setVisible(true);
      videoFrames.add(frame);
    }
  }
  if (ce instanceof StartEvent) {
    logger.debug("Received a StartEvent");
  }
  if (ce instanceof ControllerErrorEvent) {
    logger.error("The following error was reported while starting a player" + ce);
  }
  if (ce instanceof ControllerClosedEvent) {
    logger.debug("Received a ControllerClosedEvent");
  }
}
