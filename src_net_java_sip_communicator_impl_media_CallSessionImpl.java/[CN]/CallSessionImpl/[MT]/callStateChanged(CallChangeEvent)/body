{
  if (!evt.getEventType().equals(CallChangeEvent.CALL_STATE_CHANGE))   return;
  Object newValue=evt.getNewValue();
  if (newValue == evt.getOldValue()) {
    if (logger.isDebugEnabled()) {
      logger.debug("Ignoring call state change from " + newValue + " to the same state.");
    }
    return;
  }
  if (newValue == CallState.CALL_IN_PROGRESS) {
    try {
      logger.debug("call connected. starting streaming");
      startStreamingAndProcessingMedia();
    }
 catch (    MediaException ex) {
      logger.error("Failed to start streaming.",ex);
    }
  }
 else   if (newValue == CallState.CALL_ENDED) {
    logger.warn("Stopping streaming.");
    stopStreaming();
    mediaServCallback.getMediaControl(getCall()).stopProcessingMedia(this);
    Player[] players=this.players.toArray(new Player[this.players.size()]);
    for (    Player player : players)     disposePlayer(player);
    evt.getSourceCall().removeCallChangeListener(this);
    Component[] localVisualComponents=this.localVisualComponents.keySet().toArray(new Component[this.localVisualComponents.size()]);
    for (    Component localVisualComponent : localVisualComponents)     disposeLocalVisualComponent(localVisualComponent);
  }
}
