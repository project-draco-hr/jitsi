{
  String answerStr=answer ? "answer" : "offer";
  logger.trace("Parsing SDP " + answerStr + ": "+ sdpStr);
  SessionDescription sdp;
  try {
    sdp=mediaServCallback.getSdpFactory().createSessionDescription(sdpStr);
  }
 catch (  SdpParseException ex) {
    throw new ParseException("Failed to parse SDP " + answerStr + ": "+ ex.getMessage(),ex.getCharOffset());
  }
catch (  Exception ex) {
    throw new ParseException("Failed to parse SDP " + answerStr + ": "+ ex.getMessage(),0);
  }
  SessionDescription sdpAnswer;
  if (answer) {
    setCallURL(sdp.getURI());
    sdpAnswer=sdp;
  }
 else {
    CallPeerState participantState=participant.getState();
    if (CallPeerState.CONNECTED.equals(participantState) || CallPeerState.isOnHold(participantState)) {
      sdpAnswer=createSessionDescriptionForHold(sdpStr,(getSdpOfferMediaFlags(sdpStr) & CallSession.ON_HOLD_REMOTELY) != 0);
    }
 else {
      sdpAnswer=createSessionDescription(sdp,null);
    }
  }
  Vector<MediaDescription> mediaDescriptions;
  try {
    mediaDescriptions=sdp.getMediaDescriptions(true);
  }
 catch (  SdpException exc) {
    logger.error("failed to extract media descriptions",exc);
    throw new MediaException("failed to extract media descriptions",MediaException.INTERNAL_ERROR,exc);
  }
  initStreamTargets(sdp.getConnection(),mediaDescriptions);
  try {
    mediaDescriptions=sdpAnswer.getMediaDescriptions(true);
  }
 catch (  SdpException exc) {
    logger.error("failed to extract media descriptions",exc);
    throw new MediaException("failed to extract media descriptions",MediaException.INTERNAL_ERROR,exc);
  }
  createSendStreams(mediaDescriptions);
  if (answer) {
    CallPeerState participantState=participant.getState();
    if (CallPeerState.CONNECTED.equals(participantState) || CallPeerState.isOnHold(participantState))     startStreamingAndProcessingMedia();
  }
  return sdpAnswer.toString();
}
