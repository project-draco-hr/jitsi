{
  boolean startedAtLeastOneAudioStream=false;
  RTPManager rtpManager=getAudioRtpManager();
  List<SendStream> sendStreams=rtpManager.getSendStreams();
  if ((sendStreams != null) && (sendStreams.size() > 0)) {
    logger.trace("Will be starting " + sendStreams.size() + " audio send streams.");
    for (    SendStream stream : sendStreams) {
      try {
        stream.getDataSource().connect();
        stream.start();
        startedAtLeastOneAudioStream=true;
      }
 catch (      IOException ex) {
        logger.warn("Failed to start stream.",ex);
      }
    }
  }
 else {
    logger.trace("No audio send streams will be started.");
  }
  boolean startedAtLeastOneVideoStream=false;
  rtpManager=getVideoRtpManager();
  if (mediaServCallback.getMediaControl(getCall()).isLocalVideoAllowed() && ((sendStreams=rtpManager.getSendStreams()) != null) && (sendStreams.size() > 0)) {
    logger.trace("Will be starting " + sendStreams.size() + " video send streams.");
    for (    SendStream stream : sendStreams) {
      try {
        stream.start();
        startedAtLeastOneVideoStream=true;
      }
 catch (      IOException ex) {
        logger.warn("Failed to start stream.",ex);
      }
    }
  }
 else {
    logger.trace("No video send streams will be started.");
  }
  setLocalVideoStreaming(startedAtLeastOneVideoStream);
  if (!startedAtLeastOneAudioStream && !startedAtLeastOneVideoStream && (sendStreams.size() > 0)) {
    stopStreaming();
    throw new MediaException("Failed to start streaming",MediaException.INTERNAL_ERROR);
  }
  applyOnHold();
}
