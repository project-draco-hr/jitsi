{
  boolean startedAtLeastOneStream=false;
  RTPManager rtpManager=getAudioRtpManager();
  Vector sendStreams=rtpManager.getSendStreams();
  if (sendStreams != null && sendStreams.size() > 0) {
    logger.trace("Will be starting " + sendStreams.size() + " audio send streams.");
    Iterator ssIter=sendStreams.iterator();
    while (ssIter.hasNext()) {
      SendStream stream=(SendStream)ssIter.next();
      try {
        stream.getDataSource().connect();
        stream.start();
        startedAtLeastOneStream=true;
      }
 catch (      IOException ex) {
        logger.warn("Failed to start stream.",ex);
      }
    }
  }
 else {
    logger.trace("No audio send streams will be started.");
  }
  rtpManager=getVideoRtpManager();
  sendStreams=rtpManager.getSendStreams();
  if (sendStreams != null && sendStreams.size() > 0) {
    logger.trace("Will be starting " + sendStreams.size() + " video send streams.");
    Iterator ssIter=sendStreams.iterator();
    while (ssIter.hasNext()) {
      SendStream stream=(SendStream)ssIter.next();
      try {
        stream.start();
        startedAtLeastOneStream=true;
      }
 catch (      IOException ex) {
        logger.warn("Failed to start stream.",ex);
      }
    }
  }
 else {
    logger.trace("No video send streams will be started.");
  }
  if (!startedAtLeastOneStream && sendStreams.size() > 0)   throw new MediaException("Failed to start streaming",MediaException.INTERNAL_ERROR);
}
