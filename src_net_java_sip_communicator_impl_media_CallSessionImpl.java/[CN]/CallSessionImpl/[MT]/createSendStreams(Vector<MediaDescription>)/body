{
  Hashtable<String,List<String>> mediaEncodings=extractMediaEncodings(mediaDescriptions);
  DataSource dataSource=mediaServCallback.getMediaControl(getCall()).createDataSourceForEncodings(mediaEncodings);
  PushBufferStream[] streams=((PushBufferDataSource)dataSource).getStreams();
  for (int i=0; i < streams.length; i++) {
    PushBufferStream stream=streams[i];
    javax.media.Format format=stream.getFormat();
    RTPManager rtpManager=null;
    if (format instanceof VideoFormat) {
      rtpManager=getVideoRtpManager();
    }
 else     if (format instanceof AudioFormat) {
      rtpManager=getAudioRtpManager();
    }
 else {
      logger.warn("We are apparently capable of sending a format that" + " is neither video nor audio. Is this really" + " possible?: "+ format);
      continue;
    }
    try {
      rtpManager.createSendStream(dataSource,i);
      logger.trace("Created a send stream for format " + format);
    }
 catch (    Exception exc) {
      throw new MediaException("Failed to create an RTP send stream for format " + format,MediaException.IO_ERROR,exc);
    }
  }
}
