{
  if (!checkInputBuffer(inputBuffer)) {
    return BUFFER_PROCESSED_FAILED;
  }
  if (isEOM(inputBuffer)) {
    propagateEOM(outputBuffer);
    return BUFFER_PROCESSED_OK;
  }
  byte[] inData=(byte[])inputBuffer.getData();
  int inpLength=inputBuffer.getLength();
  int inOffset=inputBuffer.getOffset();
  Format newFormat=inputBuffer.getFormat();
  if (lastFormat != newFormat) {
    initConverter((AudioFormat)newFormat,inpLength);
  }
  short[] data=Utils.byteToShortArray(inData,inOffset,inpLength);
  short[] decodedData=new short[dec.ULP_inst.blockl];
  dec.decode(decodedData,data,(short)1);
  int outLength=dec.ULP_inst.blockl * 2;
  byte[] outData=validateByteArraySize(outputBuffer,outLength);
  Utils.shortArrToByteArr(decodedData,outData,true);
  updateOutput(outputBuffer,outputFormat,outLength,0);
  return BUFFER_PROCESSED_OK;
}
