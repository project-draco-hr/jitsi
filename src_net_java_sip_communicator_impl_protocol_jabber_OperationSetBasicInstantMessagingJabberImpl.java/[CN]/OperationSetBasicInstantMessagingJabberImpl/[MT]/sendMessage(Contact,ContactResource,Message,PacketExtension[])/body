{
  if (!(to instanceof ContactJabberImpl))   throw new IllegalArgumentException("The specified contact is not a Jabber contact." + to);
  assertConnected();
  org.jivesoftware.smack.packet.Message msg=new org.jivesoftware.smack.packet.Message();
  String toJID=null;
  if (toResource != null) {
    if (toResource.equals(ContactResource.BASE_RESOURCE)) {
      toJID=to.getAddress();
    }
 else     toJID=((ContactResourceJabberImpl)toResource).getFullJid();
  }
  if (toJID == null) {
    toJID=to.getAddress();
  }
  msg.setPacketID(message.getMessageUID());
  msg.setTo(toJID);
  for (  PacketExtension ext : extensions) {
    msg.addExtension(ext);
  }
  if (logger.isTraceEnabled())   logger.trace("Will send a message to:" + toJID + " chat.jid="+ toJID);
  MessageDeliveredEvent msgDeliveryPendingEvt=new MessageDeliveredEvent(message,to,toResource);
  msgDeliveryPendingEvt=messageDeliveryPendingTransform(msgDeliveryPendingEvt);
  if (msgDeliveryPendingEvt == null)   return null;
  String content=msgDeliveryPendingEvt.getSourceMessage().getContent();
  if (message.getContentType().equals(HTML_MIME_TYPE)) {
    msg.setBody(Html2Text.extractText(content));
    if (jabberProvider.isFeatureListSupported(toJID,HTML_NAMESPACE)) {
      XHTMLManager.addBody(msg,OPEN_BODY_TAG + content + CLOSE_BODY_TAG);
    }
  }
 else {
    msg.setBody(content);
  }
  if (msgDeliveryPendingEvt.isMessageEncrypted()) {
    msg.addExtension(new CarbonPacketExtension.PrivateExtension());
  }
  MessageEventManager.addNotificationsRequests(msg,true,false,false,true);
  String threadID=getThreadIDForAddress(toJID);
  if (threadID == null)   threadID=nextThreadID();
  msg.setThread(threadID);
  msg.setType(org.jivesoftware.smack.packet.Message.Type.chat);
  msg.setFrom(jabberProvider.getConnection().getUser());
  jabberProvider.getConnection().sendPacket(msg);
  putJidForAddress(toJID,threadID);
  MessageDeliveredEvent msgDeliveredEvt=new MessageDeliveredEvent(message,to,toResource);
  return msgDeliveredEvt;
}
