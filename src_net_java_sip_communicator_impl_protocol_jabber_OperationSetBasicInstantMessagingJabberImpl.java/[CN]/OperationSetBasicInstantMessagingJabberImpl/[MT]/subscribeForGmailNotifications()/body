{
  boolean notificationsAreSupported=jabberProvider.isFeatureSupported(jabberProvider.getAccountID().getService(),NewMailNotificationIQ.NAMESPACE);
  if (!notificationsAreSupported) {
    if (logger.isDebugEnabled())     logger.debug(jabberProvider.getAccountID().getService() + " does not seem to provide a GMail notification " + " service so we won't be trying to subscribe for it");
    return;
  }
  if (logger.isDebugEnabled())   logger.debug(jabberProvider.getAccountID().getService() + " seems to provide a GMail notification " + " service so we will try to subscribe for it");
  ProviderManager providerManager=ProviderManager.getInstance();
  providerManager.addIQProvider(MailboxIQ.ELEMENT_NAME,MailboxIQ.NAMESPACE,new MailboxIQProvider());
  providerManager.addIQProvider(NewMailNotificationIQ.ELEMENT_NAME,NewMailNotificationIQ.NAMESPACE,new NewMailNotificationProvider());
  jabberProvider.getConnection().addPacketListener(new MailboxIQListener(),new PacketTypeFilter(MailboxIQ.class));
  jabberProvider.getConnection().addPacketListener(new NewMailNotificationListener(),new PacketTypeFilter(NewMailNotificationIQ.class));
  if (opSetPersPresence.getCurrentStatusMessage().equals(JabberStatusEnum.OFFLINE)) {
    return;
  }
  MailboxQueryIQ mailboxQuery=new MailboxQueryIQ();
  if (logger.isTraceEnabled())   logger.trace("sending mailNotification for acc: " + jabberProvider.getAccountID().getAccountUniqueID());
  jabberProvider.getConnection().sendPacket(mailboxQuery);
}
