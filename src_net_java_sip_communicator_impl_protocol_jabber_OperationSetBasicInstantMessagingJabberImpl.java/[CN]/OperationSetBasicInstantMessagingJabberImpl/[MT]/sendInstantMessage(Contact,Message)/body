{
  if (!(to instanceof ContactJabberImpl))   throw new IllegalArgumentException("The specified contact is not a Jabber contact." + to);
  try {
    assertConnected();
    org.jivesoftware.smack.MessageListener msgListener=new org.jivesoftware.smack.MessageListener(){
      public void processMessage(      Chat arg0,      org.jivesoftware.smack.packet.Message arg1){
      }
    }
;
    XMPPConnection jabberConnection=jabberProvider.getConnection();
    Chat chat=jabberConnection.getChatManager().createChat(to.getAddress(),msgListener);
    org.jivesoftware.smack.packet.Message msg=new org.jivesoftware.smack.packet.Message();
    MessageDeliveredEvent msgDeliveryPendingEvt=new MessageDeliveredEvent(message,to,System.currentTimeMillis());
    msgDeliveryPendingEvt=messageDeliveryPendingTransform(msgDeliveryPendingEvt);
    if (msgDeliveryPendingEvt == null)     return;
    String content=msgDeliveryPendingEvt.getSourceMessage().getContent();
    if (message.getContentType().equals(HTML_MIME_TYPE)) {
      msg.setBody(Html2Text.extractText(content));
      if (XHTMLManager.isServiceEnabled(jabberConnection,chat.getParticipant())) {
        XHTMLManager.addBody(msg,OPEN_BODY_TAG + content + CLOSE_BODY_TAG);
      }
    }
 else {
      msg.setBody(content);
    }
    msg.addExtension(new Version());
    MessageEventManager.addNotificationsRequests(msg,true,false,false,true);
    chat.sendMessage(msg);
    MessageDeliveredEvent msgDeliveredEvt=new MessageDeliveredEvent(message,to,System.currentTimeMillis());
    if (msgDeliveredEvt != null)     fireMessageEvent(msgDeliveredEvt);
  }
 catch (  XMPPException ex) {
    logger.error("message not send",ex);
  }
}
