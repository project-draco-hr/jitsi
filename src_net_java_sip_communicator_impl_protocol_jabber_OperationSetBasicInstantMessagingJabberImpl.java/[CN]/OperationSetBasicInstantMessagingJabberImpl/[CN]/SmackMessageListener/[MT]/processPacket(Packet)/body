{
  if (!(packet instanceof org.jivesoftware.smack.packet.Message))   return;
  org.jivesoftware.smack.packet.Message msg=(org.jivesoftware.smack.packet.Message)packet;
  if (msg.getBody() == null)   return;
  Object multiChatExtension=msg.getExtension("x","http://jabber.org/protocol/muc#user");
  if (multiChatExtension != null)   return;
  String fromUserID=StringUtils.parseBareAddress(msg.getFrom());
  if (logger.isDebugEnabled()) {
    if (logger.isDebugEnabled())     logger.debug("Received from " + fromUserID + " the message "+ msg.toXML());
  }
  Message newMessage=createMessage(msg.getBody());
  PacketExtension ext=msg.getExtension("http://jabber.org/protocol/xhtml-im");
  if (ext != null) {
    XHTMLExtension xhtmlExt=(XHTMLExtension)ext;
    Iterator<String> bodies=xhtmlExt.getBodies();
    StringBuffer messageBuff=new StringBuffer();
    while (bodies.hasNext()) {
      String body=bodies.next();
      messageBuff.append(body);
    }
    if (messageBuff.length() > 0) {
      String receivedMessage=messageBuff.toString().replaceAll("\\<[bB][oO][dD][yY].*?>","").replaceAll("\\</[bB][oO][dD][yY].*?>","");
      newMessage=createMessage(receivedMessage,HTML_MIME_TYPE);
    }
  }
  Contact sourceContact=opSetPersPresence.findContactByID(fromUserID);
  if (msg.getType() == org.jivesoftware.smack.packet.Message.Type.error) {
    if (logger.isInfoEnabled())     logger.info("Message error received from " + fromUserID);
    int errorCode=packet.getError().getCode();
    int errorResultCode=MessageDeliveryFailedEvent.UNKNOWN_ERROR;
    if (errorCode == 503) {
      org.jivesoftware.smackx.packet.MessageEvent msgEvent=(org.jivesoftware.smackx.packet.MessageEvent)packet.getExtension("x","jabber:x:event");
      if (msgEvent != null && msgEvent.isOffline()) {
        errorResultCode=MessageDeliveryFailedEvent.OFFLINE_MESSAGES_NOT_SUPPORTED;
      }
    }
    MessageDeliveryFailedEvent ev=new MessageDeliveryFailedEvent(newMessage,sourceContact,errorResultCode);
    if (ev != null)     fireMessageEvent(ev);
    return;
  }
  putJidForAddress(fromUserID,msg.getFrom());
  if (logger.isTraceEnabled())   logger.trace("just mapped: " + fromUserID + " to "+ msg.getFrom());
  if (sourceContact == null) {
    if (logger.isDebugEnabled())     logger.debug("received a message from an unknown contact: " + fromUserID);
    sourceContact=opSetPersPresence.createVolatileContact(fromUserID);
  }
  MessageReceivedEvent msgReceivedEvt=new MessageReceivedEvent(newMessage,sourceContact,System.currentTimeMillis());
  if (msgReceivedEvt != null)   fireMessageEvent(msgReceivedEvt);
}
