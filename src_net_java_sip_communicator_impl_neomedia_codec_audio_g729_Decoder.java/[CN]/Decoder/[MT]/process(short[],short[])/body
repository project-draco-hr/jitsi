{
  Bits.bits2prm_ld8k(serial,2,parm,1);
  parm[0]=0;
  for (int i=2; i < SERIAL_SIZE; i++)   if (serial[i] == 0)   parm[0]=1;
  parm[4]=PParity.check_parity_pitch(parm[3],parm[4]);
  int t0_first=decLd8k.decod_ld8k(parm,voicing,synth,synth_offset,Az_dec);
  voicing=0;
  float[] ptr_Az=Az_dec;
  int ptr_Az_offset=0;
  for (int i=0; i < L_FRAME; i+=L_SUBFR) {
    int sf_voic;
    sf_voic=postfil.post(t0_first,synth,synth_offset + i,ptr_Az,ptr_Az_offset,pst_out,i);
    if (sf_voic != 0) {
      voicing=sf_voic;
    }
    ptr_Az_offset+=MP1;
  }
  Util.copy(synth_buf,L_FRAME,synth_buf,M);
  postPro.post_process(pst_out,L_FRAME);
  floats2shorts(pst_out,sp16);
}
