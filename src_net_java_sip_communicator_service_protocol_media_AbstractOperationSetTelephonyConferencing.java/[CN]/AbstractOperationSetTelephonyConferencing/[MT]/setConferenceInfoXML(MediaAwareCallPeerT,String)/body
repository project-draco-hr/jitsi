{
  ConferenceInfoDocument confInfo=null;
  try {
    confInfo=new ConferenceInfoDocument(conferenceInfoXML);
  }
 catch (  Exception e) {
    logger.error("Failed to parse conference-info XML",e);
    return -1;
  }
  callPeer.setConferenceFocus(true);
  int documentVersion=confInfo.getVersion();
  int ourVersion=callPeer.getConferenceStateVersion();
  ConferenceInfoDocument.State documentState=confInfo.getState();
  if (ourVersion == -1) {
    if (documentState == ConferenceInfoDocument.State.FULL) {
      return setConferenceInfoDocument(callPeer,confInfo);
    }
 else {
      logger.warn("Received a conference-info document with state '" + documentState + "'. Cannot apply it, because we haven't"+ "initialized a local document yet. Sending peer: "+ callPeer);
      return -1;
    }
  }
 else   if (documentVersion <= ourVersion) {
    if (logger.isInfoEnabled()) {
      logger.info("Received a stale conference-info document. Local " + "version " + ourVersion + ", document version "+ documentVersion+ ". Sending peer: "+ callPeer);
    }
    return -1;
  }
 else {
    if (documentState == ConferenceInfoDocument.State.FULL)     return setConferenceInfoDocument(callPeer,confInfo);
 else     if (documentState == ConferenceInfoDocument.State.DELETED) {
      logger.warn("Received a conference-info document with state" + "'deleted', can't handle. Sending peer: " + callPeer);
      return -1;
    }
 else     if (documentState == ConferenceInfoDocument.State.PARTIAL) {
      if (documentVersion == ourVersion + 1)       return updateConferenceInfoDocument(callPeer,confInfo);
 else {
        logger.warn("Received a Conference Information document " + "with state '" + documentState + "' and version "+ documentVersion+ ". Cannon apply it, because local "+ "version is "+ ourVersion+ ". Sending peer: "+ callPeer);
        return -1;
      }
    }
 else     return -1;
  }
}
