{
  NodeList usersList=conferenceInfoDocument.getElementsByTagName(ELEMENT_USERS);
  ConferenceMember[] toRemove=callPeer.getConferenceMembers().toArray(AbstractCallPeer.NO_CONFERENCE_MEMBERS);
  int toRemoveCount=toRemove.length;
  boolean changed=false;
  if (usersList.getLength() > 0) {
    NodeList userList=usersList.item(0).getChildNodes();
    int userCount=userList.getLength();
    for (int userIndex=0; userIndex < userCount; userIndex++) {
      Node user=userList.item(userIndex);
      if (!ELEMENT_USER.equals(user.getNodeName()))       continue;
      String address=stripParametersFromAddress(((Element)user).getAttribute("entity"));
      if ((address == null) || (address.length() < 1))       continue;
      AbstractConferenceMember existingConferenceMember=null;
      for (int i=0; i < toRemoveCount; i++) {
        ConferenceMember conferenceMember=toRemove[i];
        if ((conferenceMember != null) && address.equalsIgnoreCase(conferenceMember.getAddress())) {
          toRemove[i]=null;
          existingConferenceMember=(AbstractConferenceMember)conferenceMember;
          break;
        }
      }
      boolean addConferenceMember;
      if (existingConferenceMember == null) {
        existingConferenceMember=new AbstractConferenceMember(callPeer,address);
        addConferenceMember=true;
      }
 else       addConferenceMember=false;
      if (existingConferenceMember != null) {
        NodeList userChildList=user.getChildNodes();
        int userChildCount=userChildList.getLength();
        String displayName=null;
        String endpointStatus=null;
        String audioSsrc=null;
        String videoSsrc=null;
        for (int userChildIndex=0; userChildIndex < userChildCount; userChildIndex++) {
          Node userChild=userChildList.item(userChildIndex);
          String userChildName=userChild.getNodeName();
          if (ELEMENT_DISPLAY_TEXT.equals(userChildName))           displayName=userChild.getTextContent();
 else           if (ELEMENT_ENDPOINT.equals(userChildName)) {
            endpointStatus=getEndpointStatus(userChild);
            audioSsrc=getEndpointMediaSrcId(userChild,MediaType.AUDIO);
            videoSsrc=getEndpointMediaSrcId(userChild,MediaType.VIDEO);
          }
        }
        existingConferenceMember.setDisplayName(displayName);
        existingConferenceMember.setEndpointStatus(endpointStatus);
        if (audioSsrc != null) {
          long newSsrc=Long.parseLong(audioSsrc);
          if (existingConferenceMember.getAudioSsrc() != newSsrc) {
            changed=true;
            existingConferenceMember.setAudioSsrc(newSsrc);
          }
        }
        if (videoSsrc != null) {
          long newSsrc=Long.parseLong(videoSsrc);
          if (existingConferenceMember.getVideoSsrc() != newSsrc) {
            changed=true;
            existingConferenceMember.setVideoSsrc(newSsrc);
          }
        }
        if (addConferenceMember)         callPeer.addConferenceMember(existingConferenceMember);
      }
    }
  }
  for (int i=0; i < toRemoveCount; i++) {
    ConferenceMember conferenceMemberToRemove=toRemove[i];
    if (conferenceMemberToRemove != null)     callPeer.removeConferenceMember(conferenceMemberToRemove);
  }
  if (changed)   notifyAll(callPeer.getCall());
}
