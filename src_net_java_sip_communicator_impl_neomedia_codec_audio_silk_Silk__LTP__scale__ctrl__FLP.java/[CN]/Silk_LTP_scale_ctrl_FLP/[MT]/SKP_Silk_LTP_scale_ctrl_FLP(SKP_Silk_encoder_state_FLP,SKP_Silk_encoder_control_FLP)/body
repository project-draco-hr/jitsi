{
  int round_loss, frames_per_packet;
  float g_out, g_limit, thrld1, thrld2;
  psEnc.HPLTPredCodGain=Math.max(psEncCtrl.LTPredCodGain - psEnc.prevLTPredCodGain,0.0f) + 0.5f * psEnc.HPLTPredCodGain;
  psEnc.prevLTPredCodGain=psEncCtrl.LTPredCodGain;
  g_out=0.5f * psEncCtrl.LTPredCodGain + (1.0f - 0.5f) * psEnc.HPLTPredCodGain;
  g_limit=Silk_SigProc_FLP.SKP_sigmoid(0.5f * (g_out - 6));
  psEncCtrl.sCmn.LTP_scaleIndex=0;
  round_loss=(int)(psEnc.sCmn.PacketLoss_perc);
  round_loss=(0 > round_loss ? 0 : round_loss);
  if (psEnc.sCmn.nFramesInPayloadBuf == 0) {
    frames_per_packet=psEnc.sCmn.PacketSize_ms / Silk_define.FRAME_LENGTH_MS;
    round_loss+=(frames_per_packet - 1);
    thrld1=LTPScaleThresholds[round_loss < (NB_THRESHOLDS - 1) ? round_loss : (NB_THRESHOLDS - 1)];
    thrld2=LTPScaleThresholds[(round_loss + 1) < (NB_THRESHOLDS - 1) ? (round_loss + 1) : (NB_THRESHOLDS - 1)];
    if (g_limit > thrld1) {
      psEncCtrl.sCmn.LTP_scaleIndex=2;
    }
 else     if (g_limit > thrld2) {
      psEncCtrl.sCmn.LTP_scaleIndex=1;
    }
  }
  psEncCtrl.LTP_scale=(float)Silk_tables_other.SKP_Silk_LTPScales_table_Q14[psEncCtrl.sCmn.LTP_scaleIndex] / 16384.0f;
}
