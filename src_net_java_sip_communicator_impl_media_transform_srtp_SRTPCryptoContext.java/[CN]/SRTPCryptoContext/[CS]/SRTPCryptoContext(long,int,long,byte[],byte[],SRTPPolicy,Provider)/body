{
  this.ssrc=ssrc;
  this.mki=null;
  this.roc=roc;
  this.guessedROC=0;
  this.seqNum=0;
  this.keyDerivationRate=keyDerivationRate;
  this.seqNumSet=false;
  this.cryptoProvider=cryptoProvider;
  this.policy=policy;
  this.masterKey=new byte[this.policy.getEncKeyLength()];
  System.arraycopy(masterKey,0,this.masterKey,0,this.policy.getEncKeyLength());
  this.masterSalt=new byte[this.policy.getSaltKeyLength()];
  System.arraycopy(masterSalt,0,this.masterSalt,0,this.policy.getSaltKeyLength());
switch (policy.getEncType()) {
case SRTPPolicy.NULL_ENCRYPTION:
    this.encKey=null;
  this.saltKey=null;
break;
case SRTPPolicy.AESCM_ENCRYPTION:
hmacSha1=Mac.getInstance("HMACSHA1",cryptoProvider);
AEScipher=Cipher.getInstance("AES/ECB/NOPADDING",cryptoProvider);
this.encKey=new byte[this.policy.getEncKeyLength()];
this.saltKey=new byte[this.policy.getSaltKeyLength()];
break;
case SRTPPolicy.AESF8_ENCRYPTION:
hmacSha1=Mac.getInstance("HMACSHA1",cryptoProvider);
AEScipher=Cipher.getInstance("AES/ECB/NOPADDING",cryptoProvider);
AEScipherF8=Cipher.getInstance("AES/ECB/NOPADDING",cryptoProvider);
this.encKey=new byte[this.policy.getEncKeyLength()];
this.saltKey=new byte[this.policy.getSaltKeyLength()];
break;
}
switch (policy.getAuthType()) {
case SRTPPolicy.NULL_AUTHENTICATION:
this.authKey=null;
break;
case SRTPPolicy.HMACSHA1_AUTHENTICATION:
this.authKey=new byte[policy.getAuthKeyLength()];
break;
}
}
