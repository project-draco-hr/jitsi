{
  menu=TrayMenuFactory.createTrayMenu(this,systray.isSwing());
  boolean isMac=OSUtils.IS_MAC;
  if (OSUtils.IS_WINDOWS) {
    logoIcon=Resources.getImage("service.systray.TRAY_ICON_WINDOWS");
    logoIconOffline=Resources.getImage("service.systray.TRAY_ICON_WINDOWS_OFFLINE");
    logoIconAway=Resources.getImage("service.systray.TRAY_ICON_WINDOWS_AWAY");
    logoIconFFC=Resources.getImage("service.systray.TRAY_ICON_WINDOWS_FFC");
    envelopeIcon=Resources.getImage("service.systray.MESSAGE_ICON_WINDOWS");
  }
 else   if (isMac) {
    logoIcon=Resources.getImage("service.systray.TRAY_ICON_MACOSX");
    logoIconWhite=Resources.getImage("service.systray.TRAY_ICON_MACOSX_WHITE");
    envelopeIcon=Resources.getImage("service.systray.MESSAGE_ICON_MACOSX");
    envelopeIconWhite=Resources.getImage("service.systray.MESSAGE_ICON_MACOSX_WHITE");
  }
 else {
    logoIcon=Resources.getImage("service.systray.TRAY_ICON");
    logoIconOffline=Resources.getImage("service.systray.TRAY_ICON_OFFLINE");
    logoIconAway=Resources.getImage("service.systray.TRAY_ICON_AWAY");
    logoIconFFC=Resources.getImage("service.systray.TRAY_ICON_FFC");
    envelopeIcon=Resources.getImage("service.systray.MESSAGE_ICON");
  }
  currentIcon=isMac ? logoIcon : logoIconOffline;
  trayIcon=new TrayIcon(currentIcon,Resources.getApplicationString("service.gui.APPLICATION_NAME"),menu);
  trayIcon.setIconAutoSize(true);
  if (isMac) {
    dockIconOffline=Resources.getImageURL("service.systray.DOCK_ICON_OFFLINE");
    dockIconAway=Resources.getImageURL("service.systray.DOCK_ICON_AWAY");
    dockIconFFC=Resources.getImageURL("service.systray.DOCK_ICON_FFC");
  }
  trayIcon.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      UIService uiService=OsDependentActivator.getUIService();
      ExportedWindow win=uiService.getExportedWindow(ExportedWindow.MAIN_WINDOW);
      boolean setIsVisible=!win.isVisible();
      win.setVisible(setIsVisible);
      configService.setProperty("net.java.sip.communicator.impl.systray.showApplication",Boolean.toString(setIsVisible));
      if (win.isVisible()) {
        win.bringToFront();
      }
    }
  }
);
  if (isMac) {
    TrayMenuFactory.addPopupMenuListener(menu,new PopupMenuListener(){
      public void popupMenuWillBecomeVisible(      PopupMenuEvent e){
        ImageIcon newIcon=(currentIcon == envelopeIcon) ? envelopeIconWhite : logoIconWhite;
        trayIcon.setIcon(newIcon);
        currentIcon=newIcon;
      }
      public void popupMenuWillBecomeInvisible(      PopupMenuEvent e){
        ImageIcon newIcon=(currentIcon == envelopeIconWhite) ? envelopeIcon : logoIcon;
        getTrayIcon().setIcon(newIcon);
        currentIcon=newIcon;
      }
      public void popupMenuCanceled(      PopupMenuEvent e){
        popupMenuWillBecomeInvisible(e);
      }
    }
);
  }
  PopupMessageHandler pph=null;
  if (!isMac) {
    pph=new PopupMessageHandlerTrayIconImpl(trayIcon);
    popupHandlerSet.put(pph.getClass().getName(),pph);
    OsDependentActivator.bundleContext.registerService(PopupMessageHandler.class.getName(),pph,null);
  }
  try {
    OsDependentActivator.bundleContext.addServiceListener(new ServiceListenerImpl(),"(objectclass=" + PopupMessageHandler.class.getName() + ")");
  }
 catch (  Exception e) {
    logger.warn(e);
  }
  ServiceReference[] handlerRefs=null;
  try {
    handlerRefs=OsDependentActivator.bundleContext.getServiceReferences(PopupMessageHandler.class.getName(),null);
  }
 catch (  InvalidSyntaxException ex) {
    logger.error("Error while retrieving service refs",ex);
  }
  if (handlerRefs != null) {
    String configuredHandler=(String)configService.getProperty("systray.POPUP_HANDLER");
    for (int i=0; i < handlerRefs.length; i++) {
      PopupMessageHandler handler=(PopupMessageHandler)OsDependentActivator.bundleContext.getService(handlerRefs[i]);
      String handlerName=handler.getClass().getName();
      if (!popupHandlerSet.containsKey(handlerName)) {
        popupHandlerSet.put(handlerName,handler);
        logger.info("added the following popup handler : " + handler);
        if (configuredHandler != null && configuredHandler.equals(handler.getClass().getName())) {
          setActivePopupMessageHandler(handler);
        }
      }
    }
    if (configuredHandler == null) {
      selectBestPopupMessageHandler();
    }
  }
  if (activePopupHandler == null) {
    setActivePopupMessageHandler(pph);
  }
  systray.addTrayIcon(trayIcon);
  initialized=true;
}
