{
  if (!checkInitialized())   return;
  boolean isMac=OSUtils.IS_MAC;
  ImageIcon systrayIconToSet=null;
switch (imageType) {
case SystrayService.SC_IMG_TYPE:
    systrayIconToSet=(isMac && TrayMenuFactory.isVisible(menu)) ? logoIconWhite : logoIcon;
  break;
case SystrayService.SC_IMG_OFFLINE_TYPE:
if (!isMac) systrayIconToSet=logoIconOffline;
break;
case SystrayService.SC_IMG_AWAY_TYPE:
if (!isMac) systrayIconToSet=logoIconAway;
break;
case SystrayService.SC_IMG_FFC_TYPE:
if (!isMac) systrayIconToSet=logoIconFFC;
break;
case SystrayService.SC_IMG_DND_TYPE:
if (!isMac) systrayIconToSet=logoIconDND;
break;
case SystrayService.ENVELOPE_IMG_TYPE:
systrayIconToSet=(isMac && TrayMenuFactory.isVisible(menu)) ? envelopeIconWhite : envelopeIcon;
break;
}
if (systrayIconToSet != null) {
this.trayIcon.setIcon(systrayIconToSet);
this.currentIcon=systrayIconToSet;
}
if (isMac) {
URL dockIconURLToSet;
switch (imageType) {
case SystrayService.SC_IMG_TYPE:
dockIconURLToSet=dockIconOnline;
break;
case SystrayService.SC_IMG_OFFLINE_TYPE:
dockIconURLToSet=dockIconOffline;
break;
case SystrayService.SC_IMG_AWAY_TYPE:
dockIconURLToSet=dockIconAway;
break;
case SystrayService.SC_IMG_FFC_TYPE:
dockIconURLToSet=dockIconFFC;
break;
case SystrayService.SC_IMG_DND_TYPE:
dockIconURLToSet=dockIconDND;
break;
default :
dockIconURLToSet=null;
break;
}
try {
Application application=Application.getApplication();
if (originalDockImage == null) originalDockImage=application.getDockIconImage();
if (dockIconURLToSet != null) {
application.setDockIconImage(Toolkit.getDefaultToolkit().getImage(dockIconURLToSet));
}
 else if (originalDockImage != null) {
application.setDockIconImage(originalDockImage);
}
}
 catch (Exception e) {
logger.error("failed to change dock icon",e);
}
}
}
