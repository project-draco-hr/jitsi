{
  try {
    PopupMessageHandler handler=(PopupMessageHandler)OsDependentActivator.bundleContext.getService(serviceEvent.getServiceReference());
    if (serviceEvent.getType() == ServiceEvent.REGISTERED) {
      if (!popupHandlerSet.containsKey(handler.getClass().getName())) {
        if (logger.isInfoEnabled())         logger.info("adding the following popup handler : " + handler);
        popupHandlerSet.put(handler.getClass().getName(),handler);
      }
 else       logger.warn("the following popup handler has not " + "been added since it is already known : " + handler);
      String configuredHandler=(String)cfg.getProperty("systray.POPUP_HANDLER");
      if ((configuredHandler == null) && ((activePopupHandler == null) || (handler.getPreferenceIndex() > activePopupHandler.getPreferenceIndex()))) {
        setActivePopupMessageHandler(handler);
      }
      if ((configuredHandler != null) && configuredHandler.equals(handler.getClass().getName())) {
        setActivePopupMessageHandler(handler);
      }
    }
 else     if (serviceEvent.getType() == ServiceEvent.UNREGISTERING) {
      if (logger.isInfoEnabled())       logger.info("removing the following popup handler : " + handler);
      popupHandlerSet.remove(handler.getClass().getName());
      if (activePopupHandler == handler) {
        activePopupHandler.removePopupMessageListener(popupMessageListener);
        activePopupHandler=null;
        selectBestPopupMessageHandler();
      }
    }
  }
 catch (  IllegalStateException e) {
    if (logger.isDebugEnabled())     logger.debug(e);
  }
}
