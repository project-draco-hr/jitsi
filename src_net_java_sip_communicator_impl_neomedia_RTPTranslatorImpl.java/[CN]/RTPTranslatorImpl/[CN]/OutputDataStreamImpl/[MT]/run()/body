{
  try {
    while (true) {
      int writeIndex;
      byte[] buffer;
      StreamRTPManagerDesc exclusion;
      Format format;
      int length;
synchronized (this) {
        if (closed || !Thread.currentThread().equals(writeThread))         break;
        if (writeQueueLength < 1) {
          boolean interrupted=false;
          try {
            wait();
          }
 catch (          InterruptedException ie) {
            interrupted=true;
          }
          if (interrupted)           Thread.currentThread().interrupt();
          continue;
        }
        writeIndex=writeQueueHead;
        RTPTranslatorBuffer write=writeQueue[writeIndex];
        buffer=write.data;
        write.data=null;
        exclusion=write.exclusion;
        write.exclusion=null;
        format=write.format;
        write.format=null;
        length=write.length;
        write.length=0;
        writeQueueHead++;
        if (writeQueueHead >= writeQueue.length)         writeQueueHead=0;
        writeQueueLength--;
      }
      try {
        doWrite(buffer,0,length,format,exclusion);
      }
  finally {
synchronized (this) {
          RTPTranslatorBuffer write=writeQueue[writeIndex];
          if ((write != null) && (write.data == null))           write.data=buffer;
        }
      }
    }
  }
 catch (  Throwable t) {
    logger.error("Failed to translate RTP packet",t);
    if (t instanceof ThreadDeath)     throw (ThreadDeath)t;
  }
 finally {
synchronized (this) {
      if (Thread.currentThread().equals(writeThread))       writeThread=null;
      if (!closed && (writeThread == null) && (writeQueueLength > 0))       createWriteThread();
    }
  }
}
