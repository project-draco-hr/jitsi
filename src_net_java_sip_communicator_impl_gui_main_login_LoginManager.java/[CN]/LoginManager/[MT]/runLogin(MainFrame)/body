{
  Set set=GuiActivator.getProtocolProviderFactories().entrySet();
  Iterator iter=set.iterator();
  boolean hasRegisteredAccounts=false;
  while (iter.hasNext()) {
    Map.Entry entry=(Map.Entry)iter.next();
    ProtocolProviderFactory providerFactory=(ProtocolProviderFactory)entry.getValue();
    ArrayList accountsList=providerFactory.getRegisteredAccounts();
    AccountID accountID;
    ServiceReference serRef;
    ProtocolProviderService protocolProvider;
    for (int i=0; i < accountsList.size(); i++) {
      hasRegisteredAccounts=true;
      accountID=(AccountID)accountsList.get(i);
      serRef=providerFactory.getProviderForAccount(accountID);
      protocolProvider=(ProtocolProviderService)GuiActivator.bundleContext.getService(serRef);
      protocolProvider.addRegistrationStateChangeListener(this);
      this.mainFrame.addProtocolProvider(protocolProvider);
      this.login(protocolProvider);
    }
  }
  if (!hasRegisteredAccounts) {
    this.showAccountRegistrationWizard();
  }
}
