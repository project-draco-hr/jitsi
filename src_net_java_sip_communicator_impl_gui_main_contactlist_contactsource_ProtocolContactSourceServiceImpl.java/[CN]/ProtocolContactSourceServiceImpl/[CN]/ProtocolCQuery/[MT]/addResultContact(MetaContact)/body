{
  Iterator<Contact> contacts=metaContact.getContactsForProvider(protocolProvider);
  while (contacts.hasNext()) {
    if (getStatus() == QUERY_CANCELED)     return;
    if (contactCount > 0 && getQueryResultCount() > contactCount)     break;
    Contact contact=contacts.next();
    String contactAddress=contact.getAddress();
    String contactDisplayName=contact.getDisplayName();
    String queryLowerCase=queryString.toLowerCase();
    if (queryString == null || queryString.length() <= 0 || metaContact.getDisplayName().toLowerCase().contains(queryLowerCase) || contactAddress.toLowerCase().contains(queryLowerCase) || contactDisplayName.toLowerCase().contains(queryLowerCase)) {
      ContactDetail contactDetail=new ContactDetail(contactAddress);
      List<Class<? extends OperationSet>> supportedOpSets=new ArrayList<Class<? extends OperationSet>>();
      supportedOpSets.add(opSetClass);
      contactDetail.setSupportedOpSets(supportedOpSets);
      List<ContactDetail> contactDetails=new ArrayList<ContactDetail>();
      contactDetails.add(contactDetail);
      SortedGenericSourceContact sourceContact=new SortedGenericSourceContact(this,ProtocolContactSourceServiceImpl.this,metaContact.getDisplayName(),contactDetails);
      if (!contactAddress.equals(contactDisplayName))       sourceContact.setDisplayDetails(contactAddress);
      sourceContact.setImage(metaContact.getAvatar());
      sourceContact.setPresenceStatus(contact.getPresenceStatus());
      sourceContact.setContactAddress(contactAddress);
      addQueryResult(sourceContact);
    }
  }
}
