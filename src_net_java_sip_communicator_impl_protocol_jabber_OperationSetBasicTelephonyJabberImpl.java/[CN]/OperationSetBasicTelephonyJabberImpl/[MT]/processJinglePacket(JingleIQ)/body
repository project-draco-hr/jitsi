{
  if (jingleIQ.getType() == Type.ERROR) {
    CallPeerJabberImpl callPeer=activeCallsRepository.findCallPeer(jingleIQ.getSID());
    logger.error("Received error");
    XMPPError error=jingleIQ.getError();
    String message="Remote party returned an error!";
    if (error != null) {
      logger.error(" code=" + error.getCode() + " message="+ error.getMessage());
      if (error.getMessage() != null)       message=error.getMessage();
    }
    if (callPeer != null)     callPeer.setState(CallPeerState.FAILED,message);
    return;
  }
  JingleAction action=jingleIQ.getAction();
  if (action == JingleAction.SESSION_INITIATE) {
    CallJabberImpl call=new CallJabberImpl(this);
    call.processSessionInitiate(jingleIQ);
  }
 else   if (action == JingleAction.SESSION_TERMINATE) {
  }
 else   if (action == JingleAction.SESSION_ACCEPT) {
  }
 else   if (action == JingleAction.SESSION_INFO) {
    SessionInfoPacketExtension info=(SessionInfoPacketExtension)jingleIQ.getExtension(SessionInfoPacketExtension.NAMESPACE);
    if (info == null)     return;
    if (info.getType() == SessionInfoType.ringing) {
      CallPeerJabberImpl callPeer=activeCallsRepository.findCallPeer(jingleIQ.getSID());
      if (callPeer == null) {
        if (logger.isDebugEnabled())         logger.debug("Received a stray trying response.");
        return;
      }
      callPeer.setState(CallPeerState.ALERTING_REMOTE_SIDE);
    }
  }
}
