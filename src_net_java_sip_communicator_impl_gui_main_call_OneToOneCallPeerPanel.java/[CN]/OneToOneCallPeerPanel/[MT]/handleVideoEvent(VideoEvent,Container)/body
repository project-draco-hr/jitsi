{
  if (videoEvent != null) {
    if ((videoEvent.getOrigin() == VideoEvent.REMOTE) && (videoEvent instanceof SizeChangeVideoEvent)) {
      SizeChangeVideoEvent sizeChangeVideoEvent=(SizeChangeVideoEvent)videoEvent;
      Component visualComponent=sizeChangeVideoEvent.getVisualComponent();
      int width=sizeChangeVideoEvent.getWidth();
      int height=sizeChangeVideoEvent.getHeight();
      boolean containedSize=false;
      if (resizeList != null && resizeList.size() > 0) {
synchronized (resizeList) {
          Iterator<ResizedCoordinates> resizeIter=resizeList.iterator();
          while (resizeIter.hasNext()) {
            ResizedCoordinates coord=resizeIter.next();
            int resizeWidth=coord.getWidth();
            int resizeHeight=coord.getHeight();
            if (resizeWidth - 3 <= width && width <= resizeWidth + 3 && resizeHeight - 3 <= height && height <= resizeHeight + 3) {
              resizeIter.remove();
              containedSize=true;
            }
          }
        }
      }
      if (visualComponent.getParent() == null)       visualComponent.setPreferredSize(new Dimension(width,height));
 else       if (isAncestor(videoContainer,visualComponent)) {
        if (!containedSize || resizeList == null)         ensureSize(visualComponent,width,height);
        videoContainer.doLayout();
      }
      return;
    }
switch (videoEvent.getType()) {
case VideoEvent.VIDEO_ADDED:
case VideoEvent.VIDEO_REMOVED:
      break;
default :
    return;
}
}
int zOrder=0;
videoContainer.removeAll();
if (localVideo != null) {
videoContainer.add(localVideo,VideoLayout.LOCAL,zOrder++);
if (!callDialog.isVideoButtonSelected()) callDialog.setVideoButtonSelected(true);
}
Component video=videoTelephony.getVisualComponent(callPeer);
if (video != null) videoContainer.add(video,VideoLayout.CENTER_REMOTE,zOrder++);
videoContainer.validate();
videoContainer.repaint();
}
