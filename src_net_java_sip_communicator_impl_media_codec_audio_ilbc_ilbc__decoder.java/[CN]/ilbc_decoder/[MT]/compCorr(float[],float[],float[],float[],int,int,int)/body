{
  int i;
  float ftmp1, ftmp2, ftmp3;
  if ((bLen - sRange - lag) < 0) {
    sRange=bLen - lag;
  }
  ftmp1=0.0f;
  ftmp2=0.0f;
  ftmp3=0.0f;
  for (i=0; i < sRange; i++) {
    ftmp1+=buffer[bLen - sRange + i] * buffer[bLen - sRange + i - lag];
    ftmp2+=buffer[bLen - sRange + i - lag] * buffer[bLen - sRange + i - lag];
    ftmp3+=buffer[bLen - sRange + i] * buffer[bLen - sRange + i];
  }
  if (ftmp2 > 0.0f) {
    cc[0]=ftmp1 * ftmp1 / ftmp2;
    gc[0]=(float)(float)Math.abs(ftmp1 / ftmp2);
    pm[0]=(float)(float)Math.abs(ftmp1) / ((float)(float)Math.sqrt(ftmp2) * (float)Math.sqrt(ftmp3));
  }
 else {
    cc[0]=0.0f;
    gc[0]=0.0f;
    pm[0]=0.0f;
  }
}
