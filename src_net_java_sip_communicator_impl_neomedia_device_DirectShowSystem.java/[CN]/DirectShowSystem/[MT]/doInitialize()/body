{
  DSCaptureDevice devices[]=DSManager.getInstance().getCaptureDevices();
  boolean captureDeviceInfoIsAdded=false;
  for (int i=0, count=(devices == null) ? 0 : devices.length; i < count; i++) {
    long pixelFormat=devices[i].getFormat().getPixelFormat();
    int ffmpegPixFmt=(int)DataSource.getFFmpegPixFmt(pixelFormat);
    Format format=null;
    if (ffmpegPixFmt != FFmpeg.PIX_FMT_NONE) {
      format=new AVFrameFormat(ffmpegPixFmt,(int)pixelFormat);
    }
 else {
      logger.warn("No support for this webcam: " + devices[i].getName() + "(format "+ pixelFormat+ " not supported)");
      continue;
    }
    if (logger.isInfoEnabled()) {
      for (      DSFormat f : devices[i].getSupportedFormats()) {
        if (f.getWidth() != 0 && f.getHeight() != 0)         logger.info("Webcam available resolution for " + devices[i].getName() + ":"+ f.getWidth()+ "x"+ f.getHeight());
      }
    }
    CaptureDeviceInfo device=new CaptureDeviceInfo(devices[i].getName(),new MediaLocator(LOCATOR_PROTOCOL + ':' + devices[i].getName()),new Format[]{format});
    if (logger.isInfoEnabled())     logger.info("Found[" + i + "]: "+ device.getName());
    CaptureDeviceManager.addDevice(device);
    captureDeviceInfoIsAdded=true;
  }
  if (captureDeviceInfoIsAdded && !MediaServiceImpl.isJmfRegistryDisableLoad())   CaptureDeviceManager.commit();
  DSManager.dispose();
}
