{
  JButton button=(JButton)e.getSource();
  String buttonName=button.getName();
  if (buttonName.equals("add")) {
    Wizard wizard=new Wizard();
    wizard.getDialog().setTitle(Messages.getString("addContactWizard"));
    NewContact newContact=new NewContact();
    AddContactWizardPage1 page1=new AddContactWizardPage1(wizard,newContact,mainFrame.getProtocolProviders());
    wizard.registerWizardPage(AddContactWizardPage1.IDENTIFIER,page1);
    AddContactWizardPage2 page2=new AddContactWizardPage2(wizard,newContact,mainFrame.getAllGroups());
    wizard.registerWizardPage(AddContactWizardPage2.IDENTIFIER,page2);
    AddContactWizardPage3 page3=new AddContactWizardPage3(newContact);
    wizard.registerWizardPage(AddContactWizardPage3.IDENTIFIER,page3);
    wizard.setCurrentPage(AddContactWizardPage1.IDENTIFIER);
    wizard.getDialog().setLocation(Toolkit.getDefaultToolkit().getScreenSize().width / 2 - 250,Toolkit.getDefaultToolkit().getScreenSize().height / 2 - 100);
    int returnCode=wizard.showModalDialog();
    if (returnCode == 0) {
      ArrayList ppList=newContact.getProtocolProviders();
      ArrayList groupList=newContact.getGroups();
      for (int i=0; i < ppList.size(); i++) {
        ProtocolProviderService pps=(ProtocolProviderService)ppList.get(i);
        for (int j=0; j < groupList.size(); j++) {
          MetaContactGroup group=(MetaContactGroup)groupList.get(j);
          try {
            mainFrame.getContactList().createMetaContact(pps,group,newContact.getUin());
          }
 catch (          MetaContactListException ex) {
            JOptionPane.showMessageDialog(mainFrame,Messages.getString("addContactError",newContact.getUin()),Messages.getString("addContactErrorTitle"),JOptionPane.WARNING_MESSAGE);
          }
        }
      }
    }
 else     if (returnCode == 1) {
      wizard.getDialog().dispose();
    }
  }
 else   if (buttonName.equals("config")) {
    configDialog=GuiActivator.getUIService().getConfigurationDialog();
    configDialog.showDialog();
  }
 else   if (buttonName.equals("search")) {
    ContactList contactList=mainFrame.getTabbedPane().getContactListPanel().getContactList();
    ContactListModel listModel=(ContactListModel)contactList.getModel();
    if (listModel.showOffline()) {
      listModel.setShowOffline(false);
      listModel.removeOfflineContacts();
    }
 else {
      int currentlySelectedIndex=contactList.getSelectedIndex();
      Object selectedObject=listModel.getElementAt(currentlySelectedIndex);
      listModel.setShowOffline(true);
      listModel.addOfflineContacts();
      if (selectedObject != null) {
        if (selectedObject instanceof MetaContact) {
          contactList.setSelectedIndex(listModel.indexOf((MetaContact)selectedObject));
        }
 else {
          contactList.setSelectedIndex(listModel.indexOf((MetaContactGroup)selectedObject));
        }
      }
    }
  }
 else   if (buttonName.equals("info")) {
    MetaContact selectedMetaContact=(MetaContact)mainFrame.getTabbedPane().getContactListPanel().getContactList().getSelectedValue();
    if (selectedMetaContact != null) {
      Contact defaultContact=selectedMetaContact.getDefaultContact();
      ProtocolProviderService defaultProvider=defaultContact.getProtocolProvider();
      OperationSetWebContactInfo wContactInfo=mainFrame.getWebContactInfo(defaultProvider);
      BrowserLauncher.openURL(wContactInfo.getWebContactInfo(defaultContact).toString());
    }
  }
}
