{
  this.setModal(false);
  this.setTitle(title);
  TransparentPanel mainPanel=new TransparentPanel(new BorderLayout(5,5));
  TransparentPanel northPanel=new TransparentPanel(new BorderLayout(10,10));
  mainPanel.setPreferredSize(new Dimension(450,350));
  mainPanel.setBorder(BorderFactory.createEmptyBorder(15,15,15,15));
  JTextArea infoTextArea=new JTextArea();
  infoTextArea.setText(GuiActivator.getResources().getI18NString("service.gui.INVITE_CONTACT_MSG"));
  infoTextArea.setFont(infoTextArea.getFont().deriveFont(Font.BOLD));
  infoTextArea.setLineWrap(true);
  infoTextArea.setOpaque(false);
  infoTextArea.setWrapStyleWord(true);
  infoTextArea.setEditable(false);
  iconLabel=new JLabel(new ImageIcon(ImageLoader.getImage(ImageLoader.INVITE_DIALOG_ICON)));
  northPanel.add(iconLabel,BorderLayout.WEST);
  northPanel.add(infoTextArea,BorderLayout.CENTER);
  TransparentPanel buttonsPanel=new TransparentPanel(new FlowLayout(FlowLayout.RIGHT));
  buttonsPanel.add(inviteButton);
  buttonsPanel.add(cancelButton);
  inviteButton.setMnemonic(GuiActivator.getResources().getI18nMnemonic("service.gui.INVITE"));
  cancelButton.setMnemonic(GuiActivator.getResources().getI18nMnemonic("service.gui.CANCEL"));
  Component contactListComponent=createSrcContactListComponent();
  ContactListSearchFilter inviteFilter=new InviteContactListFilter(srcContactList);
  srcContactList.setDefaultFilter(inviteFilter);
  searchField=new SearchField(null,inviteFilter,false);
  searchField.setPreferredSize(new Dimension(200,25));
  searchField.setContactList(srcContactList);
  searchField.addFocusListener(new FocusAdapter(){
    /** 
 * Removes all other selections.
 * @param e the <tt>FocusEvent</tt> that notified us
 */
    @Override public void focusGained(    FocusEvent e){
      srcContactList.removeSelection();
    }
  }
);
  TransparentPanel leftPanel=new TransparentPanel(new BorderLayout(5,5));
  leftPanel.add(searchField,BorderLayout.NORTH);
  leftPanel.add(contactListComponent);
  JPanel listPanel=new JPanel(new GridLayout(0,2,5,5));
  listPanel.setPreferredSize(new Dimension(400,200));
  listPanel.add(leftPanel);
  listPanel.add(createDestContactListComponent());
  listPanel.setOpaque(false);
  JPanel addRemoveButtonsPanel=new JPanel(new GridLayout(0,2,5,5));
  addRemoveButtonsPanel.setOpaque(false);
  JButton addContactButton=new JButton(GuiActivator.getResources().getI18NString("service.gui.ADD"));
  JButton removeContactButton=new JButton(GuiActivator.getResources().getI18NString("service.gui.REMOVE"));
  addRemoveButtonsPanel.add(addContactButton);
  addRemoveButtonsPanel.add(removeContactButton);
  addContactButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      List<UIContact> selectedContacts=srcContactList.getSelectedContacts();
      if (selectedContacts != null && selectedContacts.size() > 0)       moveContactsFromLeftToRight(selectedContacts.iterator());
    }
  }
);
  removeContactButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      List<UIContact> selectedContacts=destContactList.getSelectedContacts();
      if (selectedContacts != null && selectedContacts.size() > 0)       moveContactsFromRightToLeft(selectedContacts.iterator());
    }
  }
);
  TransparentPanel centerPanel=new TransparentPanel(new BorderLayout());
  centerPanel.add(listPanel,BorderLayout.CENTER);
  centerPanel.add(addRemoveButtonsPanel,BorderLayout.SOUTH);
  TransparentPanel southPanel=new TransparentPanel(new BorderLayout());
  southPanel.add(buttonsPanel,BorderLayout.SOUTH);
  if (enableReason) {
    this.reasonArea.setBorder(BorderFactory.createTitledBorder(GuiActivator.getResources().getI18NString("service.gui.INVITE_REASON")));
    southPanel.add(reasonArea,BorderLayout.CENTER);
  }
  mainPanel.add(northPanel,BorderLayout.NORTH);
  mainPanel.add(centerPanel,BorderLayout.CENTER);
  mainPanel.add(southPanel,BorderLayout.SOUTH);
  this.getContentPane().add(mainPanel);
  initTransferHandler();
  KeyboardFocusManager keyManager=KeyboardFocusManager.getCurrentKeyboardFocusManager();
  ContactListSearchKeyDispatcher clKeyDispatcher=new ContactListSearchKeyDispatcher(keyManager,searchField,this);
  clKeyDispatcher.setContactList(srcContactList);
  keyManager.addKeyEventDispatcher(clKeyDispatcher);
}
