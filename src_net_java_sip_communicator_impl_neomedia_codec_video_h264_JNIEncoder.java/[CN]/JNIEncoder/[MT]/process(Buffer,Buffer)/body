{
  if (isEOM(inBuffer)) {
    propagateEOM(outBuffer);
    reset();
    return BUFFER_PROCESSED_OK;
  }
  if (inBuffer.isDiscard()) {
    outBuffer.setDiscard(true);
    reset();
    return BUFFER_PROCESSED_OK;
  }
  Format inFormat=inBuffer.getFormat();
  if (inFormat != inputFormat && !(inFormat.matches(inputFormat)))   setInputFormat(inFormat);
  if (inBuffer.getLength() < 10) {
    outBuffer.setDiscard(true);
    reset();
    return BUFFER_PROCESSED_OK;
  }
  FFmpeg.memcpy(rawFrameBuffer,(byte[])inBuffer.getData(),inBuffer.getOffset(),encFrameLen);
  if (framesSinceLastIFrame >= IFRAME_INTERVAL) {
    FFmpeg.avframe_set_key_frame(avframe,true);
    framesSinceLastIFrame=0;
  }
 else {
    framesSinceLastIFrame++;
    FFmpeg.avframe_set_key_frame(avframe,false);
  }
  int encLen=FFmpeg.avcodec_encode_video(avcontext,encFrameBuffer,encFrameLen,avframe);
  byte[] r=new byte[encLen];
  System.arraycopy(encFrameBuffer,0,r,0,r.length);
  outBuffer.setData(r);
  outBuffer.setLength(r.length);
  outBuffer.setOffset(0);
  return BUFFER_PROCESSED_OK;
}
