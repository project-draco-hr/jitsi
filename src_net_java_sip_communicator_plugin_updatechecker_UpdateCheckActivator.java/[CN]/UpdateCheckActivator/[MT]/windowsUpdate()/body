{
  final File[] tempFile=new File[1];
  FileOutputStream tempFileOutputStream=null;
  boolean deleteTempFile=false;
  try {
    URL u=new URL(downloadLink);
    tempFileOutputStream=createTempFileOutputStream(u,tempFile);
    HttpUtils.HTTPResponseResult res=HttpUtils.openURLConnection(downloadLink);
    if (res == null)     return;
    InputStream in=res.getContent();
    final ProgressMonitorInputStream input=new ProgressMonitorInputStream(null,downloadLink,in);
    input.getProgressMonitor().setMaximum((int)res.getContentLength());
    final BufferedOutputStream output=new BufferedOutputStream(tempFileOutputStream);
    try {
      int read=-1;
      byte[] buff=new byte[1024];
      while ((read=input.read(buff)) != -1)       output.write(buff,0,read);
      try {
        input.close();
      }
 catch (      IOException ioe) {
      }
      output.close();
      if (getUIService().getPopupDialog().showConfirmPopupDialog(getResources().getI18NString("plugin.updatechecker.DIALOG_WARN"),getResources().getI18NString("plugin.updatechecker.DIALOG_TITLE"),PopupDialog.YES_NO_OPTION,PopupDialog.QUESTION_MESSAGE) != PopupDialog.YES_OPTION)       return;
      new ProcessBuilder(tempFile[0].getCanonicalPath(),"--wait-parent","SIP_COMMUNICATOR_AUTOUPDATE_INSTALLDIR=\"" + System.getProperty("user.dir") + "\"").start();
      getShutdownService().beginShutdown();
    }
 catch (    Exception e) {
      logger.error("Error saving",e);
    }
 finally {
      try {
        input.close();
      }
 catch (      IOException ioe) {
      }
      try {
        output.close();
      }
 catch (      IOException ioe) {
      }
    }
  }
 catch (  FileNotFoundException fnfe) {
    deleteTempFile=true;
    getUIService().getPopupDialog().showMessagePopupDialog(getResources().getI18NString("plugin.updatechecker.DIALOG_MISSING_UPDATE"),getResources().getI18NString("plugin.updatechecker.DIALOG_NOUPDATE_TITLE"),PopupDialog.INFORMATION_MESSAGE);
  }
catch (  Exception e) {
    deleteTempFile=true;
    if (logger.isInfoEnabled())     logger.info("Error starting update process!",e);
    ;
  }
 finally {
    if (deleteTempFile) {
      if (tempFileOutputStream != null) {
        try {
          tempFileOutputStream.close();
        }
 catch (        IOException ioe) {
        }
      }
      if (tempFile[0] != null)       tempFile[0].delete();
    }
  }
}
