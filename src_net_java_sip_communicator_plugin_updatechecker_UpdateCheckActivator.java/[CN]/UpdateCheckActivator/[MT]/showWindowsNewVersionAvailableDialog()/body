{
  final boolean[] exitCheckForUpdates=new boolean[]{false};
  final JDialog dialog=new SIPCommDialog(){
    private static final long serialVersionUID=0L;
    protected void close(    boolean escaped){
synchronized (exitCheckForUpdates) {
        if (exitCheckForUpdates[0])         exitCheckForUpdates(this);
      }
    }
  }
;
  ResourceManagementService resources=getResources();
  dialog.setTitle(resources.getI18NString("plugin.updatechecker.DIALOG_TITLE"));
  JEditorPane contentMessage=new JEditorPane();
  contentMessage.setContentType("text/html");
  contentMessage.setOpaque(false);
  contentMessage.setEditable(false);
  contentMessage.putClientProperty(JEditorPane.HONOR_DISPLAY_PROPERTIES,Boolean.TRUE);
  String dialogMsg=resources.getI18NString("plugin.updatechecker.DIALOG_MESSAGE",new String[]{resources.getSettingsString("service.gui.APPLICATION_NAME")});
  if (lastVersion != null) {
    dialogMsg+=resources.getI18NString("plugin.updatechecker.DIALOG_MESSAGE_2",new String[]{resources.getSettingsString("service.gui.APPLICATION_NAME"),lastVersion});
  }
  contentMessage.setText(dialogMsg);
  JPanel contentPane=new SIPCommFrame.MainContentPane();
  contentMessage.setBorder(BorderFactory.createEmptyBorder(10,0,20,0));
  contentPane.setBorder(BorderFactory.createEmptyBorder(0,10,0,10));
  contentPane.add(contentMessage,BorderLayout.NORTH);
  JScrollPane scrollChanges=new JScrollPane();
  scrollChanges.setPreferredSize(new Dimension(550,200));
  JEditorPane changesHtml=new JEditorPane();
  changesHtml.setContentType("text/html");
  changesHtml.setEditable(false);
  changesHtml.setBorder(BorderFactory.createLoweredBevelBorder());
  scrollChanges.setViewportView(changesHtml);
  contentPane.add(scrollChanges,BorderLayout.CENTER);
  try {
    Document changesHtmlDocument=changesHtml.getDocument();
    if (changesHtmlDocument instanceof AbstractDocument) {
      ((AbstractDocument)changesHtmlDocument).setAsynchronousLoadPriority(0);
    }
    changesHtml.setPage(new URL(changesLink));
  }
 catch (  Exception e) {
    logger.error("Cannot set changes Page",e);
  }
  JPanel buttonPanel=new TransparentPanel(new FlowLayout(FlowLayout.CENTER,10,10));
  final JButton closeButton=new JButton(resources.getI18NString("plugin.updatechecker.BUTTON_CLOSE"));
  closeButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      dialog.dispose();
      if (exitCheckForUpdates[0])       exitCheckForUpdates(dialog);
    }
  }
);
  if (downloadLink != null) {
    JButton installButton=new JButton(resources.getI18NString("plugin.updatechecker.BUTTON_INSTALL"));
    installButton.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        if (OSUtils.IS_WINDOWS64)         downloadLink=downloadLink.replace("x86","x64");
        enterCheckForUpdates(null);
        try {
          closeButton.doClick();
        }
  finally {
          boolean windowsUpdateThreadHasStarted=false;
          try {
            new Thread(){
              @Override public void run(){
                try {
                  windowsUpdate();
                }
  finally {
                  exitCheckForUpdates(null);
                }
              }
            }
.start();
            windowsUpdateThreadHasStarted=true;
          }
  finally {
            if (!windowsUpdateThreadHasStarted)             exitCheckForUpdates(null);
          }
        }
      }
    }
);
    buttonPanel.add(installButton);
  }
  buttonPanel.add(closeButton);
  contentPane.add(buttonPanel,BorderLayout.SOUTH);
  dialog.setContentPane(contentPane);
  dialog.pack();
  Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();
  dialog.setLocation(screenSize.width / 2 - dialog.getWidth() / 2,screenSize.height / 2 - dialog.getHeight() / 2);
synchronized (exitCheckForUpdates) {
    enterCheckForUpdates(dialog);
    exitCheckForUpdates[0]=true;
  }
  try {
    dialog.setVisible(true);
  }
  finally {
synchronized (exitCheckForUpdates) {
      if (exitCheckForUpdates[0] && dialog.isModal())       exitCheckForUpdates(dialog);
    }
  }
}
