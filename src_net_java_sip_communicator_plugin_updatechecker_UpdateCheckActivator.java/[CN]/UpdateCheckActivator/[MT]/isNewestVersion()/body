{
  try {
    ServiceReference serviceReference=bundleContext.getServiceReference(net.java.sip.communicator.service.version.VersionService.class.getName());
    VersionService verService=(VersionService)bundleContext.getService(serviceReference);
    net.java.sip.communicator.service.version.Version ver=verService.getCurrentVersion();
    String configString=getConfiguration().getString(PROP_UPDATE_LINK);
    if (configString == null)     configString=Resources.getConfigString("update_link");
    if (configString == null) {
      if (logger.isDebugEnabled())       logger.debug("Updates are disabled. Faking latest version.");
      return true;
    }
    Properties props=new Properties();
    HttpUtils.HTTPResponseResult res=HttpUtils.openURLConnection(configString);
    if (res == null)     return true;
    InputStream in=res.getContent();
    props.load(in);
    in.close();
    lastVersion=props.getProperty("last_version");
    downloadLink=props.getProperty("download_link");
    changesLink=configString.substring(0,configString.lastIndexOf("/") + 1) + props.getProperty("changes_html");
    return lastVersion.compareTo(ver.toString()) <= 0;
  }
 catch (  Exception e) {
    logger.warn("Cannot get and compare versions!");
    if (logger.isDebugEnabled())     logger.debug("Error was: ",e);
    return true;
  }
}
