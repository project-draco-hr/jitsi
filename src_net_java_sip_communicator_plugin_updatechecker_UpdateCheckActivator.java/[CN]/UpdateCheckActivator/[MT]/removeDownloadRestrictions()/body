{
  try {
    SSLContext sc=SSLContext.getInstance("SSLv3");
    TrustManager[] tma={new DummyTrustManager()};
    sc.init(null,tma,null);
    HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
  }
 catch (  Exception e) {
    logger.warn("Failed to init dummy trust magaer",e);
  }
  HostnameVerifier hv=new HostnameVerifier(){
    public boolean verify(    String urlHostName,    SSLSession session){
      logger.warn("Warning: URL Host: " + urlHostName + " vs. "+ session.getPeerHost());
      return true;
    }
  }
;
  HttpsURLConnection.setDefaultHostnameVerifier(hv);
  Authenticator.setDefault(new Authenticator(){
    protected PasswordAuthentication getPasswordAuthentication(){
      String uName=(String)getConfigurationService().getProperty(UPDATE_USERNAME_CONFIG);
      if (uName != null) {
        String pass=(String)getConfigurationService().getProperty(UPDATE_PASSWORD_CONFIG);
        if (pass != null)         return new PasswordAuthentication(uName,new String(Base64.decode(pass)).toCharArray());
      }
      if (userCredentials != null) {
        return new PasswordAuthentication(userCredentials.getUserName(),userCredentials.getPassword());
      }
 else {
        return null;
      }
    }
  }
);
}
