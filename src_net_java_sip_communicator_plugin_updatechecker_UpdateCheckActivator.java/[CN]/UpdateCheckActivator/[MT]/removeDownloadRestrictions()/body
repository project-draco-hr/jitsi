{
  HostnameVerifier hv=new HostnameVerifier(){
    public boolean verify(    String urlHostName,    SSLSession session){
      logger.warn("Warning: URL Host: " + urlHostName + " vs. "+ session.getPeerHost());
      return true;
    }
  }
;
  HttpsURLConnection.setDefaultHostnameVerifier(hv);
  Authenticator.setDefault(new Authenticator(){
    protected PasswordAuthentication getPasswordAuthentication(){
      if (userCredentials == null) {
        ConfigurationService config=getConfiguration();
        String uName=(String)config.getProperty(UPDATE_USERNAME_CONFIG);
        if (uName != null) {
          String pass=(String)config.getProperty(UPDATE_PASSWORD_CONFIG);
          if (pass != null) {
            userCredentials=new UserCredentials();
            userCredentials.setUserName(uName);
            userCredentials.setPassword(new String(Base64.decode(pass)).toCharArray());
            userCredentials.setPasswordPersistent(true);
          }
        }
      }
      if (userCredentials != null) {
        return new PasswordAuthentication(userCredentials.getUserName(),userCredentials.getPassword());
      }
 else {
        host=getRequestingHost();
        AuthenticationWindow authWindow=null;
        if (errorMessage == null) {
          authWindow=new AuthenticationWindow(host,true,null);
        }
 else {
          authWindow=new AuthenticationWindow(null,null,host,true,null,errorMessage);
          errorMessage=null;
        }
        userCredentials=new UserCredentials();
        authWindow.setVisible(true);
        if (!authWindow.isCanceled()) {
          isAuthenticationCanceled=false;
          userCredentials.setUserName(authWindow.getUserName());
          userCredentials.setPassword(authWindow.getPassword());
          userCredentials.setPasswordPersistent(authWindow.isRememberPassword());
          if (authWindow.isRememberPassword()) {
            getConfiguration().setProperty(UPDATE_USERNAME_CONFIG,userCredentials.getUserName());
            getConfiguration().setProperty(UPDATE_PASSWORD_CONFIG,new String(Base64.encode(userCredentials.getPasswordAsString().getBytes())));
          }
          return new PasswordAuthentication(userCredentials.getUserName(),userCredentials.getPassword());
        }
 else {
          isAuthenticationCanceled=true;
          userCredentials.setUserName(null);
          userCredentials=null;
          getConfiguration().removeProperty(UPDATE_USERNAME_CONFIG);
          getConfiguration().removeProperty(UPDATE_PASSWORD_CONFIG);
        }
        return null;
      }
    }
  }
);
}
