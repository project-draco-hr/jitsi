{
  g.setFont(font);
  int titleWidth=SwingUtilities.computeStringWidth(metrics,title);
  if (isOneActionButtonEnabled()) {
    int preferredWidth=CLOSABLE_TAB_BACKGROUND.getWidth(null) - 2 * WIDTHDELTA - 20;
    if (isCloseEnabled())     preferredWidth-=BUTTONSIZE;
    if (isMaxEnabled())     preferredWidth-=BUTTONSIZE;
    while (titleWidth > preferredWidth) {
      if (title.endsWith("..."))       title=title.substring(0,title.indexOf("...") - 1).concat("...");
 else       title=title.substring(0,title.length() - 3).concat("...");
      titleWidth=SwingUtilities.computeStringWidth(metrics,title);
      textRect.width=titleWidth;
    }
  }
  View v=getTextViewForTab(tabIndex);
  if (v != null) {
    v.paint(g,textRect);
  }
 else {
    int mnemIndex=tabPane.getDisplayedMnemonicIndexAt(tabIndex);
    if (tabPane.isEnabled() && tabPane.isEnabledAt(tabIndex)) {
      if (isSelected)       g.setColor(whiteColor);
 else {
        if (this.isTabHighlighted(tabIndex)) {
          g.setColor(highlightedColor);
        }
 else         g.setColor(tabPane.getForegroundAt(tabIndex));
      }
      BasicGraphicsUtils.drawStringUnderlineCharAt(g,title,mnemIndex,textRect.x,textRect.y + metrics.getAscent());
    }
 else {
      g.setColor(tabPane.getBackgroundAt(tabIndex).brighter());
      BasicGraphicsUtils.drawStringUnderlineCharAt(g,title,mnemIndex,textRect.x,textRect.y + metrics.getAscent());
      g.setColor(tabPane.getBackgroundAt(tabIndex).darker());
      BasicGraphicsUtils.drawStringUnderlineCharAt(g,title,mnemIndex,textRect.x - 1,textRect.y + metrics.getAscent() - 1);
    }
  }
}
