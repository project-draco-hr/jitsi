{
  ULP_inst=new ilbc_ulp(init_mode);
  syntMem=new float[ilbc_constants.LPC_FILTERORDER];
  prevLpc=new float[ilbc_constants.LPC_FILTERORDER + 1];
  prevResidual=new float[ilbc_constants.NSUB_MAX * ilbc_constants.SUBL];
  old_syntdenum=new float[(ilbc_constants.LPC_FILTERORDER + 1) * ilbc_constants.NSUB_MAX];
  hpomem=new float[4];
  enh_buf=new float[ilbc_constants.ENH_BUFL];
  enh_period=new float[ilbc_constants.ENH_NBLOCKS_TOT];
  lsfdeqold=new float[ilbc_constants.LPC_FILTERORDER];
  for (int li=0; li < syntMem.length; li++)   syntMem[li]=0.0f;
  System.arraycopy(ilbc_constants.lsfmeanTbl,0,lsfdeqold,0,ilbc_constants.LPC_FILTERORDER);
  for (int li=0; li < old_syntdenum.length; li++)   old_syntdenum[li]=0.0f;
  for (int li=0; li < ilbc_constants.NSUB_MAX; li++)   old_syntdenum[li * (ilbc_constants.LPC_FILTERORDER + 1)]=1.0f;
  last_lag=20;
  prevLag=120;
  per=0.0f;
  consPLICount=0;
  prevPLI=0;
  prevLpc[0]=1.0f;
  for (int li=1; li < prevLpc.length; li++)   prevLpc[li]=0.0f;
  for (int li=0; li < prevResidual.length; li++)   prevResidual[li]=0.0f;
  seed=777;
  for (int li=0; li < hpomem.length; li++)   hpomem[li]=0.0f;
  use_enhancer=init_enhancer;
  for (int li=0; li < enh_buf.length; li++)   enh_buf[li]=0.0f;
  for (int li=0; li < ilbc_constants.ENH_NBLOCKS_TOT; li++)   enh_period[li]=40.0f;
  prev_enh_pl=0;
}
