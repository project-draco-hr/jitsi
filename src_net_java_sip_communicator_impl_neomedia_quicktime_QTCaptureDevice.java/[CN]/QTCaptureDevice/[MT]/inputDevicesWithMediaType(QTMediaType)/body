{
  long[] inputDevicePtrs=inputDevicesWithMediaType(mediaType.name());
  int inputDeviceCount=(inputDevicePtrs == null) ? 0 : inputDevicePtrs.length;
  QTCaptureDevice[] inputDevicesWithMediaType;
  if (inputDeviceCount == 0) {
    inputDevicesWithMediaType=NO_INPUT_DEVICES;
    inputDevices.remove(mediaType);
  }
 else {
    inputDevicesWithMediaType=new QTCaptureDevice[inputDeviceCount];
    List<QTCaptureDevice> cachedInputDevicesWithMediaType=inputDevices.get(mediaType);
    if (cachedInputDevicesWithMediaType == null) {
      cachedInputDevicesWithMediaType=new LinkedList<QTCaptureDevice>();
      inputDevices.put(mediaType,cachedInputDevicesWithMediaType);
    }
    for (int i=0; i < inputDeviceCount; i++) {
      long inputDevicePtr=inputDevicePtrs[i];
      QTCaptureDevice inputDevice=null;
      for (      QTCaptureDevice cachedInputDevice : cachedInputDevicesWithMediaType)       if (inputDevicePtr == cachedInputDevice.getPtr()) {
        inputDevice=cachedInputDevice;
        break;
      }
      if (inputDevice == null) {
        inputDevice=new QTCaptureDevice(inputDevicePtr);
        cachedInputDevicesWithMediaType.add(inputDevice);
      }
 else       NSObject.release(inputDevicePtr);
      inputDevicesWithMediaType[i]=inputDevice;
    }
    Iterator<QTCaptureDevice> cachedInputDeviceIter=cachedInputDevicesWithMediaType.iterator();
    while (cachedInputDeviceIter.hasNext()) {
      long cachedInputDevicePtr=cachedInputDeviceIter.next().getPtr();
      boolean remove=true;
      for (      long inputDevicePtr : inputDevicePtrs)       if (cachedInputDevicePtr == inputDevicePtr) {
        remove=false;
        break;
      }
      if (remove)       cachedInputDeviceIter.remove();
    }
  }
  return inputDevicesWithMediaType;
}
