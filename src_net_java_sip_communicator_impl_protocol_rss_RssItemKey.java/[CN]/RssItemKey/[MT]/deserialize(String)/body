{
  StringTokenizer reader=new StringTokenizer(settings,";");
  Date date=null;
  String uri=null;
  boolean useInitialized=false;
  boolean isDateUsed=false;
  while (reader.hasMoreTokens()) {
    String data[]=reader.nextToken().split("=",2);
    if (data[0].equals("itemDate")) {
      if (data.length == 2) {
        try {
          if (!data[1].equals("null")) {
            date=formatter.parse(data[1]);
          }
        }
 catch (        ParseException e) {
          logger.error("Failed to deserialize RSS settings. Parse date error: " + settings,e);
          return null;
        }
      }
 else {
        logger.error("Failed to deserialize RSS settings. Parse itemDate error: " + settings,new Exception("Parse itemDate error: " + settings));
        return null;
      }
    }
 else     if (data[0].equals("itemUri")) {
      if (data.length == 2) {
        if (!data[1].equals("null")) {
          uri=data[1];
        }
      }
 else {
        logger.error("Failed to deserialize RSS settings. Parse itemUri error: " + settings,new Exception("Parse itemUri error: " + settings));
        return null;
      }
    }
 else     if (data[0].equals("usesDate")) {
      if (data.length == 2) {
        isDateUsed=Boolean.valueOf(data[1]).booleanValue();
        useInitialized=true;
      }
 else {
        logger.error("Failed to deserialize RSS settings. Parse usesDate error: " + settings,new Exception("Parse usesDate error: " + settings));
        return null;
      }
    }
  }
  if (useInitialized) {
    if (isDateUsed && date != null) {
      return new RssItemKey(date);
    }
 else     if (!isDateUsed && uri != null) {
      return new RssItemKey(uri);
    }
  }
  return null;
}
