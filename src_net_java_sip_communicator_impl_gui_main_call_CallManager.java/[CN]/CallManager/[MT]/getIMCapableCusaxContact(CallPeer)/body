{
  UIContactImpl uiContact=CallManager.getCallUIContact(peer.getCall());
  if (uiContact != null) {
    if (uiContact.getDescriptor() instanceof MetaContact) {
      MetaContact metaContact=(MetaContact)uiContact.getDescriptor();
      Iterator<Contact> iter=metaContact.getContacts();
      while (iter.hasNext()) {
        Contact contact=iter.next();
        if (contact.getProtocolProvider().getOperationSet(OperationSetBasicInstantMessaging.class) != null)         return contact;
      }
    }
 else     if (uiContact.getDescriptor() instanceof SourceContact) {
      Contact contact=getPeerCusaxContact(peer.getAddress(),(SourceContact)uiContact.getDescriptor());
      if (contact != null && contact.getProtocolProvider().getOperationSet(OperationSetBasicInstantMessaging.class) != null)       return contact;
    }
  }
  String imppAddress=peer.getAlternativeIMPPAddress();
  if (!StringUtils.isNullOrEmpty(imppAddress)) {
    int protocolPartIndex=imppAddress.indexOf(":");
    imppAddress=(protocolPartIndex >= 0) ? imppAddress.substring(protocolPartIndex + 1) : imppAddress;
    Collection<ProtocolProviderService> cusaxProviders=AccountUtils.getRegisteredProviders(OperationSetCusaxUtils.class);
    if (cusaxProviders != null && cusaxProviders.size() > 0) {
      ProtocolProviderService cusaxProvider=cusaxProviders.iterator().next();
      Contact contact=getPeerContact(peer,cusaxProvider,imppAddress);
      if (contact != null && cusaxProvider.getOperationSet(OperationSetBasicInstantMessaging.class) != null) {
        return contact;
      }
    }
  }
  return null;
}
