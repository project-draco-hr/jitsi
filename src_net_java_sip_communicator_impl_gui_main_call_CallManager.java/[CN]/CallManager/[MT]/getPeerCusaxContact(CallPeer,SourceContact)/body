{
  ProtocolProviderService linkedCusaxProvider=null;
  for (  ContactDetail detail : sourceContact.getContactDetails()) {
    ProtocolProviderService pps=detail.getPreferredProtocolProvider(OperationSetBasicTelephony.class);
    if (pps != null) {
      OperationSetCusaxUtils cusaxOpSet=pps.getOperationSet(OperationSetCusaxUtils.class);
      if (cusaxOpSet != null) {
        linkedCusaxProvider=cusaxOpSet.getLinkedCusaxProvider();
        break;
      }
    }
  }
  if (linkedCusaxProvider == null) {
    ProtocolProviderService pps=peer.getProtocolProvider();
    OperationSetCusaxUtils cusaxOpSet=pps.getOperationSet(OperationSetCusaxUtils.class);
    if (cusaxOpSet != null) {
      linkedCusaxProvider=cusaxOpSet.getLinkedCusaxProvider();
    }
  }
  if (linkedCusaxProvider != null) {
    OperationSetPersistentPresence opSetPersistentPresence=linkedCusaxProvider.getOperationSet(OperationSetPersistentPresence.class);
    if (opSetPersistentPresence != null) {
      String peerAddress=peer.getAddress();
      int index=peerAddress.indexOf("@");
      String peerUserID=(index > -1) ? peerAddress.substring(0,index) : peerAddress;
      String peerUserIDQ=Pattern.quote(peerUserID);
      Pattern pattern=Pattern.compile("^(" + peerUserIDQ + "|"+ peerUserIDQ+ "@.*)$");
      return findContactByPeer(peerUserID,pattern,opSetPersistentPresence.getServerStoredContactListRoot(),linkedCusaxProvider.getOperationSet(OperationSetCusaxUtils.class));
    }
  }
  return null;
}
