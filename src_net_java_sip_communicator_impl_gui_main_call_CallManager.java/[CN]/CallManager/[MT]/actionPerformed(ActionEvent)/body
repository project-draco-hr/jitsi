{
  JButton button=(JButton)evt.getSource();
  String buttonName=button.getName();
  if (buttonName.equals("call")) {
    Object o=mainFrame.getContactListPanel().getContactList().getSelectedValue();
    Component selectedPanel=mainFrame.getSelectedPanel();
    if (selectedPanel != null && selectedPanel instanceof CallPanel && ((CallPanel)selectedPanel).getCall().getCallState() == CallState.CALL_INITIALIZATION) {
      CallPanel callPanel=(CallPanel)selectedPanel;
      Call call=callPanel.getCall();
      ProtocolProviderService pps=call.getProtocolProvider();
      Iterator participants=call.getCallParticipants();
      while (participants.hasNext()) {
        CallParticipant participant=(CallParticipant)participants.next();
        answerCall(pps,participant);
      }
    }
 else     if (selectedPanel != null && selectedPanel instanceof CallListPanel && ((CallListPanel)selectedPanel).getCallList().getSelectedIndex() != -1) {
      CallListPanel callListPanel=(CallListPanel)selectedPanel;
      GuiCallParticipantRecord callRecord=(GuiCallParticipantRecord)callListPanel.getCallList().getSelectedValue();
      String stringContact=callRecord.getParticipantName();
      createCall(stringContact);
    }
 else     if (isCallMetaContact && o != null && o instanceof MetaContact) {
      MetaContact metaContact=(MetaContact)o;
      Contact contact=getTelephonyContact(metaContact);
      if (contact != null) {
        createCall(contact);
      }
 else {
        JOptionPane.showMessageDialog(this.mainFrame,Messages.getString("contactNotSupportingTelephony"),Messages.getString("warning"),JOptionPane.WARNING_MESSAGE);
      }
    }
 else     if (!phoneNumberCombo.isComboFieldEmpty()) {
      String stringContact=phoneNumberCombo.getEditor().getItem().toString();
      createCall(stringContact);
    }
  }
 else   if (buttonName.equalsIgnoreCase("hangup")) {
    Component selectedPanel=this.mainFrame.getSelectedPanel();
    if (selectedPanel != null && selectedPanel instanceof CallPanel) {
      CallPanel callPanel=(CallPanel)selectedPanel;
      Call call=callPanel.getCall();
      if (activeCalls.get(call) != null) {
        if (removeCallTimers.containsKey(callPanel)) {
          ((Timer)removeCallTimers.get(callPanel)).stop();
          removeCallTimers.remove(callPanel);
        }
        removeCallPanel(callPanel);
        ProtocolProviderService pps=call.getProtocolProvider();
        OperationSetBasicTelephony telephony=mainFrame.getTelephony(pps);
        Iterator participants=call.getCallParticipants();
        while (participants.hasNext()) {
          try {
            telephony.hangupCallParticipant((CallParticipant)participants.next());
          }
 catch (          OperationFailedException e) {
            logger.error("Hang up was not successful: " + e);
          }
        }
      }
    }
  }
 else   if (buttonName.equalsIgnoreCase("minimize")) {
    this.remove(comboPanel);
    this.remove(buttonsPanel);
    this.minimizeButtonPanel.removeAll();
    this.minimizeButtonPanel.add(restoreButton);
    this.isShown=false;
    this.mainFrame.getContactListPanel().getContactList().requestFocus();
    this.mainFrame.validate();
  }
 else   if (buttonName.equalsIgnoreCase("restore")) {
    this.add(comboPanel,BorderLayout.NORTH);
    this.add(buttonsPanel,BorderLayout.CENTER);
    this.minimizeButtonPanel.removeAll();
    this.minimizeButtonPanel.add(minimizeButton);
    this.isShown=true;
    this.mainFrame.validate();
  }
}
