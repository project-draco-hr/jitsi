{
  if (!video) {
    MediaService mediaService=GuiActivator.getMediaService();
    MediaDevice dev=mediaService.getDefaultDevice(MediaType.AUDIO,MediaUseCase.CALL);
    List<MediaFormat> formats=getAudioFormats(dev,protocolProvider);
    String errorMsg=null;
    if (!dev.getDirection().allowsSending())     errorMsg=GuiActivator.getResources().getI18NString("service.gui.CALL_NO_AUDIO_DEVICE");
 else     if (formats.isEmpty()) {
      errorMsg=GuiActivator.getResources().getI18NString("service.gui.CALL_NO_AUDIO_CODEC");
    }
    if (errorMsg != null) {
      if (GuiActivator.getUIService().getPopupDialog().showConfirmPopupDialog(errorMsg + " " + GuiActivator.getResources().getI18NString("service.gui.CALL_NO_DEVICE_CODECS_Q"),GuiActivator.getResources().getI18NString("service.gui.CALL"),PopupDialog.YES_NO_OPTION,PopupDialog.QUESTION_MESSAGE) == PopupDialog.NO_OPTION) {
        return;
      }
    }
  }
  Contact contact=this.contact;
  String stringContact=this.stringContact;
  if (ConfigurationUtils.isNormalizePhoneNumber()) {
    if (contact != null) {
      stringContact=contact.getAddress();
      contact=null;
    }
    if (stringContact != null) {
      stringContact=PhoneNumberI18nService.normalize(stringContact);
    }
  }
  try {
    if (conferenceDescription != null) {
      internalCall(protocolProvider,conferenceDescription,chatRoom);
    }
 else {
      if (video) {
        internalCallVideo(protocolProvider,contact,uiContact,stringContact);
      }
 else {
        internalCall(protocolProvider,contact,stringContact,contactResource,uiContact);
      }
    }
  }
 catch (  Throwable t) {
    if (t instanceof ThreadDeath)     throw (ThreadDeath)t;
    logger.error("The call could not be created: ",t);
    String message=GuiActivator.getResources().getI18NString("servoce.gui.CREATE_CALL_FAILED");
    if (t.getMessage() != null)     message+=" " + t.getMessage();
    new ErrorDialog(null,GuiActivator.getResources().getI18NString("service.gui.ERROR"),message,t).showDialog();
  }
}
