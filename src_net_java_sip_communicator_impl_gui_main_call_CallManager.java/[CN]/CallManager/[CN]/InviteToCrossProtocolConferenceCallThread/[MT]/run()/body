{
  for (  Map.Entry<ProtocolProviderService,List<String>> entry : callees.entrySet()) {
    ProtocolProviderService provider=entry.getKey();
    List<String> contactList=entry.getValue();
    OperationSetBasicTelephony<?> opSetTelephony=provider.getOperationSet(OperationSetBasicTelephony.class);
    if (opSetTelephony != null) {
      OperationSetTelephonyConferencing opSetConf=provider.getOperationSet(OperationSetTelephonyConferencing.class);
      String[] contactArray=contactList.toArray(new String[contactList.size()]);
      if (ConfigurationManager.isNormalizePhoneNumber())       normalizePhoneNumbers(contactArray);
      Call providerCall=null;
      CallGroup group=null;
      if (provider.equals(call.getProtocolProvider()))       providerCall=call;
 else {
        group=call.getCallGroup();
        if (group == null) {
          group=new CallGroup();
          group.addCall(call);
          call.setCallGroup(group);
        }
 else {
          for (          Call groupCall : group.getCalls()) {
            if (provider.equals(groupCall.getProtocolProvider())) {
              providerCall=groupCall;
              break;
            }
          }
        }
      }
      try {
        if (providerCall == null) {
          opSetConf.createConfCall(contactArray,group);
        }
 else {
          for (          String contact : contactArray)           opSetConf.inviteCalleeToCall(contact,providerCall);
        }
      }
 catch (      Exception exception) {
        logger.error("Failed to invite callees",exception);
        new ErrorDialog(null,GuiActivator.getResources().getI18NString("service.gui.ERROR"),exception.getMessage(),ErrorDialog.ERROR).showDialog();
      }
    }
  }
}
