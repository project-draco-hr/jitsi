{
  List<PayloadTypePacketExtension> lst=answer.getPayloadTypes();
  EncryptionPacketExtension encryptionPacketExtension=answer.getFirstChildOfType(EncryptionPacketExtension.class);
  if (encryptionPacketExtension != null) {
    ZrtpHashPacketExtension zrtpHashPacketExtension=encryptionPacketExtension.getFirstChildOfType(ZrtpHashPacketExtension.class);
    if (zrtpHashPacketExtension != null && zrtpHashPacketExtension.getValue() != null) {
      addAdvertisedEncryptionMethod(SrtpControlType.ZRTP);
    }
  }
  boolean masterStreamSet=true;
  for (  MediaType mediaType : MediaType.values()) {
    String ns=getNamespaceForMediaType(mediaType);
    String mediaName=getNameForMediaType(mediaType);
    MediaFormat format=null;
    for (    PayloadTypePacketExtension ext : lst) {
      if (ext.getNamespace().equals(ns)) {
        format=JingleUtils.payloadTypeToMediaFormat(ext,getDynamicPayloadTypes());
        if (format != null)         break;
      }
    }
    if (format == null)     continue;
    StreamConnector connector=transportManager.getStreamConnector(mediaType);
    MediaDevice dev=getDefaultDevice(mediaType);
    MediaStreamTarget target=transportManager.getStreamTarget(mediaType);
    List<RTPExtension> rtpExtensions=new ArrayList<RTPExtension>();
    MediaDirection direction=MediaDirection.SENDRECV;
    boolean masterStream=false;
    if (!masterStreamSet) {
      if (MediaType.values().length > 1) {
        if (mediaType.equals(MediaType.AUDIO)) {
          masterStream=true;
          masterStreamSet=true;
        }
      }
 else {
        masterStream=true;
        masterStreamSet=true;
      }
    }
    initStream(mediaName,connector,dev,format,target,direction,rtpExtensions,masterStream);
  }
}
