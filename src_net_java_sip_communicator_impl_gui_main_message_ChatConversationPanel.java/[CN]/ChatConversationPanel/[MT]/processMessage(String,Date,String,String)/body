{
  String chatString="";
  String endHeaderTag="";
  Calendar calendar=Calendar.getInstance();
  calendar.setTime(date);
  if (messageType.equals(Constants.INCOMING_MESSAGE)) {
    this.lastIncomingMsgTimestamp=new Date();
    chatString="<h2>";
    endHeaderTag="</h2>";
    chatString+=contactName + " at " + processTime(calendar.get(Calendar.HOUR_OF_DAY))+ ":"+ processTime(calendar.get(Calendar.MINUTE))+ ":"+ processTime(calendar.get(Calendar.SECOND))+ endHeaderTag+ "<DIV><PLAINTEXT>"+ processSmilies(processNewLines(processLinks(message)))+ "</PLAINTEXT></DIV>";
  }
 else   if (messageType.equals(Constants.OUTGOING_MESSAGE)) {
    chatString="<h3>";
    endHeaderTag="</h3>";
    chatString+=Messages.getString("me") + " at " + processTime(calendar.get(Calendar.HOUR_OF_DAY))+ ":"+ processTime(calendar.get(Calendar.MINUTE))+ ":"+ processTime(calendar.get(Calendar.SECOND))+ endHeaderTag+ "<DIV><PLAINTEXT>"+ processSmilies(processNewLines(processLinks(message)))+ "</PLAINTEXT></DIV>";
  }
 else   if (messageType.equals(Constants.SYSTEM_MESSAGE)) {
    chatString="<h4>";
    endHeaderTag="</h4>";
    chatString+=processTime(calendar.get(Calendar.HOUR_OF_DAY)) + ":" + processTime(calendar.get(Calendar.MINUTE))+ ":"+ processTime(calendar.get(Calendar.SECOND))+ " "+ contactName+ " "+ message+ endHeaderTag;
  }
  Element root=this.document.getDefaultRootElement();
  try {
    this.document.insertAfterEnd(root.getElement(root.getElementCount() - 1),chatString);
  }
 catch (  BadLocationException e) {
    LOGGER.error("Insert in the HTMLDocument failed.",e);
  }
catch (  IOException e) {
    LOGGER.error("Insert in the HTMLDocument failed.",e);
  }
  this.setCarretToEnd();
}
