{
  final Pattern p=Pattern.compile(FLICKR_PATTERN,Pattern.CASE_INSENSITIVE | Pattern.DOTALL);
  Matcher m=p.matcher(chatString);
  int count=0, startPos=0;
  StringBuffer msgBuff=new StringBuffer();
  while (m.find()) {
    count++;
    msgBuff.append(chatString.substring(startPos,m.start()));
    startPos=m.end();
    if (count % 2 == 0) {
      try {
        String url="http://api.flickr.com/services/rest/?method=flickr.photos.getInfo&api_key=" + API_KEY + "&photo_id="+ m.group(3)+ "&format=json&nojsoncallback=1";
        URL flickrURL=new URL(url);
        URLConnection conn=flickrURL.openConnection();
        BufferedReader in=new BufferedReader(new InputStreamReader(conn.getInputStream()));
        String inputLine, holder="";
        while ((inputLine=in.readLine()) != null)         holder=inputLine;
        in.close();
        JSONObject wrapper=new JSONObject(holder);
        if (wrapper.getString("stat").equals("ok")) {
          JSONObject result=wrapper.getJSONObject("photo");
          String farmID=result.getString("farm");
          String serverID=result.getString("server");
          String secret=result.getString("secret");
          String thumbURL="http://farm" + farmID + ".static.flickr.com/"+ serverID+ "/"+ m.group(3)+ "_"+ secret+ "_t.jpg";
          if (!(result.length() == 0)) {
            msgBuff.append("<IMG HEIGHT=\"90\" WIDTH=\"120\" SRC=\"");
            msgBuff.append(thumbURL);
            msgBuff.append("\"></IMG>");
          }
        }
 else {
          startPos=0;
          msgBuff=new StringBuffer();
        }
      }
 catch (      Exception e) {
        startPos=0;
        msgBuff=new StringBuffer();
        e.printStackTrace();
      }
    }
 else {
      msgBuff.append(chatString.substring(m.start(),m.end()));
    }
  }
  msgBuff.append(chatString.substring(startPos));
  if (!msgBuff.toString().equals(chatString))   return msgBuff.toString();
  return chatString;
}
