{
  logger.info("Send NAT hole punch packets");
  int packetCount=ProtocolMediaActivator.getConfigurationService().getInt(HOLE_PUNCH_PKT_COUNT_PROPERTY,DEFAULT_HOLE_PUNCH_PKT_COUNT);
  if (packetCount < 0)   packetCount=DEFAULT_HOLE_PUNCH_PKT_COUNT;
  if (packetCount == 0)   return;
  try {
    final StreamConnector connector=getStreamConnector(type);
    if (connector.getProtocol() == StreamConnector.Protocol.TCP)     return;
    byte[] buf=new byte[0];
synchronized (connector) {
      for (int i=0; i < packetCount; i++) {
        DatagramSocket socket;
        if ((socket=connector.getDataSocket()) != null) {
          InetSocketAddress dataAddress=target.getDataAddress();
          socket.send(new DatagramPacket(buf,buf.length,dataAddress.getAddress(),dataAddress.getPort()));
        }
        if ((socket=connector.getControlSocket()) != null) {
          InetSocketAddress controlAddress=target.getControlAddress();
          socket.send(new DatagramPacket(buf,buf.length,controlAddress.getAddress(),controlAddress.getPort()));
        }
      }
    }
  }
 catch (  Exception e) {
    logger.error("Error cannot send to remote peer",e);
  }
}
