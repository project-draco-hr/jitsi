{
  double rms=0;
  int sampleCount=0;
  while (offset < length) {
    double sample=ArrayIOUtils.readShort(samples,offset);
    sample/=Short.MAX_VALUE;
    rms+=sample * sample;
    sampleCount++;
    offset+=2;
  }
  rms=(sampleCount == 0) ? 0 : Math.sqrt(rms / sampleCount);
  double db;
  if (rms > 0) {
    db=20 * Math.log10(rms);
    if (db < -MAX_SOUND_PRESSURE_LEVEL)     db=-MAX_SOUND_PRESSURE_LEVEL;
  }
 else   db=-MAX_SOUND_PRESSURE_LEVEL;
  db+=MAX_SOUND_PRESSURE_LEVEL;
  db-=MIN_SOUND_PRESSURE_LEVEL;
  int level=(int)(minLevel + (db / (MAX_SOUND_PRESSURE_LEVEL - MIN_SOUND_PRESSURE_LEVEL)) * (maxLevel - minLevel));
  level=ensureLevelRange(level,minLevel,maxLevel);
  level=(int)(0.8 * lastLevel + 0.2 * level);
  return level;
}
