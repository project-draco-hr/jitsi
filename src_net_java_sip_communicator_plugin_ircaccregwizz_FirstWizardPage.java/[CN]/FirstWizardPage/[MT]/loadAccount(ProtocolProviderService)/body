{
  AccountID accountID=protocolProvider.getAccountID();
  String password=IrcAccRegWizzActivator.getIrcProtocolProviderFactory().loadPassword(accountID);
  String server=accountID.getAccountPropertyString(ProtocolProviderFactory.SERVER_ADDRESS);
  String port=accountID.getAccountPropertyString(ProtocolProviderFactory.SERVER_PORT);
  String autoNickChange=accountID.getAccountPropertyString(ProtocolProviderFactory.AUTO_CHANGE_USER_NAME);
  String noPasswordRequired=accountID.getAccountPropertyString(ProtocolProviderFactory.NO_PASSWORD_REQUIRED);
  boolean useSecureConnection=accountID.getAccountPropertyBoolean(ProtocolProviderFactory.DEFAULT_ENCRYPTION,true);
  boolean resolveDnsThroughProxy=accountID.getAccountPropertyBoolean(IrcAccountRegistrationWizard.RESOLVE_DNS_THROUGH_PROXY,true);
  boolean contactPresenceTaskEnabled=accountID.getAccountPropertyBoolean(IrcAccountRegistrationWizard.CONTACT_PRESENCE_TASK,true);
  boolean chatRoomPresenceTaskEnabled=accountID.getAccountPropertyBoolean(IrcAccountRegistrationWizard.CHAT_ROOM_PRESENCE_TASK,true);
  final boolean enableSaslAuthentication=accountID.getAccountPropertyBoolean(IrcAccountRegistrationWizard.SASL_ENABLED,false);
  final String saslUser=accountID.getAccountPropertyString(IrcAccountRegistrationWizard.SASL_USERNAME,"");
  final String saslRole=accountID.getAccountPropertyString(IrcAccountRegistrationWizard.SASL_ROLE,"");
  this.userIDField.setEnabled(false);
  this.userIDField.setText(accountID.getUserID());
  this.serverField.setText(server);
  if (password != null) {
    this.passField.setText(password);
    this.rememberPassBox.setSelected(true);
  }
  if (port != null) {
    this.portField.setText(port);
    boolean defaultPort=(useSecureConnection && DEFAULT_SECURE_PORT.equals(port)) || DEFAULT_PLAINTEXT_PORT.equals(port);
    this.portField.setEnabled(!defaultPort);
    this.defaultPort.setSelected(defaultPort);
  }
  if (autoNickChange != null) {
    this.autoNickChange.setSelected(new Boolean(autoNickChange).booleanValue());
  }
  this.resolveDnsThroughProxy.setSelected(resolveDnsThroughProxy);
  if (noPasswordRequired != null) {
    boolean isPassRequired=!Boolean.valueOf(noPasswordRequired);
    this.passwordNotRequired.setSelected(!isPassRequired);
    this.rememberPassBox.setEnabled(isPassRequired);
    passField.setEnabled(isPassRequired);
  }
  this.useSecureConnection.setSelected(useSecureConnection);
  this.enableContactPresenceTask.setSelected(contactPresenceTaskEnabled);
  this.enableChatRoomPresenceTask.setSelected(chatRoomPresenceTaskEnabled);
  this.saslEnabled.setSelected(enableSaslAuthentication);
  this.saslUserIdField.setText(saslUser);
  this.saslRoleField.setText(saslRole);
}
