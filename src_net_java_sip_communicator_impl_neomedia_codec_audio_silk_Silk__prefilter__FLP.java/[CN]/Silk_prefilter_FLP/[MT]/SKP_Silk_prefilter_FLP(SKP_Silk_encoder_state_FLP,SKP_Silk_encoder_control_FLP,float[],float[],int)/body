{
  SKP_Silk_prefilter_state_FLP P=psEnc.sPrefilt;
  int j, k, lag;
  float HarmShapeGain, Tilt, LF_MA_shp, LF_AR_shp;
  float[] B=new float[2];
  float[] AR1_shp=new float[Silk_define.NB_SUBFR * Silk_define.SHAPE_LPC_ORDER_MAX];
  float[] px;
  int px_offset;
  float[] pxw, pst_res;
  int pxw_offset;
  int pst_res_offset;
  float[] HarmShapeFIR=new float[3];
  float[] st_res=new float[Silk_define.MAX_FRAME_LENGTH / Silk_define.NB_SUBFR + Silk_define.MAX_LPC_ORDER];
  px=x;
  px_offset=x_offset;
  pxw=xw;
  pxw_offset=0;
  lag=P.lagPrev;
  for (k=0; k < Silk_define.NB_SUBFR; k++) {
    if (psEncCtrl.sCmn.sigtype == Silk_define.SIG_TYPE_VOICED) {
      lag=psEncCtrl.sCmn.pitchL[k];
    }
    HarmShapeGain=psEncCtrl.HarmShapeGain[k] * (1.0f - psEncCtrl.HarmBoost[k]);
    HarmShapeFIR[0]=Silk_tables_other_FLP.SKP_Silk_HarmShapeFIR_FLP[0] * HarmShapeGain;
    HarmShapeFIR[1]=Silk_tables_other_FLP.SKP_Silk_HarmShapeFIR_FLP[1] * HarmShapeGain;
    HarmShapeFIR[2]=Silk_tables_other_FLP.SKP_Silk_HarmShapeFIR_FLP[2] * HarmShapeGain;
    Tilt=psEncCtrl.Tilt[k];
    LF_MA_shp=psEncCtrl.LF_MA_shp[k];
    LF_AR_shp=psEncCtrl.LF_AR_shp[k];
    Arrays.fill(AR1_shp,0);
    System.arraycopy(psEncCtrl.AR1,k * Silk_define.SHAPE_LPC_ORDER_MAX,AR1_shp,0,psEncCtrl.AR1.length - k * Silk_define.SHAPE_LPC_ORDER_MAX);
    Silk_LPC_analysis_filter_FLP.SKP_Silk_LPC_analysis_filter_FLP(st_res,AR1_shp,px,px_offset - psEnc.sCmn.shapingLPCOrder,psEnc.sCmn.subfr_length + psEnc.sCmn.shapingLPCOrder,psEnc.sCmn.shapingLPCOrder);
    pst_res=st_res;
    pst_res_offset=psEnc.sCmn.shapingLPCOrder;
    B[0]=psEncCtrl.GainsPre[k];
    B[1]=-psEncCtrl.GainsPre[k] * (psEncCtrl.HarmBoost[k] * HarmShapeGain + Silk_perceptual_parameters_FLP.INPUT_TILT + psEncCtrl.coding_quality * Silk_perceptual_parameters_FLP.HIGH_RATE_INPUT_TILT);
    pxw[pxw_offset + 0]=B[0] * pst_res[pst_res_offset + 0] + B[1] * P.sHarmHP;
    for (j=1; j < psEnc.sCmn.subfr_length; j++) {
      pxw[pxw_offset + j]=B[0] * pst_res[pst_res_offset + j] + B[1] * pst_res[pst_res_offset + j - 1];
    }
    P.sHarmHP=pst_res[pst_res_offset + psEnc.sCmn.subfr_length - 1];
    SKP_Silk_prefilt_FLP(P,pxw,pxw_offset,pxw,pxw_offset,HarmShapeFIR,Tilt,LF_MA_shp,LF_AR_shp,lag,psEnc.sCmn.subfr_length);
    px_offset+=psEnc.sCmn.subfr_length;
    pxw_offset+=psEnc.sCmn.subfr_length;
  }
  P.lagPrev=psEncCtrl.sCmn.pitchL[Silk_define.NB_SUBFR - 1];
}
