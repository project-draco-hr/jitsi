{
  index=notificationList.rowAtPoint(me.getPoint());
  noListener=true;
  if (index != -1) {
    NotificationsTableEntry tmpNTE=(NotificationsTableEntry)dataVector.elementAt(index);
    activate.setEnabled(!tmpNTE.getEnabled());
    desactivate.setEnabled(tmpNTE.getEnabled());
    if (tmpNTE.getProgram() && tmpNTE.getProgramFile().trim().length() > 0) {
      programCheckBox.setSelected(true);
      programCheckBox.setEnabled(true);
      programFileChooser.setEnabled(tmpNTE.getProgram());
      programFileTextField.setEnabled(tmpNTE.getProgram());
      programFileTextField.setText(tmpNTE.getProgramFile());
    }
 else {
      programCheckBox.setSelected(false);
      programFileChooser.setEnabled(false);
      programFileTextField.setEnabled(false);
      programFileTextField.setText(tmpNTE.getProgramFile());
    }
    if (tmpNTE.getSound() && tmpNTE.getSoundFile().trim().length() > 0) {
      playSoundCheckBox.setSelected(true);
      playSoundCheckBox.setEnabled(true);
      playSoundButton.setEnabled(true);
      soundFileChooser.setEnabled(true);
      soundFileTextField.setEnabled(true);
      soundFileTextField.setText(tmpNTE.getSoundFile());
    }
 else {
      playSoundCheckBox.setSelected(false);
      playSoundButton.setEnabled(false);
      soundFileChooser.setEnabled(false);
      soundFileTextField.setEnabled(false);
      soundFileTextField.setText(tmpNTE.getSoundFile());
    }
    popupCheckBox.setSelected(tmpNTE.getPopup());
    popupCheckBox.setEnabled(tmpNTE.getPopup());
    notificationList.setRowSelectionInterval(index,index);
    noListener=false;
    return;
  }
}
