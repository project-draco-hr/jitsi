{
  if (logger.isTraceEnabled())   logger.trace(chat.getParticipant() + " entered the " + state.name()+ " state.");
  String fromID=StringUtils.parseBareAddress(chat.getParticipant());
  List<ChatRoom> chatRooms=parentProvider.getOperationSet(OperationSetMultiUserChat.class).getCurrentlyJoinedChatRooms();
  boolean isPrivateMessagingAddress=false;
  for (  ChatRoom chatRoom : chatRooms) {
    if (chatRoom.getName().equals(fromID)) {
      isPrivateMessagingAddress=true;
      break;
    }
  }
  Contact sourceContact=opSetPersPresence.findContactByID((isPrivateMessagingAddress ? message.getFrom() : fromID));
  if (sourceContact == null) {
    sourceContact=opSetPersPresence.createVolatileContact(chat.getParticipant(),isPrivateMessagingAddress);
  }
  int evtCode=STATE_UNKNOWN;
  if (ChatState.composing.equals(state)) {
    evtCode=STATE_TYPING;
  }
 else   if (ChatState.paused.equals(state) || ChatState.active.equals(state)) {
    evtCode=STATE_PAUSED;
  }
 else   if (ChatState.inactive.equals(state) || ChatState.gone.equals(state)) {
    evtCode=STATE_STOPPED;
  }
  if (message.getError() != null)   fireTypingNotificationsDeliveryFailedEvent(sourceContact,evtCode);
 else   if (evtCode != STATE_UNKNOWN)   fireTypingNotificationsEvent(sourceContact,evtCode);
 else   logger.warn("Unknown typing state!");
}
