{
  JPanel callConfigPanel=new TransparentPanel(new BorderLayout());
  callConfigPanel.add(GeneralConfigPluginActivator.createConfigSectionComponent(Resources.getString("service.gui.CALL") + ":"),BorderLayout.WEST);
  TransparentPanel sipClientPortConfigPanel=new TransparentPanel();
  sipClientPortConfigPanel.setLayout(new BorderLayout(10,10));
  sipClientPortConfigPanel.setPreferredSize(new Dimension(250,72));
  callConfigPanel.add(sipClientPortConfigPanel);
  TransparentPanel labelPanel=new TransparentPanel(new GridLayout(0,1,2,2));
  TransparentPanel valuePanel=new TransparentPanel(new GridLayout(0,1,2,2));
  sipClientPortConfigPanel.add(labelPanel,BorderLayout.WEST);
  sipClientPortConfigPanel.add(valuePanel,BorderLayout.CENTER);
  labelPanel.add(new JLabel(Resources.getString("plugin.generalconfig.SIP_CLIENT_PORT")));
  labelPanel.add(new JLabel(Resources.getString("plugin.generalconfig.SIP_CLIENT_SECURE_PORT")));
  TransparentPanel emptyPanel=new TransparentPanel();
  emptyPanel.setMaximumSize(new Dimension(40,35));
  labelPanel.add(emptyPanel);
  final JTextField clientPortField=new JTextField(6);
  clientPortField.setText(String.valueOf(ConfigurationManager.getClientPort()));
  valuePanel.add(clientPortField);
  clientPortField.addFocusListener(new FocusListener(){
    private String oldValue=null;
    public void focusLost(    FocusEvent e){
      try {
        int port=Integer.valueOf(clientPortField.getText());
        if (port <= 0 || port > 65535)         throw new NumberFormatException("Not a port number");
        ConfigurationManager.setClientPort(port);
      }
 catch (      NumberFormatException ex) {
        String error=Resources.getString("plugin.generalconfig.ERROR_PORT_NUMBER");
        GeneralConfigPluginActivator.getUIService().getPopupDialog().showMessagePopupDialog(error,error,PopupDialog.ERROR_MESSAGE);
        clientPortField.setText(oldValue);
      }
    }
    public void focusGained(    FocusEvent e){
      oldValue=clientPortField.getText();
    }
  }
);
  final JTextField clientSecurePortField=new JTextField(6);
  clientSecurePortField.setText(String.valueOf(ConfigurationManager.getClientSecurePort()));
  valuePanel.add(clientSecurePortField);
  clientSecurePortField.addFocusListener(new FocusListener(){
    private String oldValue=null;
    public void focusLost(    FocusEvent e){
      try {
        int port=Integer.valueOf(clientSecurePortField.getText());
        if (port <= 0 || port > 65535)         throw new NumberFormatException("Not a port number");
        ConfigurationManager.setClientSecurePort(port);
      }
 catch (      NumberFormatException ex) {
        String error=Resources.getString("plugin.generalconfig.ERROR_PORT_NUMBER");
        GeneralConfigPluginActivator.getUIService().getPopupDialog().showMessagePopupDialog(error,error,PopupDialog.ERROR_MESSAGE);
        clientSecurePortField.setText(oldValue);
      }
    }
    public void focusGained(    FocusEvent e){
      oldValue=clientSecurePortField.getText();
    }
  }
);
  JLabel warnLabel=new JLabel("* " + Resources.getString("plugin.generalconfig.DEFAULT_LANGUAGE_RESTART_WARN"));
  warnLabel.setForeground(Color.GRAY);
  warnLabel.setFont(warnLabel.getFont().deriveFont(8));
  warnLabel.setBorder(BorderFactory.createEmptyBorder(0,0,8,0));
  valuePanel.add(warnLabel);
  return callConfigPanel;
}
