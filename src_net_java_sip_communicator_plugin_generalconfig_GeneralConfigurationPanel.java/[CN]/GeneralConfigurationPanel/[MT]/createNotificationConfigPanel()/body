{
  ServiceReference[] handlerRefs=null;
  BundleContext bc=GeneralConfigPluginActivator.bundleContext;
  try {
    handlerRefs=bc.getServiceReferences(PopupMessageHandler.class.getName(),null);
  }
 catch (  InvalidSyntaxException ex) {
    logger.warn("Error while retrieving service refs",ex);
  }
  if (handlerRefs == null)   return null;
  JPanel notifConfigPanel=GeneralConfigPluginActivator.createConfigSectionComponent(Resources.getString("plugin.notificationconfig.POPUP_NOTIF_HANDLER"));
  final JComboBox notifConfigComboBox=new JComboBox();
  String configuredHandler=(String)GeneralConfigPluginActivator.getConfigurationService().getProperty("systray.POPUP_HANDLER");
  for (  ServiceReference ref : handlerRefs) {
    PopupMessageHandler handler=(PopupMessageHandler)bc.getService(ref);
    notifConfigComboBox.addItem(handler);
    if (configuredHandler != null && configuredHandler.equals(handler.getClass().getName())) {
      notifConfigComboBox.setSelectedItem(handler);
    }
  }
  String auto="Auto";
  notifConfigComboBox.addItem(auto);
  if (configuredHandler == null) {
    notifConfigComboBox.setSelectedItem(auto);
  }
  notifConfigComboBox.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent evt){
      if (notifConfigComboBox.getSelectedItem() instanceof String) {
        ConfigurationManager.setPopupHandlerConfig(null);
        GeneralConfigPluginActivator.getSystrayService().selectBestPopupMessageHandler();
      }
 else {
        PopupMessageHandler handler=(PopupMessageHandler)notifConfigComboBox.getSelectedItem();
        ConfigurationManager.setPopupHandlerConfig(handler.getClass().getName());
        GeneralConfigPluginActivator.getSystrayService().setActivePopupMessageHandler(handler);
      }
    }
  }
);
  notifConfigPanel.add(notifConfigComboBox);
  return notifConfigPanel;
}
