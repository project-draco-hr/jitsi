{
  Format inputFormat=inputBuffer.getFormat();
  if ((inputFormat != null) && (inputFormat != this.inputFormat) && !inputFormat.equals(this.inputFormat)) {
    if (null == setInputFormat(inputFormat))     return BUFFER_PROCESSED_FAILED;
  }
  inputFormat=this.inputFormat;
  AudioFormat inputAudioFormat=(AudioFormat)inputFormat;
  int inputSampleRate=(int)inputAudioFormat.getSampleRate();
  if ((state != 0) && (sampleRate != inputSampleRate)) {
    Speex.speex_decoder_destroy(state);
    state=0;
    sampleRate=0;
    frameSize=0;
  }
  if (state == 0) {
    long mode=Speex.speex_lib_get_mode((inputSampleRate == 16000) ? Speex.SPEEX_MODEID_WB : (inputSampleRate == 32000) ? Speex.SPEEX_MODEID_UWB : Speex.SPEEX_MODEID_NB);
    if (mode == 0)     return BUFFER_PROCESSED_FAILED;
    state=Speex.speex_decoder_init(mode);
    if (state == 0)     return BUFFER_PROCESSED_FAILED;
    if (Speex.speex_decoder_ctl(state,Speex.SPEEX_SET_ENH,1) != 0)     return BUFFER_PROCESSED_FAILED;
    if (Speex.speex_decoder_ctl(state,Speex.SPEEX_SET_SAMPLING_RATE,inputSampleRate) != 0)     return BUFFER_PROCESSED_FAILED;
    int frameSize=Speex.speex_decoder_ctl(state,Speex.SPEEX_GET_FRAME_SIZE);
    if (frameSize < 0)     return BUFFER_PROCESSED_FAILED;
    sampleRate=inputSampleRate;
    this.frameSize=frameSize * 2;
    duration=(long)((frameSize * 1000 * 1000000) / sampleRate);
  }
  int inputLength=inputBuffer.getLength();
  if (inputLength > 0) {
    byte[] input=(byte[])inputBuffer.getData();
    int inputOffset=inputBuffer.getOffset();
    Speex.speex_bits_read_from(bits,input,inputOffset,inputLength);
    inputLength=0;
    inputBuffer.setLength(inputLength);
    inputBuffer.setOffset(inputOffset + inputLength);
  }
  int outputLength=this.frameSize;
  boolean inputBufferNotConsumed;
  if (outputLength > 0) {
    byte[] output=validateByteArraySize(outputBuffer,outputLength);
    if (0 == Speex.speex_decode_int(state,bits,output,0)) {
      outputBuffer.setDuration(duration);
      outputBuffer.setFormat(getOutputFormat());
      outputBuffer.setLength(outputLength);
      outputBuffer.setOffset(0);
      inputBufferNotConsumed=(Speex.speex_bits_remaining(bits) > 0);
    }
 else {
      outputBuffer.setLength(0);
      discardOutputBuffer(outputBuffer);
      inputBufferNotConsumed=false;
    }
  }
 else {
    outputBuffer.setLength(0);
    discardOutputBuffer(outputBuffer);
    inputBufferNotConsumed=false;
  }
  if ((inputLength < 1) && !inputBufferNotConsumed)   return BUFFER_PROCESSED_OK;
 else   return BUFFER_PROCESSED_OK | INPUT_BUFFER_NOT_CONSUMED;
}
