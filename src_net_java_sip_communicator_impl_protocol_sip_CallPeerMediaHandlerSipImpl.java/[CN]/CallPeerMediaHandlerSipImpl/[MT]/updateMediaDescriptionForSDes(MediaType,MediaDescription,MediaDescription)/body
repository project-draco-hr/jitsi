{
  AccountID accountID=getPeer().getProtocolProvider().getAccountID();
  if (!accountID.getAccountPropertyBoolean(ProtocolProviderFactory.SDES_ENABLED,false) || !accountID.getAccountPropertyBoolean(ProtocolProviderFactory.DEFAULT_ENCRYPTION,true)) {
    return false;
  }
  Map<MediaTypeSrtpControl,SrtpControl> srtpControls=getSrtpControls();
  MediaTypeSrtpControl key=new MediaTypeSrtpControl(mediaType,SrtpControlType.SDES);
  SrtpControl scontrol=srtpControls.get(key);
  if (scontrol == null) {
    scontrol=SipActivator.getMediaService().createSDesControl();
    srtpControls.put(key,scontrol);
  }
  SDesControl sdcontrol=(SDesControl)scontrol;
  String ciphers=accountID.getAccountPropertyString(ProtocolProviderFactory.SDES_CIPHER_SUITES);
  if (ciphers == null) {
    ciphers=SipActivator.getResources().getSettingsString(SDesControl.SDES_CIPHER_SUITES);
  }
  sdcontrol.setEnabledCiphers(Arrays.asList(ciphers.split(",")));
  if (remoteMd == null) {
    @SuppressWarnings("unchecked") Vector<Attribute> atts=localMd.getAttributes(true);
    for (    SrtpCryptoAttribute ca : sdcontrol.getInitiatorCryptoAttributes())     atts.add(SdpUtils.createAttribute("crypto",ca.encode()));
    return true;
  }
 else {
    SrtpCryptoAttribute localAttr=selectSdesCryptoSuite(false,sdcontrol,remoteMd);
    if (localAttr != null) {
      try {
        localMd.setAttribute("crypto",localAttr.encode());
        return true;
      }
 catch (      SdpException e) {
        logger.error("unable to add crypto to answer",e);
      }
    }
 else {
      sdcontrol.cleanup();
      srtpControls.remove(key);
      logger.warn("Received unsupported sdes crypto attribute.");
    }
    return false;
  }
}
