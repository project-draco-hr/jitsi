{
  AccountID accountID=getPeer().getProtocolProvider().getAccountID();
  if (!accountID.getAccountPropertyBoolean(ProtocolProviderFactory.DEFAULT_ENCRYPTION,true) || !accountID.isEncryptionProtocolEnabled(SrtpControlType.SDES)) {
    return false;
  }
  SrtpControls srtpControls=getSrtpControls();
  SDesControl sdesControl=(SDesControl)srtpControls.getOrCreate(mediaType,SrtpControlType.SDES);
  String ciphers=accountID.getAccountPropertyString(ProtocolProviderFactory.SDES_CIPHER_SUITES);
  if (ciphers == null) {
    ciphers=SipActivator.getResources().getSettingsString(SDesControl.SDES_CIPHER_SUITES);
  }
  sdesControl.setEnabledCiphers(Arrays.asList(ciphers.split(",")));
  if (remoteMd == null) {
    @SuppressWarnings("unchecked") Vector<Attribute> atts=localMd.getAttributes(true);
    for (    SrtpCryptoAttribute ca : sdesControl.getInitiatorCryptoAttributes()) {
      atts.add(SdpUtils.createAttribute("crypto",ca.encode()));
    }
    return true;
  }
 else {
    SrtpCryptoAttribute localAttr=selectSdesCryptoSuite(false,sdesControl,remoteMd);
    if (localAttr != null) {
      try {
        localMd.setAttribute("crypto",localAttr.encode());
        return true;
      }
 catch (      SdpException e) {
        logger.error("unable to add crypto to answer",e);
      }
    }
 else {
      sdesControl.cleanup();
      srtpControls.remove(mediaType,SrtpControlType.SDES);
      logger.warn("Received unsupported sdes crypto attribute.");
    }
    return false;
  }
}
