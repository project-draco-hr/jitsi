{
  MclSlickFixture.bundleContext=context;
  setName("MetaContactListServiceLick");
  Hashtable<String,String> slickServiceProperties=new Hashtable<String,String>();
  slickServiceProperties.put("service.pid",getName());
  logger.debug("Service  " + getClass().getName() + " [  STARTED ]");
  MockProvider provider=new MockProvider("SlickMockUser");
  fillMockContactList(provider);
  MclSlickFixture.mockPrServiceRegistration=registerMockProviderService(provider);
  MclSlickFixture.mockProvider=provider;
  MclSlickFixture.mockPresOpSet=(MockPersistentPresenceOperationSet)MclSlickFixture.mockProvider.getOperationSet(OperationSetPersistentPresence.class);
  addTestSuite(TestMetaContactList.class);
  addTestSuite(TestMetaContact.class);
  addTestSuite(TestMetaContactGroup.class);
  addTest(TestSupportForMultipleProviders.suite());
  addTest(TestMetaContactListPersistence.suite());
  context.registerService(getClass().getName(),this,slickServiceProperties);
  logger.debug("Service  " + getClass().getName() + " [REGISTERED]");
}
