{
  MockPersistentPresenceOperationSet mockOpSet=(MockPersistentPresenceOperationSet)provider.getSupportedOperationSets().get(OperationSetPersistentPresence.class.getName());
  MockContactGroup root=(MockContactGroup)mockOpSet.getServerStoredContactListRoot();
  root.addContact(new MockContact("Ivan Ivanov",provider));
  root.addContact(new MockContact("Martin Dupont",provider));
  root.addContact(new MockContact("Joe Bloggs",provider));
  MockContact someOfflineContact=new MockContact("I am offline",provider);
  someOfflineContact.setPresenceStatus(MockStatusEnum.MOCK_STATUS_00);
  root.addContact(someOfflineContact);
  mockContactToRename=new MockContact("Jane Doe",provider);
  root.addContact(mockContactToRename);
  mockContactToReorder=new MockContact("ZI'llChangeMyStatus",provider);
  mockContactToReorder.setPresenceStatus(MockStatusEnum.MOCK_STATUS_00);
  root.addContact(mockContactToReorder);
  topLevelMockGroup=new MockContactGroup(topLevelGroupName,provider);
  subLevelContact=new MockContact(subLevelContactName,provider);
  topLevelMockGroup.addContact(subLevelContact);
  topLevelMockGroup.addContact(new MockContact("Pencho",provider));
  topLevelMockGroup.addContact(new MockContact("Toto",provider));
  subLevelGroup=new MockContactGroup("SubSubGroup",provider);
  subsubContact=new MockContact("SContact1",provider);
  subLevelGroup.addContact(subsubContact);
  subLevelGroup.addContact(new MockContact("SContact2",provider));
  subLevelGroup.addContact(new MockContact("SContact3",provider));
  subLevelGroup.addContact(new MockContact("SContact4",provider));
  topLevelMockGroup.addSubgroup(subLevelGroup);
  root.addSubgroup(topLevelMockGroup);
}
