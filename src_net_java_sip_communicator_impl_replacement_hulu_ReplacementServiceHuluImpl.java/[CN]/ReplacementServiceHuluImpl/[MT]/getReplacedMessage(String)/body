{
  final Pattern p=Pattern.compile(HULU_PATTERN,Pattern.CASE_INSENSITIVE | Pattern.DOTALL);
  Matcher m=p.matcher(chatString);
  int count=0, startPos=0;
  StringBuffer msgBuff=new StringBuffer();
  while (m.find()) {
    count++;
    msgBuff.append(chatString.substring(startPos,m.start()));
    startPos=m.end();
    if (count % 2 == 0) {
      try {
        String url="http://oohembed.com/oohembed/?url=" + m.group(0);
        URL sourceURL=new URL(url);
        URLConnection conn=sourceURL.openConnection();
        BufferedReader in=new BufferedReader(new InputStreamReader(conn.getInputStream()));
        String inputLine, holder="";
        while ((inputLine=in.readLine()) != null)         holder=inputLine;
        in.close();
        JSONObject wrapper=new JSONObject(holder);
        String thumbUrl=wrapper.getString("thumbnail_url");
        if (thumbUrl != null) {
          msgBuff.append("<IMG HEIGHT=\"90\" WIDTH=\"120\" SRC=\"");
          msgBuff.append(thumbUrl);
          msgBuff.append("\"></IMG>");
        }
 else {
          startPos=0;
          msgBuff=new StringBuffer();
        }
      }
 catch (      Exception e) {
        startPos=0;
        msgBuff=new StringBuffer();
        e.printStackTrace();
      }
    }
 else {
      msgBuff.append(chatString.substring(m.start(),m.end()));
    }
  }
  msgBuff.append(chatString.substring(startPos));
  if (!msgBuff.toString().equals(chatString))   return msgBuff.toString();
  return chatString;
}
