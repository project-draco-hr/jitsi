{
  long timeCallReceived=System.currentTimeMillis();
  Call call=callEvent.getSourceCall();
  while (call.getCallState() == CallState.CALL_INITIALIZATION) {
    if (System.currentTimeMillis() < timeCallReceived + getWaitTime()) {
      try {
        Thread.sleep(200);
      }
 catch (      InterruptedException exc) {
        logger.error("mailbox sleep was interrupted:\n" + exc,exc);
        return;
      }
    }
  }
  if (call.getCallState() != CallState.CALL_INITIALIZATION) {
    logger.error("Someone else took care of this call. " + "Bailing out.");
    return;
  }
  logger.info("Call waited long enough, picking up the phone");
  MediaService mediaService=MailboxActivator.getMediaService();
  URL mediaURL=null;
  try {
    mediaURL=getOutgoingMessageFileLocation().toURI().toURL();
    mediaService.setCallDataSource(call,mediaURL);
  }
 catch (  Exception exc) {
    logger.error("Failed to set a call specific datasource.",exc);
    return;
  }
  File directory=getIncomingMessageDirectory();
  File inFile=new File(directory.getAbsolutePath() + "/incoming_messsage" + System.currentTimeMillis()+ ".wav");
  try {
    URL incomingURL=inFile.toURI().toURL();
    mediaService.setCallDataSink(call,incomingURL);
  }
 catch (  Exception exc) {
    logger.error("Failed to set a mailbox specific data sink.",exc);
    mediaService.unsetCallDataSource(call);
    return;
  }
  answerCall(call);
  waitForCallEnd(call);
  if (call.getCallState() != CallState.CALL_ENDED)   hangupCall(call);
}
