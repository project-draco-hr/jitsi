{
  GeolocationPacketExtension result=new GeolocationPacketExtension();
  logger.trace("Trying to map XML Geolocation Extension");
  boolean done=false;
  while (!done) {
    try {
      int eventType=parser.next();
      if (eventType == XmlPullParser.START_TAG) {
        if (parser.getName().equals(GeolocationPacketExtension.ALT)) {
          result.setAlt(Float.parseFloat(parser.nextText()));
        }
        if (parser.getName().equals(GeolocationPacketExtension.AREA)) {
          result.setArea(parser.nextText());
        }
        if (parser.getName().equals(GeolocationPacketExtension.BEARING)) {
          result.setBearing(Float.parseFloat(parser.nextText()));
        }
        if (parser.getName().equals(GeolocationPacketExtension.BUILDING)) {
          result.setBuilding(parser.nextText());
        }
        if (parser.getName().equals(GeolocationPacketExtension.COUNTRY)) {
          result.setCountry(parser.nextText());
        }
        if (parser.getName().equals(GeolocationPacketExtension.DATUM)) {
          result.setDatum(parser.nextText());
        }
        if (parser.getName().equals(GeolocationPacketExtension.DESCRIPTION)) {
          result.setDescription(parser.nextText());
        }
        if (parser.getName().equals(GeolocationPacketExtension.ERROR)) {
          result.setError(Float.parseFloat(parser.nextText()));
        }
        if (parser.getName().equals(GeolocationPacketExtension.FLOOR)) {
          result.setFloor(parser.nextText());
        }
        if (parser.getName().equals(GeolocationPacketExtension.LAT)) {
          result.setLat(Float.parseFloat(parser.nextText()));
        }
        if (parser.getName().equals(GeolocationPacketExtension.LOCALITY)) {
          result.setLocality(parser.nextText());
        }
        if (parser.getName().equals(GeolocationPacketExtension.LON)) {
          result.setLon(Float.parseFloat(parser.nextText()));
        }
        if (parser.getName().equals(GeolocationPacketExtension.POSTALCODE)) {
          result.setPostalCode(parser.nextText());
        }
        if (parser.getName().equals(GeolocationPacketExtension.REGION)) {
          result.setRegion(parser.nextText());
        }
        if (parser.getName().equals(GeolocationPacketExtension.ROOM)) {
          result.setRoom(parser.nextText());
        }
        if (parser.getName().equals(GeolocationPacketExtension.STREET)) {
          result.setStreet(parser.nextText());
        }
        if (parser.getName().equals(GeolocationPacketExtension.TEXT)) {
          result.setText(parser.nextText());
        }
        if (parser.getName().equals(GeolocationPacketExtension.TIMESTAMP)) {
          result.setText(parser.nextText());
        }
      }
 else       if (eventType == XmlPullParser.END_TAG) {
        if (parser.getName().equals(GeolocationPacketExtensionProvider.ELEMENT_NAME)) {
          done=true;
          logger.trace("Parsing finish");
        }
      }
    }
 catch (    NumberFormatException ex) {
      ex.printStackTrace();
    }
  }
  return result;
}
