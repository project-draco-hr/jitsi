{
  int row=notificationList.getSelectedRow();
  if (e.getSource() == restoreButton) {
    notificationList.clear();
    NotificationConfigurationActivator.getNotificationService().restoreDefaults();
  }
 else   if (e.getSource() == soundFileChooser) {
    if (row < 0)     return;
    NotificationEntry entry=notificationList.getNotificationEntry(row);
    File file=fileChooserSound.getFileFromDialog();
    if (file != null) {
      try {
        if (logger.isDebugEnabled())         logger.debug("Opening: " + file.toURI().toURL().toExternalForm());
        entry.setSoundFile(file.toURI().toURL().toExternalForm());
        soundFileTextField.setText(file.toURI().toURL().toExternalForm());
      }
 catch (      MalformedURLException ex) {
        logger.error("Error file path parsing",ex);
      }
    }
 else {
      if (logger.isDebugEnabled())       logger.debug("Open command cancelled by user.");
    }
  }
 else   if (e.getSource() == programFileChooser) {
    if (row < 0)     return;
    NotificationEntry entry=notificationList.getNotificationEntry(row);
    File file=fileChooserProgram.getFileFromDialog();
    if (file != null) {
      if (logger.isDebugEnabled())       logger.debug("Opening: " + file.getAbsolutePath());
      entry.setProgramFile(file.getAbsolutePath());
      programFileTextField.setText(file.getAbsolutePath());
    }
 else {
      if (logger.isDebugEnabled())       logger.debug("Open command cancelled by user.");
    }
  }
 else   if (e.getSource() == playSoundButton) {
    String soundFile=soundFileTextField.getText();
    if (logger.isDebugEnabled())     logger.debug("****" + soundFile + "****"+ soundFile.length());
    if (soundFile.length() != 0) {
      AudioNotifierService audioNotifServ=NotificationConfigurationActivator.getAudioNotifierService();
      SCAudioClip sound=audioNotifServ.createAudio(soundFile);
      sound.play();
    }
 else {
      if (logger.isDebugEnabled())       logger.debug("No file specified");
    }
  }
}
