{
  StringBuffer buf=new StringBuffer();
  buf.append(toString() + "\n");
  for (Iterator iterator=questions.iterator(); iterator.hasNext(); ) {
    buf.append("    ques:" + iterator.next() + "\n");
  }
  int count=0;
  for (Iterator iterator=answers.iterator(); iterator.hasNext(); count++) {
    if (count < numAnswers) {
      buf.append("    answ:");
    }
 else {
      if (count < numAnswers + numAuthorities) {
        buf.append("    auth:");
      }
 else {
        buf.append("    addi:");
      }
    }
    buf.append(iterator.next() + "\n");
  }
  if (dump) {
    for (int off=0, len=packet.getLength(); off < len; off+=32) {
      int n=Math.min(32,len - off);
      if (off < 10) {
        buf.append(' ');
      }
      if (off < 100) {
        buf.append(' ');
      }
      buf.append(off);
      buf.append(':');
      for (int i=0; i < n; i++) {
        if ((i % 8) == 0) {
          buf.append(' ');
        }
        buf.append(Integer.toHexString((data[off + i] & 0xF0) >> 4));
        buf.append(Integer.toHexString((data[off + i] & 0x0F) >> 0));
      }
      buf.append("\n");
      buf.append("    ");
      for (int i=0; i < n; i++) {
        if ((i % 8) == 0) {
          buf.append(' ');
        }
        buf.append(' ');
        int ch=data[off + i] & 0xFF;
        buf.append(((ch > ' ') && (ch < 127)) ? (char)ch : '.');
      }
      buf.append("\n");
      if (off + 32 >= 256) {
        buf.append("....\n");
        break;
      }
    }
  }
  return buf.toString();
}
