{
  final JComboBox comboBox=new JComboBox();
  comboBox.setEditable(false);
  JLabel label=new JLabel(getLabelText(type));
  label.setDisplayedMnemonic(getDisplayedMnemonic(type));
  label.setLabelFor(comboBox);
  final JComponent preview;
  ActionListener comboBoxListener=null;
  if (type == DeviceConfigurationComboBoxModel.VIDEO) {
    JLabel noPreview=new JLabel(MediaActivator.getResources().getI18NString("MediaConfigurationPanel_noPreview"));
    noPreview.setHorizontalAlignment(SwingConstants.CENTER);
    noPreview.setVerticalAlignment(SwingConstants.CENTER);
    preview=createVideoContainer(noPreview);
    Dimension previewSize=new Dimension(150,150);
    preview.setMaximumSize(previewSize);
    preview.setMinimumSize(previewSize);
    preview.setPreferredSize(previewSize);
    comboBoxListener=new ActionListener(){
      public void actionPerformed(      ActionEvent event){
        Object selection=comboBox.getSelectedItem();
        CaptureDeviceInfo device=null;
        if (selection instanceof DeviceConfigurationComboBoxModel.CaptureDevice) {
          device=((DeviceConfigurationComboBoxModel.CaptureDevice)selection).info;
        }
        createPreview(device,preview);
      }
    }
;
    comboBox.addActionListener(comboBoxListener);
  }
 else   preview=null;
  Container deviceContainer=new JPanel(new GridBagLayout());
  GridBagConstraints deviceConstraints=new GridBagConstraints();
  deviceConstraints.anchor=GridBagConstraints.NORTHWEST;
  deviceConstraints.gridx=0;
  deviceConstraints.gridy=0;
  deviceConstraints.weightx=0;
  deviceContainer.add(label,deviceConstraints);
  deviceConstraints.gridx=1;
  deviceConstraints.weightx=1;
  deviceContainer.add(comboBox,deviceConstraints);
  if (preview != null) {
    deviceConstraints.gridx=2;
    deviceConstraints.weightx=0;
    deviceContainer.add(preview,deviceConstraints);
  }
  comboBox.setModel(new DeviceConfigurationComboBoxModel(mediaService.getDeviceConfiguration(),type));
  if (comboBoxListener != null)   comboBoxListener.actionPerformed(null);
  Container container=new JPanel(new GridBagLayout());
  GridBagConstraints constraints=new GridBagConstraints();
  constraints.fill=GridBagConstraints.HORIZONTAL;
  constraints.gridx=0;
  constraints.gridy=0;
  constraints.weightx=1;
  constraints.weighty=0;
  container.add(deviceContainer,constraints);
  constraints.fill=GridBagConstraints.BOTH;
  constraints.gridy=1;
  constraints.weighty=1;
  container.add(createEncodingControls(type),constraints);
  return container;
}
