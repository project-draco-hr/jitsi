{
  if (!(to instanceof ContactFacebookImpl))   throw new IllegalArgumentException("The specified contact is not a Facebook contact." + to);
  Thread sender=new Thread(new Runnable(){
    public void run(){
      MessageDeliveryFailedEvent errorEvent=null;
      try {
        errorEvent=OperationSetSmsMessagingFacebookImpl.this.parentProvider.getAdapter().postMessage(message,to);
        if (errorEvent == null) {
          fireMessageDelivered(message,to);
          return;
        }
        if (errorEvent.getErrorCode() == FacebookErrorCode.kError_Async_NotLoggedIn || errorEvent.getErrorCode() == FacebookErrorCode.kError_Async_LoginChanged) {
          try {
            parentProvider.unregister(RegistrationStateChangeEvent.REASON_MULTIPLE_LOGINS);
          }
 catch (          OperationFailedException e1) {
            logger.error("Unable to unregister the protocol provider: " + this + " due to the following exception: "+ e1);
          }
          fireMessageDeliveryFailed(message,to,errorEvent);
          return;
        }
      }
 catch (      JSONException e) {
        logger.warn(e.getMessage());
      }
      try {
        Thread.sleep(1000);
        errorEvent=OperationSetSmsMessagingFacebookImpl.this.parentProvider.getAdapter().postMessage(message,to);
        if (errorEvent == null) {
          fireMessageDelivered(message,to);
          return;
        }
        if (errorEvent.getErrorCode() == FacebookErrorCode.kError_Async_NotLoggedIn || errorEvent.getErrorCode() == FacebookErrorCode.kError_Async_LoginChanged) {
          try {
            parentProvider.unregister(RegistrationStateChangeEvent.REASON_MULTIPLE_LOGINS);
          }
 catch (          OperationFailedException e1) {
            logger.error("Unable to unregister the protocol provider: " + this + " due to the following exception: "+ e1);
          }
        }
      }
 catch (      JSONException e) {
        logger.warn(e.getMessage());
      }
catch (      InterruptedException e) {
        logger.warn(e.getMessage());
      }
      fireMessageDeliveryFailed(message,to,errorEvent);
    }
  }
);
  sender.start();
}
