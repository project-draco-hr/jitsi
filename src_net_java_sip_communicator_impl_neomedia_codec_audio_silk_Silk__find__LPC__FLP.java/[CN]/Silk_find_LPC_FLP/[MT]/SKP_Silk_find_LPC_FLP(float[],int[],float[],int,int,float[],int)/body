{
  int k;
  float[] a=new float[Silk_define.MAX_LPC_ORDER];
  double res_nrg, res_nrg_2nd, res_nrg_interp;
  float a_tmp[]=new float[Silk_define.MAX_LPC_ORDER], NLSF0[]=new float[Silk_define.MAX_LPC_ORDER];
  float LPC_res[]=new float[(Silk_define.MAX_FRAME_LENGTH + Silk_define.NB_SUBFR * Silk_define.MAX_LPC_ORDER) / 2];
  interpIndex[0]=4;
  res_nrg=Silk_burg_modified_FLP.SKP_Silk_burg_modified_FLP(a,x,0,subfr_length,Silk_define.NB_SUBFR,Silk_define_FLP.FIND_LPC_COND_FAC,LPC_order);
  if (useInterpNLSFs == 1) {
    res_nrg-=Silk_burg_modified_FLP.SKP_Silk_burg_modified_FLP(a_tmp,x,(Silk_define.NB_SUBFR / 2) * subfr_length,subfr_length,Silk_define.NB_SUBFR / 2,Silk_define_FLP.FIND_LPC_COND_FAC,LPC_order);
    Silk_wrappers_FLP.SKP_Silk_A2NLSF_FLP(NLSF,a_tmp,LPC_order);
    res_nrg_2nd=Float.MAX_VALUE;
    for (k=3; k >= 0; k--) {
      Silk_wrappers_FLP.SKP_Silk_interpolate_wrapper_FLP(NLSF0,prev_NLSFq,NLSF,0.25f * k,LPC_order);
      Silk_wrappers_FLP.SKP_Silk_NLSF2A_stable_FLP(a_tmp,NLSF0,LPC_order);
      Silk_LPC_analysis_filter_FLP.SKP_Silk_LPC_analysis_filter_FLP(LPC_res,a_tmp,x,0,2 * subfr_length,LPC_order);
      res_nrg_interp=Silk_energy_FLP.SKP_Silk_energy_FLP(LPC_res,LPC_order,subfr_length - LPC_order) + Silk_energy_FLP.SKP_Silk_energy_FLP(LPC_res,LPC_order + subfr_length,subfr_length - LPC_order);
      if (res_nrg_interp < res_nrg) {
        res_nrg=res_nrg_interp;
        interpIndex[0]=k;
      }
 else       if (res_nrg_interp > res_nrg_2nd) {
        break;
      }
      res_nrg_2nd=res_nrg_interp;
    }
  }
  if (interpIndex[0] == 4) {
    Silk_wrappers_FLP.SKP_Silk_A2NLSF_FLP(NLSF,a,LPC_order);
  }
}
