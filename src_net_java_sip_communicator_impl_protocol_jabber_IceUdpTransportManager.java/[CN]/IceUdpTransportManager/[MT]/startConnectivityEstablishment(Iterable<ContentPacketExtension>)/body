{
  Map<String,IceUdpTransportPacketExtension> map=new LinkedHashMap<String,IceUdpTransportPacketExtension>();
  for (  ContentPacketExtension content : remote) {
    IceUdpTransportPacketExtension transport=content.getFirstChildOfType(IceUdpTransportPacketExtension.class);
    RtpDescriptionPacketExtension description=content.getFirstChildOfType(RtpDescriptionPacketExtension.class);
    if ((description == null) && (cpeList != null)) {
      ContentPacketExtension localContent=findContentByName(cpeList,content.getName());
      if (localContent != null) {
        description=localContent.getFirstChildOfType(RtpDescriptionPacketExtension.class);
      }
    }
    if (description != null) {
      String media=description.getMedia();
      map.put(media,transport);
    }
  }
  if (getCallPeer().isJitsiVideobridge()) {
    sendTransportInfoToJitsiVideobridge(map);
    return false;
  }
 else {
    return startConnectivityEstablishment(map);
  }
}
