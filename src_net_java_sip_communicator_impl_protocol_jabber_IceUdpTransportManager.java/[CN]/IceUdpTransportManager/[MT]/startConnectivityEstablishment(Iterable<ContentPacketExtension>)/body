{
  if (IceProcessingState.RUNNING.equals(iceAgent.getState()))   return false;
  int generation=iceAgent.getGeneration();
  boolean startConnectivityEstablishment=false;
  for (  ContentPacketExtension content : remote) {
    IceUdpTransportPacketExtension transport=content.getFirstChildOfType(IceUdpTransportPacketExtension.class);
    String ufrag=transport.getUfrag();
    if (ufrag != null)     iceAgent.setRemoteUfrag(ufrag);
    String password=transport.getPassword();
    if (password != null)     iceAgent.setRemotePassword(password);
    List<CandidatePacketExtension> candidates=transport.getChildExtensionsOfType(CandidatePacketExtension.class);
    RtpDescriptionPacketExtension description=content.getFirstChildOfType(RtpDescriptionPacketExtension.class);
    if ((description == null) && (cpeList != null)) {
      ContentPacketExtension localContent=findContentByName(cpeList,content.getName());
      if (localContent != null) {
        description=localContent.getFirstChildOfType(RtpDescriptionPacketExtension.class);
      }
    }
    if (description == null)     continue;
    IceMediaStream stream=iceAgent.getStream(description.getMedia());
    for (    CandidatePacketExtension candidate : candidates) {
      if (candidate.getGeneration() != generation)       continue;
      Component component=stream.getComponent(candidate.getComponent());
      component.addRemoteCandidate(new RemoteCandidate(new TransportAddress(candidate.getIP(),candidate.getPort(),Transport.parse(candidate.getProtocol())),component,org.ice4j.ice.CandidateType.parse(candidate.getType().toString()),Integer.toString(candidate.getFoundation()),candidate.getPriority()));
      startConnectivityEstablishment=true;
    }
  }
  if (startConnectivityEstablishment) {
    for (    IceMediaStream stream : iceAgent.getStreams()) {
      for (      Component component : stream.getComponents()) {
        if (component.getRemoteCandidateCount() < 1) {
          startConnectivityEstablishment=false;
          break;
        }
      }
      if (!startConnectivityEstablishment)       break;
    }
    if (startConnectivityEstablishment) {
      iceAgent.startConnectivityEstablishment();
      return true;
    }
  }
  return false;
}
