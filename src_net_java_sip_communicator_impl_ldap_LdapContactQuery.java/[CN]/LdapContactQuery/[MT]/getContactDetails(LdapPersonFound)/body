{
  List<ContactDetail> ret=new LinkedList<ContactDetail>();
  Set<String> mailAddresses=person.getMail();
  Set<String> mobilePhones=person.getMobilePhone();
  Set<String> homePhones=person.getHomePhone();
  Set<String> workPhones=person.getWorkPhone();
  ContactDetail detail;
  PhoneNumberI18nService phoneNumberI18nService=LdapActivator.getPhoneNumberI18nService();
  for (  String mail : mailAddresses) {
    detail=new ContactDetail(mail,ContactDetail.Category.Email);
    detail.addSupportedOpSet(OperationSetPersistentPresence.class);
    ret.add(detail);
  }
  for (  String homePhone : homePhones) {
    homePhone=phoneNumberI18nService.normalize(homePhone);
    detail=new ContactDetail(homePhone,ContactDetail.Category.Phone,new ContactDetail.SubCategory[]{ContactDetail.SubCategory.Home});
    detail.addSupportedOpSet(OperationSetBasicTelephony.class);
    detail.addSupportedOpSet(OperationSetPersistentPresence.class);
    ret.add(detail);
  }
  for (  String workPhone : workPhones) {
    workPhone=phoneNumberI18nService.normalize(workPhone);
    detail=new ContactDetail(workPhone,ContactDetail.Category.Phone,new ContactDetail.SubCategory[]{ContactDetail.SubCategory.Work});
    detail.addSupportedOpSet(OperationSetBasicTelephony.class);
    detail.addSupportedOpSet(OperationSetPersistentPresence.class);
    ret.add(detail);
  }
  for (  String mobilePhone : mobilePhones) {
    mobilePhone=phoneNumberI18nService.normalize(mobilePhone);
    detail=new ContactDetail(mobilePhone,ContactDetail.Category.Phone,new ContactDetail.SubCategory[]{ContactDetail.SubCategory.Mobile});
    detail.addSupportedOpSet(OperationSetBasicTelephony.class);
    detail.addSupportedOpSet(OperationSetPersistentPresence.class);
    ret.add(detail);
  }
  return ret;
}
