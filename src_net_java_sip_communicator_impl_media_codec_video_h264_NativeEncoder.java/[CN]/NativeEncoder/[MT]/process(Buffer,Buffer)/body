{
  if (isEOM(inBuffer)) {
    propagateEOM(outBuffer);
    reset();
    return BUFFER_PROCESSED_OK;
  }
  if (inBuffer.isDiscard()) {
    outBuffer.setDiscard(true);
    reset();
    return BUFFER_PROCESSED_OK;
  }
  Format inFormat=inBuffer.getFormat();
  if (inFormat != inputFormat && !(inFormat.matches(inputFormat))) {
    setInputFormat(inFormat);
  }
  if (inBuffer.getLength() < 10) {
    outBuffer.setDiscard(true);
    reset();
    return BUFFER_PROCESSED_OK;
  }
synchronized (this) {
    rawFrameBuffer.write(0,(byte[])inBuffer.getData(),inBuffer.getOffset(),encFrameLen);
    if (framesSinceLastIFrame >= IFRAME_INTERVAL) {
      avpicture.key_frame=1;
      framesSinceLastIFrame=0;
    }
 else {
      framesSinceLastIFrame++;
      avpicture.key_frame=0;
    }
    int encLen=AVCODEC.avcodec_encode_video(avcontext,encFrameBuffer,encFrameLen,avpicture);
    byte[] r=encFrameBuffer.getByteArray(0,encLen);
    outBuffer.setData(r);
    outBuffer.setLength(r.length);
    outBuffer.setOffset(0);
    return BUFFER_PROCESSED_OK;
  }
}
