{
  int command=packet.getCommand();
  if (command == AbstractAuthCommand.CMD_AUTH_REPLY_RECV) {
    logger.trace("Received Authorization Replay!");
    AuthReplyCmd cmd=new AuthReplyCmd(packet);
    Contact srcContact=getContact(cmd.getSender());
    AuthorizationResponseCode authResponseCode=null;
    if (cmd.isAccepted())     authResponseCode=AuthorizationResponse.ACCEPT;
 else     authResponseCode=AuthorizationResponse.REJECT;
    AuthorizationResponse authResponse=new AuthorizationResponse(authResponseCode,cmd.getReason());
    authorizationHandler.processAuthorizationResponse(authResponse,srcContact);
    return cmd;
  }
 else   if (command == AbstractAuthCommand.CMD_AUTH_REQUEST_RECV) {
    logger.trace("Received Authorization Request!");
    RequestAuthCmd cmd=new RequestAuthCmd(packet);
    AuthorizationRequest authRequest=new AuthorizationRequest();
    authRequest.setReason(cmd.getReason());
    Contact srcContact=getContact(cmd.getSender());
    AuthorizationResponse authResponse=authorizationHandler.processAuthorisationRequest(authRequest,srcContact);
    if (authResponse.getResponseCode() == AuthorizationResponse.ACCEPT) {
      aimConnection.getInfoService().sendSnac(new AuthReplyCmd(String.valueOf(icqProvider.getAccountID().getAccountUserID()),authResponse.getReason(),true));
    }
 else     if (authResponse.getResponseCode() == AuthorizationResponse.REJECT) {
      aimConnection.getInfoService().sendSnac(new AuthReplyCmd(String.valueOf(icqProvider.getAccountID().getAccountUserID()),authResponse.getReason(),false));
    }
    return cmd;
  }
  return super.genSnacCommand(packet);
}
