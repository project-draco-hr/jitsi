{
  int inputLength=inputBuffer.getLength();
  byte[] input=(byte[])inputBuffer.getData();
  int inputOffset=inputBuffer.getOffset();
  if ((prevInputLength != 0) || (inputLength < this.inputLength)) {
    int bytesToCopy=this.inputLength - prevInputLength;
    if (bytesToCopy > inputLength)     bytesToCopy=inputLength;
    System.arraycopy(input,inputOffset,prevInput,prevInputLength,bytesToCopy);
    prevInputLength+=bytesToCopy;
    inputBuffer.setLength(inputLength - bytesToCopy);
    inputBuffer.setOffset(inputOffset + bytesToCopy);
    inputLength=prevInputLength;
    input=prevInput;
    inputOffset=0;
  }
 else {
    inputBuffer.setLength(inputLength - this.inputLength);
    inputBuffer.setOffset(inputOffset + this.inputLength);
  }
  int ret;
  if (inputLength >= this.inputLength) {
    prevInputLength=0;
    int outputOffset=0;
    byte[] output=validateByteArraySize(outputBuffer,outputOffset + outputLength);
    enc.encode(output,outputOffset,input,inputOffset);
    updateOutput(outputBuffer,getOutputFormat(),outputLength,outputOffset);
    outputBuffer.setDuration(duration);
    ret=BUFFER_PROCESSED_OK;
  }
 else   ret=OUTPUT_BUFFER_NOT_FILLED;
  if (inputBuffer.getLength() > 0)   ret|=INPUT_BUFFER_NOT_CONSUMED;
  return ret;
}
