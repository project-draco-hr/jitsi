{
  JComponent preview=null;
  if (type == DeviceConfigurationComboBoxModel.AUDIO) {
    AudioSystem audioSystem=null;
    if (NeomediaActivator.getConfigurationService().getBoolean(MediaServiceImpl.DISABLE_SET_AUDIO_SYSTEM_PNAME,false)) {
      audioSystem=mediaService.getDeviceConfiguration().getAudioSystem();
    }
 else {
      Object selectedItem=comboBox.getSelectedItem();
      if (selectedItem instanceof AudioSystem)       audioSystem=(AudioSystem)selectedItem;
    }
    if ((audioSystem != null) && !NoneAudioSystem.LOCATOR_PROTOCOL.equalsIgnoreCase(audioSystem.getLocatorProtocol())) {
      preview=new TransparentPanel(new GridBagLayout());
      createAudioSystemControls(audioSystem,preview);
    }
 else {
      AudioSystem[] audioSystems=AudioSystem.getAudioSystems();
      if ((audioSystems != null) && (audioSystems.length != 1)) {
        AudioSystem[] availableAudioSystems=mediaService.getDeviceConfiguration().getAvailableAudioSystems();
        if ((availableAudioSystems != null) && (availableAudioSystems.length == 1)) {
          String noAvailableAudioDevice=NeomediaActivator.getResources().getI18NString("impl.media.configform.NO_AVAILABLE_AUDIO_DEVICE");
          preview=new TransparentPanel(new GridBagLayout());
          preview.add(new JLabel(noAvailableAudioDevice));
        }
      }
    }
  }
 else   if (type == DeviceConfigurationComboBoxModel.VIDEO) {
    JLabel noPreview=new JLabel(NeomediaActivator.getResources().getI18NString("impl.media.configform.NO_PREVIEW"));
    noPreview.setHorizontalAlignment(SwingConstants.CENTER);
    noPreview.setVerticalAlignment(SwingConstants.CENTER);
    preview=createVideoContainer(noPreview);
    preview.setPreferredSize(prefSize);
    Object selectedItem=comboBox.getSelectedItem();
    CaptureDeviceInfo device=null;
    if (selectedItem instanceof DeviceConfigurationComboBoxModel.CaptureDevice)     device=((DeviceConfigurationComboBoxModel.CaptureDevice)selectedItem).info;
    Exception exception;
    try {
      createVideoPreview(device,preview);
      exception=null;
    }
 catch (    IOException ex) {
      exception=ex;
    }
catch (    MediaException ex) {
      exception=ex;
    }
    if (exception != null) {
      logger.error("Failed to create preview for device " + device,exception);
      device=null;
    }
  }
  return preview;
}
