{
  final JComponent preview;
  JLabel noPreview=new JLabel(GuiActivator.getResources().getI18NString("impl.media.configform.NO_PREVIEW"));
  noPreview.setHorizontalAlignment(SwingConstants.CENTER);
  noPreview.setVerticalAlignment(SwingConstants.CENTER);
  preview=createVideoContainer(noPreview);
  preview.setPreferredSize(new Dimension(WIDTH,280));
  preview.setMaximumSize(new Dimension(WIDTH,280));
  final ActionListener comboBoxListener=new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      MediaDevice device=(MediaDevice)comboBox.getSelectedItem();
      if ((device != null) && device.equals(videoDeviceInPreview))       return;
      Exception exception;
      try {
        createPreview(device,preview);
        exception=null;
      }
 catch (      IOException ex) {
        exception=ex;
      }
catch (      MediaException ex) {
        exception=ex;
      }
      if (exception != null) {
        logger.error("Failed to create preview for device " + device,exception);
        device=null;
      }
      videoDeviceInPreview=device;
    }
  }
;
  comboBox.addActionListener(comboBoxListener);
  comboBox.addHierarchyListener(new HierarchyListener(){
    public void hierarchyChanged(    HierarchyEvent event){
      if (((event.getChangeFlags() & HierarchyEvent.DISPLAYABILITY_CHANGED) != 0) && comboBox.isDisplayable()) {
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            comboBoxListener.actionPerformed(null);
          }
        }
);
      }
 else {
        if (!comboBox.isDisplayable())         videoDeviceInPreview=null;
      }
    }
  }
);
  return preview;
}
