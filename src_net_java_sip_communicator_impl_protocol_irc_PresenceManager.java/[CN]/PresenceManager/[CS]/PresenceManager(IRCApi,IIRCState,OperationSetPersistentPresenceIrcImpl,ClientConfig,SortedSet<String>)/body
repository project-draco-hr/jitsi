{
  if (connectionState == null) {
    throw new IllegalArgumentException("connectionState cannot be null");
  }
  this.connectionState=connectionState;
  if (operationSet == null) {
    throw new IllegalArgumentException("operationSet cannot be null");
  }
  this.operationSet=operationSet;
  if (irc == null) {
    throw new IllegalArgumentException("irc cannot be null");
  }
  this.irc=irc;
  final SortedSet<String> nickWatchList;
  if (persistentNickWatchList == null) {
    nickWatchList=Collections.synchronizedSortedSet(new TreeSet<String>());
  }
 else {
    nickWatchList=persistentNickWatchList;
  }
  this.irc.addListener(new LocalUserPresenceListener());
  this.isupportAwayLen=parseISupportAwayLen(this.connectionState);
  this.isupportMonitor=parseISupportMonitor(this.connectionState);
  this.isupportWatch=parseISupportWatch(this.connectionState);
  final boolean enablePresencePolling=config.isContactPresenceTaskEnabled();
  if (this.isupportMonitor != null) {
    final SortedSet<String> monitoredNicks=Collections.synchronizedSortedSet(new TreeSet<String>());
    this.watcher=new MonitorPresenceWatcher(this.irc,this.connectionState,nickWatchList,monitoredNicks,this.operationSet,this.isupportMonitor);
    if (enablePresencePolling) {
      final Set<String> unmonitoredNicks=new DynamicDifferenceSet<String>(nickWatchList,monitoredNicks);
      new BasicPollerPresenceWatcher(this.irc,this.connectionState,this.operationSet,unmonitoredNicks,this.serverIdentity);
    }
  }
 else   if (this.isupportWatch != null) {
    final SortedSet<String> monitoredNicks=Collections.synchronizedSortedSet(new TreeSet<String>());
    this.watcher=new WatchPresenceWatcher(this.irc,this.connectionState,nickWatchList,monitoredNicks,this.operationSet,this.isupportWatch);
    if (enablePresencePolling) {
      final Set<String> unmonitoredNicks=new DynamicDifferenceSet<String>(nickWatchList,monitoredNicks);
      new BasicPollerPresenceWatcher(this.irc,this.connectionState,this.operationSet,unmonitoredNicks,this.serverIdentity);
    }
  }
 else   if (enablePresencePolling) {
    this.watcher=new BasicPollerPresenceWatcher(this.irc,this.connectionState,this.operationSet,nickWatchList,this.serverIdentity);
  }
 else {
    this.watcher=null;
  }
}
