{
  callContactMenu=new SIPCommMenu(GuiActivator.getResources().getI18NString("service.gui.CALL"));
  callContactMenu.setIcon(new ImageIcon(ImageLoader.getImage(ImageLoader.CALL_16x16_ICON)));
  Iterator<ContactDetail> details=sourceContact.getContactDetails(OperationSetBasicTelephony.class).iterator();
  while (details.hasNext()) {
    final ContactDetail detail=details.next();
    JMenuItem callContactItem=new JMenuItem();
    callContactItem.setText(detail.getDetail());
    callContactItem.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent e){
        List<ProtocolProviderService> providers=AccountUtils.getOpSetRegisteredProviders(OperationSetBasicTelephony.class,detail.getPreferredProtocolProvider(OperationSetBasicTelephony.class),detail.getPreferredProtocol(OperationSetBasicTelephony.class));
        int providersCount=providers.size();
        if (providers == null || providersCount <= 0) {
          new ErrorDialog(null,GuiActivator.getResources().getI18NString("service.gui.CALL_FAILED"),GuiActivator.getResources().getI18NString("service.gui.NO_ONLINE_TELEPHONY_ACCOUNT")).showDialog();
          return;
        }
 else         if (providersCount > 1) {
          ChooseCallAccountDialog dialog=new ChooseCallAccountDialog(detail.getDetail(),OperationSetBasicTelephony.class,providers);
          dialog.setUIContact(sourceUIContact);
          dialog.setVisible(true);
        }
 else {
          CallManager.createCall(providers.get(0),detail.getDetail(),sourceUIContact);
        }
      }
    }
);
    callContactItem.setEnabled(detail.getSupportedOperationSets().contains(OperationSetBasicTelephony.class));
    callContactMenu.add(callContactItem);
  }
  return callContactMenu;
}
