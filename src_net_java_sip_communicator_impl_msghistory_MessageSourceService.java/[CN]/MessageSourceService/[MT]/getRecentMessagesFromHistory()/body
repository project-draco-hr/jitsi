{
  MessageHistoryServiceImpl msgService=MessageHistoryActivator.getMessageHistoryService();
  HistoryService historyService=msgService.getHistoryService();
  List<MessageSourceContact> res=new LinkedList<MessageSourceContact>();
  try {
    SimpleDateFormat sdf=new SimpleDateFormat(HistoryService.DATE_FORMAT);
    History history;
    if (historyService.isHistoryExisting(historyID))     history=historyService.getHistory(historyID);
 else     history=historyService.createHistory(historyID,recordStructure);
    Iterator<HistoryRecord> recs=history.getReader().findLast(numberOfMessages);
    while (recs.hasNext()) {
      HistoryRecord hr=recs.next();
      String provider=null;
      String contact=null;
      for (int i=0; i < hr.getPropertyNames().length; i++) {
        String propName=hr.getPropertyNames()[i];
        if (propName.equals(STRUCTURE_NAMES[0]))         provider=hr.getPropertyValues()[i];
 else         if (propName.equals(STRUCTURE_NAMES[1]))         contact=hr.getPropertyValues()[i];
      }
      if (provider == null || contact == null)       return res;
      for (      EventObject ev : msgService.findRecentMessagesPerContact(numberOfMessages,provider,contact)) {
        res.add(new MessageSourceContact(ev,this));
      }
    }
  }
 catch (  IOException ex) {
    logger.error("cannot create recent_messages history",ex);
    return null;
  }
  return res;
}
