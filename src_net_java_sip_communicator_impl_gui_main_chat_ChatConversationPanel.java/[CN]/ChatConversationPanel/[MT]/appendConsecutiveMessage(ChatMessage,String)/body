{
  String previousMessageUID=lastMessageUID;
  lastMessageUID=chatMessage.getMessageUID();
  if (!SwingUtilities.isEventDispatchThread()) {
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        appendConsecutiveMessage(chatMessage,keyword);
      }
    }
);
    return;
  }
  Element lastMsgElement=document.getElement(ChatHtmlUtils.MESSAGE_TEXT_ID + previousMessageUID);
  String contactAddress=(String)lastMsgElement.getAttributes().getAttribute(Attribute.NAME);
  boolean isHistory=(chatMessage.getMessageType().equals(Chat.HISTORY_INCOMING_MESSAGE) || chatMessage.getMessageType().equals(Chat.HISTORY_OUTGOING_MESSAGE)) ? true : false;
  String newMessage=ChatHtmlUtils.createMessageTag(chatMessage.getMessageUID(),contactAddress,formatMessageAsHTML(chatMessage.getMessage(),chatMessage.getContentType(),keyword),ChatHtmlUtils.HTML_CONTENT_TYPE,chatMessage.getDate(),false,isHistory,isSimpleTheme);
synchronized (scrollToBottomRunnable) {
    try {
      Element parentElement=lastMsgElement.getParentElement();
      document.insertBeforeEnd(parentElement,newMessage);
      SwingUtilities.invokeLater(scrollToBottomRunnable);
    }
 catch (    BadLocationException ex) {
      logger.error("Could not replace chat message",ex);
    }
catch (    IOException ex) {
      logger.error("Could not replace chat message",ex);
    }
  }
  finishMessageAdd(newMessage);
}
