{
  super(new BorderLayout(5,5));
  this.wizard=accountWizard;
  this.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
  this.setPreferredSize(new Dimension(230,150));
  this.setOpaque(false);
  this.inputPanel.setOpaque(false);
  this.labelsPanel.setOpaque(false);
  this.fieldsPanel.setOpaque(false);
  this.emptyPanel.setOpaque(false);
  this.inputRegisterPanel.setOpaque(false);
  this.iconDescriptionPanel.setOpaque(false);
  this.add(inputRegisterPanel,BorderLayout.CENTER);
  this.inputRegisterPanel.add(inputPanel,BorderLayout.NORTH);
  if (wizard.isWebSignupSupported() && isPreferredWizard)   this.inputRegisterPanel.add(specialSignupLabel,BorderLayout.SOUTH);
 else   this.inputRegisterPanel.add(signupLabel,BorderLayout.SOUTH);
  this.inputPanel.add(labelsPanel,BorderLayout.WEST);
  this.inputPanel.add(fieldsPanel,BorderLayout.CENTER);
  this.iconDescriptionPanel.add(protocolLabel,BorderLayout.NORTH);
  this.signupLabel.setFont(signupLabel.getFont().deriveFont(10f));
  this.signupLabel.addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent arg0){
      try {
        wizard.webSignup();
      }
 catch (      UnsupportedOperationException e) {
        logger.error("The web sign up is not supported.",e);
      }
    }
  }
);
  this.specialSignupLabel.setFont(signupLabel.getFont().deriveFont(10f));
  this.specialSignupLabel.addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent arg0){
      try {
        wizard.webSignup();
      }
 catch (      UnsupportedOperationException e) {
        logger.error("The web sign up is not supported.",e);
      }
    }
  }
);
  this.protocolLabel.setFont(protocolLabel.getFont().deriveFont(Font.BOLD,14f));
  this.usernameExampleLabel.setForeground(Color.DARK_GRAY);
  this.usernameExampleLabel.setFont(usernameExampleLabel.getFont().deriveFont(8f));
  this.emptyPanel.setMaximumSize(new Dimension(40,25));
  this.labelsPanel.add(usernameLabel);
  this.labelsPanel.add(emptyPanel);
  this.labelsPanel.add(passwordLabel);
  this.fieldsPanel.add(usernameField);
  this.fieldsPanel.add(usernameExampleLabel);
  this.fieldsPanel.add(passwordField);
  this.usernameExampleLabel.setText(wizard.getUserNameExample());
  this.protocolLabel.setText(wizard.getProtocolName());
  Image image=null;
  try {
    image=ImageIO.read(new ByteArrayInputStream(wizard.getPageImage()));
  }
 catch (  IOException e) {
    logger.error("Unable to load image.",e);
  }
  if (image != null) {
    image=image.getScaledInstance(28,28,Image.SCALE_SMOOTH);
    protocolLabel.setIcon(new ImageIcon(image));
  }
  if (isPreferredWizard) {
    descriptionArea.setBorder(BorderFactory.createEmptyBorder(10,0,0,0));
    descriptionArea.setFont(descriptionArea.getFont().deriveFont(10f));
    descriptionArea.setPreferredSize(new Dimension(220,50));
    descriptionArea.setLineWrap(true);
    descriptionArea.setWrapStyleWord(true);
    descriptionArea.setText(wizard.getProtocolDescription());
    descriptionArea.setOpaque(false);
    this.iconDescriptionPanel.add(descriptionArea,BorderLayout.CENTER);
    this.add(iconDescriptionPanel,BorderLayout.WEST);
  }
 else {
    this.add(iconDescriptionPanel,BorderLayout.NORTH);
  }
}
