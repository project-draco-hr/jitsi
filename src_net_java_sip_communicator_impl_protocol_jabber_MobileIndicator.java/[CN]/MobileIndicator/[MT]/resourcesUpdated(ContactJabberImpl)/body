{
  if (isCapsMobileIndicator) {
    updateMobileIndicatorUsingCaps(contact.getAddress());
    return;
  }
  int highestPriority=Integer.MIN_VALUE;
  List<ContactResource> highestPriorityResources=new ArrayList<ContactResource>();
  Collection<ContactResource> resources=contact.getResources();
  if (resources == null)   return;
  for (  ContactResource res : resources) {
    if (!res.getPresenceStatus().isOnline())     continue;
    int prio=res.getPriority();
    if (prio >= highestPriority) {
      if (highestPriority != prio)       highestPriorityResources.clear();
      highestPriority=prio;
      highestPriorityResources.add(res);
    }
  }
  boolean allMobile=false;
  for (  ContactResource res : highestPriorityResources) {
    if (res.isMobile())     allMobile=true;
 else {
      allMobile=false;
      break;
    }
  }
  if (highestPriorityResources.size() > 0)   contact.setMobile(allMobile);
 else   contact.setMobile(false);
}
