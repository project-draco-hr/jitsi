{
  super(new BorderLayout());
  KeybindingsService service=getKeybindingsService();
  setFocusable(true);
  JTabbedPane chooserPanes=new SIPCommTabbedPane();
  this.addFocusListener(new FocusAdapter(){
    @Override public void focusLost(    FocusEvent event){
      for (      SIPChooser chooser : choosers.values()) {
        chooser.setSelected(null);
      }
    }
  }
);
  for (  KeybindingSet.Category category : KeybindingSet.Category.values()) {
    KeybindingSet bindingSet=service.getBindings(category);
    if (bindingSet == null)     continue;
    SIPChooser newChooser=new SIPChooser();
    newChooser.putAllBindings(bindingSet);
    JPanel chooserWrapper=new TransparentPanel(new BorderLayout());
    chooserWrapper.add(newChooser,BorderLayout.NORTH);
    JScrollPane scroller=new JScrollPane(chooserWrapper);
    this.addKeyListener(newChooser.makeAdaptor());
    chooserPanes.addTab(getReadableConstant(category.toString()),scroller);
    this.choosers.put(bindingSet,newChooser);
  }
  GlobalShortcutConfigForm globalBindingPanel=new GlobalShortcutConfigForm();
  chooserPanes.addTab("Global shortcut",globalBindingPanel);
  add(chooserPanes);
}
