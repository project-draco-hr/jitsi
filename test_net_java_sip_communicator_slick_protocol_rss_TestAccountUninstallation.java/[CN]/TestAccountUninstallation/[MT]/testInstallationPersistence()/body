{
  Bundle providerBundle=RssSlickFixture.findProtocolProviderBundle(fixture.provider);
  RssSlickFixture.providerBundle=providerBundle;
  assertNotNull("Couldn't find a bundle for the protocol provider",providerBundle);
  providerBundle.stop();
  assertTrue("Couldn't stop protocol provider bundle. State was " + providerBundle.getSymbolicName(),providerBundle.getState() != Bundle.ACTIVE && providerBundle.getState() != Bundle.STOPPING);
  providerBundle.uninstall();
  assertEquals("Couldn't uninstall protocol provider bundle.",providerBundle.getState(),Bundle.UNINSTALLED);
  ServiceReference providerRefs[]=null;
  try {
    providerRefs=RssSlickFixture.bc.getServiceReferences(ProtocolProviderService.class.getName(),"(&(" + ProtocolProviderFactory.PROTOCOL + "="+ ProtocolNames.RSS+ "))");
  }
 catch (  InvalidSyntaxException ise) {
    fail("Invalid OSGi filter. Exception was" + ise.getMessage());
  }
  assertTrue("Protocol provider still present after being explicitly" + " uninstalled",providerRefs == null || providerRefs.length == 0);
  assertTrue("The RSS protocol provider factory didn't completely " + "uninstalled the provider service",fixture.providerFactory.getRegisteredAccounts().size() == 0 && fixture.providerFactory.getProviderForAccount(fixture.provider.getAccountID()) == null);
  providerBundle=RssSlickFixture.bc.installBundle(providerBundle.getLocation());
  RssSlickFixture.providerBundle=providerBundle;
  assertTrue("Couldn't reinstall provider bundle",providerBundle.getState() == Bundle.INSTALLED);
  AccountManagerUtils.startBundleAndWaitStoredAccountsLoaded(RssSlickFixture.bc,providerBundle,ProtocolNames.RSS);
  assertTrue("Couldn't start provider",providerBundle.getState() == Bundle.ACTIVE);
  providerRefs=null;
  try {
    providerRefs=RssSlickFixture.bc.getServiceReferences(ProtocolProviderService.class.getName(),"(&(" + ProtocolProviderFactory.PROTOCOL + "="+ ProtocolNames.RSS+ "))");
  }
 catch (  InvalidSyntaxException ise) {
    fail("Invalid OSGi filter. Exception was" + ise.getMessage());
  }
  assertTrue("The protocol provider hasn't been restored after being " + "reinstalled",providerRefs != null && providerRefs.length > 0);
  ServiceReference factoryRefs[]=null;
  try {
    factoryRefs=RssSlickFixture.bc.getServiceReferences(ProtocolProviderFactory.class.getName(),"(" + ProtocolProviderFactory.PROTOCOL + "=RSS)");
  }
 catch (  InvalidSyntaxException ise) {
    fail("Invalid OSGi filter. Exception was " + ise.getMessage());
  }
  fixture.providerFactory=(ProtocolProviderFactory)RssSlickFixture.bc.getService(factoryRefs[0]);
  fixture.provider=(ProtocolProviderService)RssSlickFixture.bc.getService(providerRefs[0]);
  assertFalse("RSS provider did not restore its own reference to the" + " provider that we just reinstalled.",fixture.providerFactory.getRegisteredAccounts().isEmpty() && fixture.providerFactory.getProviderForAccount(fixture.provider.getAccountID()) == null);
}
