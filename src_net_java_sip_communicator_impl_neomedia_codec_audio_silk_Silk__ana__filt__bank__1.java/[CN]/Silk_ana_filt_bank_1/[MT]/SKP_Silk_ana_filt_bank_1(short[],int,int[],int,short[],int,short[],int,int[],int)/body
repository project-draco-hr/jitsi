{
  int k, N2=N >> 1;
  int in32, X, Y, out_1, out_2;
  for (k=0; k < N2; k++) {
    in32=in[in_offset + 2 * k] << 10;
    Y=in32 - S[S_offset + 0];
    X=Silk_macros.SKP_SMLAWB(Y,Y,A_fb1_21[0]);
    out_1=S[S_offset + 0] + X;
    S[S_offset + 0]=in32 + X;
    in32=in[in_offset + 2 * k + 1] << 10;
    Y=in32 - S[S_offset + 1];
    X=Silk_macros.SKP_SMULWB(Y,A_fb1_20[0]);
    out_2=S[S_offset + 1] + X;
    S[S_offset + 1]=in32 + X;
    outL[outL_offset + k]=(short)Silk_SigProc_FIX.SKP_SAT16(Silk_SigProc_FIX.SKP_RSHIFT_ROUND(out_2 + out_1,11));
    outH[outH_offset + k]=(short)Silk_SigProc_FIX.SKP_SAT16(Silk_SigProc_FIX.SKP_RSHIFT_ROUND(out_2 - out_1,11));
  }
}
