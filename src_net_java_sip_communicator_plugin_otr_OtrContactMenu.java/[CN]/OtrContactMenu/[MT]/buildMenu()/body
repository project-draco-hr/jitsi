{
  if (separateMenu != null)   separateMenu.removeAll();
  OtrPolicy policy=OtrActivator.scOtrEngine.getContactPolicy(contact);
  JMenuItem endOtr=new JMenuItem();
  endOtr.setText(OtrActivator.resourceService.getI18NString("plugin.otr.menu.END_OTR"));
  endOtr.setActionCommand(ACTION_COMMAND_END_OTR);
  endOtr.addActionListener(this);
  JMenuItem startOtr=new JMenuItem();
  startOtr.setText(OtrActivator.resourceService.getI18NString("plugin.otr.menu.START_OTR"));
  startOtr.setEnabled(policy.getEnableManual());
  startOtr.setActionCommand(ACTION_COMMAND_START_OTR);
  startOtr.addActionListener(this);
  JMenuItem refreshOtr=new JMenuItem();
  refreshOtr.setText(OtrActivator.resourceService.getI18NString("plugin.otr.menu.REFRESH_OTR"));
  refreshOtr.setEnabled(policy.getEnableManual());
  refreshOtr.setActionCommand(ACTION_COMMAND_REFRESH_OTR);
  refreshOtr.addActionListener(this);
switch (this.sessionStatus) {
case LOADING:
    if (separateMenu != null) {
      separateMenu.add(endOtr);
      separateMenu.add(refreshOtr);
    }
 else {
      parentMenu.add(endOtr);
      parentMenu.add(refreshOtr);
    }
  break;
case ENCRYPTED:
JMenuItem authBuddy=new JMenuItem();
authBuddy.setText(OtrActivator.resourceService.getI18NString("plugin.otr.menu.AUTHENTICATE_BUDDY"));
authBuddy.setActionCommand(ACTION_COMMAND_AUTHENTICATE_BUDDY);
authBuddy.addActionListener(this);
if (separateMenu != null) {
separateMenu.add(endOtr);
separateMenu.add(refreshOtr);
separateMenu.add(authBuddy);
}
 else {
parentMenu.add(endOtr);
parentMenu.add(refreshOtr);
parentMenu.add(authBuddy);
}
break;
case FINISHED:
if (separateMenu != null) {
separateMenu.add(endOtr);
separateMenu.add(refreshOtr);
}
 else {
parentMenu.add(endOtr);
parentMenu.add(refreshOtr);
}
break;
case TIMED_OUT:
case PLAINTEXT:
if (separateMenu != null) separateMenu.add(startOtr);
 else parentMenu.add(startOtr);
break;
}
JCheckBoxMenuItem cbEnable=new JCheckBoxMenuItem();
cbEnable.setText(OtrActivator.resourceService.getI18NString("plugin.otr.menu.CB_ENABLE"));
cbEnable.setSelected(policy.getEnableManual());
cbEnable.setActionCommand(ACTION_COMMAND_CB_ENABLE);
cbEnable.addActionListener(this);
JCheckBoxMenuItem cbAlways=new JCheckBoxMenuItem();
cbAlways.setText(String.format(OtrActivator.resourceService.getI18NString("plugin.otr.menu.CB_AUTO",new String[]{contact.getDisplayName()})));
cbAlways.setEnabled(policy.getEnableManual());
cbAlways.setSelected(policy.getEnableAlways());
cbAlways.setActionCommand(ACTION_COMMAND_CB_AUTO);
cbAlways.addActionListener(this);
JCheckBoxMenuItem cbAlwaysAll=new JCheckBoxMenuItem();
cbAlwaysAll.setText(OtrActivator.resourceService.getI18NString("plugin.otr.menu.CB_AUTO_ALL"));
cbAlwaysAll.setEnabled(policy.getEnableManual());
String autoInitPropValue=OtrActivator.configService.getString(OtrActivator.AUTO_INIT_OTR_PROP);
boolean isAutoInit=OtrActivator.scOtrEngine.getGlobalPolicy().getEnableAlways();
if (autoInitPropValue != null) isAutoInit=Boolean.parseBoolean(autoInitPropValue);
cbAlwaysAll.setSelected(isAutoInit);
cbAlwaysAll.setActionCommand(ACTION_COMMAND_CB_AUTO_ALL);
cbAlwaysAll.addActionListener(this);
JCheckBoxMenuItem cbRequire=new JCheckBoxMenuItem();
cbRequire.setText(OtrActivator.resourceService.getI18NString("plugin.otr.menu.CB_REQUIRE"));
cbRequire.setEnabled(policy.getEnableManual());
String otrMandatoryPropValue=OtrActivator.configService.getString(OtrActivator.OTR_MANDATORY_PROP);
String defaultOtrPropValue=OtrActivator.resourceService.getSettingsString(OtrActivator.OTR_MANDATORY_PROP);
boolean isMandatory=policy.getRequireEncryption();
if (otrMandatoryPropValue != null) isMandatory=Boolean.parseBoolean(otrMandatoryPropValue);
 else if (!isMandatory && defaultOtrPropValue != null) isMandatory=Boolean.parseBoolean(defaultOtrPropValue);
cbRequire.setSelected(isMandatory);
cbRequire.setActionCommand(ACTION_COMMAND_CB_REQUIRE);
cbRequire.addActionListener(this);
JMenuItem cbReset=new JMenuItem();
cbReset.setText(OtrActivator.resourceService.getI18NString("plugin.otr.menu.CB_RESET"));
cbReset.setActionCommand(ACTION_COMMAND_CB_RESET);
cbReset.addActionListener(this);
if (separateMenu != null) {
separateMenu.addSeparator();
separateMenu.add(cbEnable);
separateMenu.add(cbAlways);
separateMenu.add(cbAlwaysAll);
separateMenu.add(cbRequire);
separateMenu.addSeparator();
separateMenu.add(cbReset);
parentMenu.add(separateMenu);
}
 else {
parentMenu.addSeparator();
parentMenu.add(cbEnable);
parentMenu.add(cbAlways);
parentMenu.add(cbAlwaysAll);
parentMenu.add(cbRequire);
parentMenu.addSeparator();
parentMenu.add(cbReset);
}
}
