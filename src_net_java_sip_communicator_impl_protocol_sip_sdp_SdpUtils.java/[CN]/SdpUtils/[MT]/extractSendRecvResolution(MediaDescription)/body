{
  java.awt.Dimension res[]=new java.awt.Dimension[2];
  String imgattr=null;
  String token=null;
  int idx=0;
  int idx2=0;
  int len=0;
  Pattern pSendSingle=Pattern.compile("send \\[x=[0-9]+,y=[0-9]+\\]");
  Pattern pRecvSingle=Pattern.compile("recv \\[x=[0-9]+,y=[0-9]+\\]");
  Pattern pSendRange=Pattern.compile("send \\[x=\\[[0-9]+-[0-9]+\\],y=\\[[0-9]+-[0-9]+\\]\\]");
  Pattern pRecvRange=Pattern.compile("recv \\[x=\\[[0-9]+-[0-9]+\\],y=\\[[0-9]+-[0-9]+\\]\\]");
  Pattern pNumeric=Pattern.compile("[0-9]+");
  Matcher mSingle=null;
  Matcher mRange=null;
  Matcher m=null;
  try {
    imgattr=mediaDesc.getAttribute("imageattr");
  }
 catch (  SdpParseException exc) {
    logger.debug("A funny thing just happened ...",exc);
    return null;
  }
  if (imgattr == null) {
    return null;
  }
  mSingle=pSendSingle.matcher(imgattr);
  mRange=pSendRange.matcher(imgattr);
  if (mSingle.find()) {
    int val[]=new int[2];
    int i=0;
    token=imgattr.substring(mSingle.start(),mSingle.end());
    m=pNumeric.matcher(token);
    while (m.find() && i < 2) {
      val[i]=Integer.parseInt(token.substring(m.start(),m.end()));
    }
    res[0]=new java.awt.Dimension(val[0],val[1]);
  }
 else   if (mRange.find()) {
    int val[]=new int[4];
    int i=0;
    token=imgattr.substring(mRange.start(),mRange.end());
    m=pNumeric.matcher(token);
    while (m.find() && i < 4) {
      val[i]=Integer.parseInt(token.substring(m.start(),m.end()));
      i++;
    }
    res[0]=new java.awt.Dimension(val[1],val[3]);
  }
  mSingle=pRecvSingle.matcher(imgattr);
  mRange=pRecvRange.matcher(imgattr);
  if (mSingle.find()) {
    int val[]=new int[2];
    int i=0;
    token=imgattr.substring(mSingle.start(),mSingle.end());
    m=pNumeric.matcher(token);
    while (m.find() && i < 2) {
      val[i]=Integer.parseInt(token.substring(m.start(),m.end()));
    }
    res[1]=new java.awt.Dimension(val[0],val[1]);
  }
 else   if (mRange.find()) {
    int val[]=new int[4];
    int i=0;
    token=imgattr.substring(mRange.start(),mRange.end());
    m=pNumeric.matcher(token);
    while (m.find() && i < 4) {
      val[i]=Integer.parseInt(token.substring(m.start(),m.end()));
      i++;
    }
    res[1]=new java.awt.Dimension(val[1],val[3]);
  }
  token=null;
  mSingle=null;
  mRange=null;
  m=null;
  pRecvRange=null;
  pSendSingle=null;
  pRecvSingle=null;
  pSendRange=null;
  return res;
}
