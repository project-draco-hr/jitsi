{
  Object[] props=IMAPIProp_GetProps(iUnknown,MAPI_MAILUSER_PROP_IDS,MAPI_UNICODE);
  long objType=(props[PR_OBJECT_TYPE] instanceof Long) ? ((Long)props[PR_OBJECT_TYPE]).longValue() : 0;
  if ((MAPI_MAILUSER == objType) && (mapiMessageCount != 0))   return false;
  boolean matches=false;
  for (  Object prop : props) {
    if ((prop instanceof String) && query.matcher((String)prop).find()) {
      matches=true;
      break;
    }
  }
  if (matches) {
    List<Class<? extends OperationSet>> supportedOpSets=new ArrayList<Class<? extends OperationSet>>(1);
    supportedOpSets.add(OperationSetBasicTelephony.class);
    List<ContactDetail> contactDetails=new LinkedList<ContactDetail>();
    for (int i=0; i < CONTACT_DETAIL_PROP_INDEXES.length; i++) {
      Object prop=props[CONTACT_DETAIL_PROP_INDEXES[i]];
      if (prop instanceof String) {
        String stringProp=(String)prop;
        if (stringProp.length() != 0) {
          ContactDetail contactDetail=new ContactDetail(stringProp);
          contactDetail.setSupportedOpSets(supportedOpSets);
          contactDetails.add(contactDetail);
        }
      }
    }
    AddrBookSourceContact sourceContact=new AddrBookSourceContact(getContactSource(),(String)props[PR_DISPLAY_NAME],contactDetails);
    if (MAPI_MESSAGE == objType) {
      ++mapiMessageCount;
      try {
        Object[] images=IMAPIProp_GetProps(iUnknown,new long[]{PR_ATTACHMENT_CONTACTPHOTO},0);
        Object image=images[0];
        if (image instanceof byte[])         sourceContact.setImage((byte[])image);
      }
 catch (      MsOutlookMAPIHResultException ex) {
      }
    }
    addQueryResult(sourceContact);
  }
  return (getStatus() == QUERY_IN_PROGRESS);
}
