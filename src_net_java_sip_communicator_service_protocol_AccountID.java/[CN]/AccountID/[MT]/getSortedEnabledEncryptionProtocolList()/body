{
  Map<String,Integer> encryptionProtocols=getIntegerPropertiesByPrefix(ProtocolProviderFactory.ENCRYPTION_PROTOCOL,true);
  Map<String,Boolean> encryptionProtocolStatus=getBooleanPropertiesByPrefix(ProtocolProviderFactory.ENCRYPTION_PROTOCOL_STATUS,true,false);
  if (encryptionProtocols.size() == 0) {
    encryptionProtocols.put(ProtocolProviderFactory.ENCRYPTION_PROTOCOL + ".ZRTP",0);
    encryptionProtocolStatus.put(ProtocolProviderFactory.ENCRYPTION_PROTOCOL_STATUS + ".ZRTP",true);
  }
  List<String> sortedEncryptionProtocols=new ArrayList<String>(encryptionProtocols.size());
  for (  Map.Entry<String,Integer> e : encryptionProtocols.entrySet()) {
    int index=e.getValue();
    if (index != -1) {
      if (index > sortedEncryptionProtocols.size())       index=sortedEncryptionProtocols.size();
      String name=e.getKey();
      sortedEncryptionProtocols.add(index,name);
    }
  }
  int namePrefixLength=ProtocolProviderFactory.ENCRYPTION_PROTOCOL.length() + 1;
  for (Iterator<String> i=sortedEncryptionProtocols.iterator(); i.hasNext(); ) {
    String name=i.next().substring(namePrefixLength);
    if (!encryptionProtocolStatus.get(ProtocolProviderFactory.ENCRYPTION_PROTOCOL_STATUS + "." + name)) {
      i.remove();
    }
  }
  return sortedEncryptionProtocols;
}
