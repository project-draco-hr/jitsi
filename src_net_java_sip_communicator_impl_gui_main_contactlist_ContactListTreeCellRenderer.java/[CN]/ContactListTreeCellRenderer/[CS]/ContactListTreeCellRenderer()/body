{
  super(new GridBagLayout());
  this.setBorder(BorderFactory.createEmptyBorder(2,5,2,2));
  int groupForegroundProperty=GuiActivator.getResources().getColor("service.gui.CONTACT_LIST_GROUP_FOREGROUND");
  if (groupForegroundProperty > -1)   groupForegroundColor=new Color(groupForegroundProperty);
  int contactForegroundProperty=GuiActivator.getResources().getColor("service.gui.CONTACT_LIST_CONTACT_FOREGROUND");
  if (contactForegroundProperty > -1)   contactForegroundColor=new Color(contactForegroundProperty);
  this.setOpaque(false);
  this.nameLabel.setOpaque(false);
  this.displayDetailsLabel.setFont(getFont().deriveFont(9f));
  this.displayDetailsLabel.setForeground(Color.GRAY);
  this.rightLabel.setFont(rightLabel.getFont().deriveFont(9f));
  this.rightLabel.setHorizontalAlignment(JLabel.RIGHT);
  statusLabel.setBorder(BorderFactory.createEmptyBorder(2,0,0,2));
  constraints.anchor=GridBagConstraints.WEST;
  constraints.fill=GridBagConstraints.VERTICAL;
  constraints.gridx=0;
  constraints.gridy=0;
  constraints.gridheight=1;
  constraints.weightx=0f;
  constraints.weighty=1f;
  this.add(statusLabel,constraints);
  constraints.anchor=GridBagConstraints.WEST;
  constraints.fill=GridBagConstraints.NONE;
  constraints.gridx=1;
  constraints.gridy=0;
  constraints.weightx=1f;
  constraints.weighty=0f;
  constraints.gridheight=1;
  constraints.gridwidth=2;
  this.add(nameLabel,constraints);
  rightLabel.setBorder(BorderFactory.createEmptyBorder(0,0,0,2));
  constraints.anchor=GridBagConstraints.NORTHEAST;
  constraints.fill=GridBagConstraints.VERTICAL;
  constraints.gridx=3;
  constraints.gridy=0;
  constraints.gridheight=3;
  constraints.weightx=0f;
  constraints.weighty=1f;
  this.add(rightLabel,constraints);
  this.callButton.setName(CALL_BUTTON_NAME);
  this.chatButton.setName(CHAT_BUTTON_NAME);
  callButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      ChooseCallAccountPopupMenu chooseAccountDialog=null;
      if (treeNode != null && treeNode instanceof ContactNode) {
        List<UIContactDetail> telephonyContacts=((ContactNode)treeNode).getContactDescriptor().getContactDetailsForOperationSet(OperationSetBasicTelephony.class);
        if (telephonyContacts.size() == 1) {
          UIContactDetail detail=telephonyContacts.get(0);
          ProtocolProviderService preferredProvider=detail.getPreferredProtocolProvider(OperationSetBasicTelephony.class);
          if (preferredProvider != null)           CallManager.createCall(preferredProvider,detail.getAddress());
 else {
            List<ProtocolProviderService> providers=CallManager.getTelephonyProviders();
            int providersCount=providers.size();
            if (providersCount == 1)             CallManager.createCall(providers.get(0),detail.getAddress());
 else             if (providersCount > 1)             chooseAccountDialog=new ChooseCallAccountPopupMenu(tree,detail.getAddress(),providers);
          }
        }
 else         if (telephonyContacts.size() > 1) {
          chooseAccountDialog=new ChooseCallAccountPopupMenu(tree,telephonyContacts);
        }
        if (chooseAccountDialog != null) {
          Point location=new Point(callButton.getX(),callButton.getY() + callButton.getHeight());
          SwingUtilities.convertPointToScreen(location,tree);
          location.y=location.y + tree.getPathBounds(tree.getSelectionPath()).y;
          chooseAccountDialog.showPopupMenu(location.x + 8,location.y - 8);
        }
      }
    }
  }
);
  chatButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (treeNode != null && treeNode instanceof ContactNode) {
        UIContact contactDescriptor=((ContactNode)treeNode).getContactDescriptor();
        if (contactDescriptor.getDescriptor() instanceof MetaContact) {
          GuiActivator.getUIService().getChatWindowManager().startChat((MetaContact)contactDescriptor.getDescriptor());
        }
      }
    }
  }
);
  this.setToolTipText("");
}
