{
  String roomName=testRoomBaseName + roomID;
  logger.info("--- Start testRevokeAdmin room:" + roomName);
  ChatRoom roomUser1=opSetMUC1.findRoom(roomName);
  assertNotNull("The room can't be retrieved on user1's side",roomUser1);
  ChatRoom roomUser3=opSetMUC3.findRoom(roomName);
  assertNotNull("The room can't be retrieved on user3's side",roomUser3);
  MUCEventCollector roomUser1Col=new MUCEventCollector(roomUser1,MUCEventCollector.EVENT_ROLE);
  MUCEventCollector roomUser3Col=new MUCEventCollector(roomUser3,MUCEventCollector.EVENT_ROLE);
  roomUser1.revokeAdmin(fixture.userID2);
  roomUser1Col.waitForEvent(10000);
  roomUser3Col.waitForEvent(10000);
  assertEquals("Wrong count of collected events on user1's side",1,roomUser1Col.collectedEvents.size());
  ChatRoomMemberRoleChangeEvent roleEventUser1=(ChatRoomMemberRoleChangeEvent)roomUser1Col.collectedEvents.get(0);
  assertEquals("Wrong count of collected events on user3's side",1,roomUser3Col.collectedEvents.size());
  ChatRoomMemberRoleChangeEvent roleEventUser3=(ChatRoomMemberRoleChangeEvent)roomUser3Col.collectedEvents.get(0);
  assertEquals("Collected event does not belong to the right chatroom",roomName,StringUtils.parseName(roleEventUser1.getSourceChatRoom().getName()));
  assertEquals("Collected event does not belong to the expected user",fixture.userID2,roleEventUser1.getSourceMember().getContactAddress());
  assertEquals("User2's previous role does not match",ChatRoomMemberRole.ADMINISTRATOR,roleEventUser1.getPreviousRole());
  assertEquals("Unexpected new role",ChatRoomMemberRole.MODERATOR,roleEventUser1.getNewRole());
  assertEquals("Collected event does not belong to the right chatroom",roomName,StringUtils.parseName(roleEventUser3.getSourceChatRoom().getName()));
  assertEquals("Collected event does not belong to the expected user",fixture.userID2,roleEventUser3.getSourceMember().getContactAddress());
  assertEquals("User2's previous role does not match",ChatRoomMemberRole.ADMINISTRATOR,roleEventUser3.getPreviousRole());
  assertEquals("Unexpected new role",ChatRoomMemberRole.MODERATOR,roleEventUser3.getNewRole());
  logger.info("--- End testRevokeAdmin room:" + roomName);
}
