{
  List<Class<? extends OperationSet>> supportedOpSets=new LinkedList<Class<? extends OperationSet>>();
  Map<Class<? extends OperationSet>,String> preferredProtocols=new HashMap<Class<? extends OperationSet>,String>();
  supportedOpSets.add(OperationSetPersistentPresence.class);
switch (property) {
case kABAIMInstantProperty:
    supportedOpSets.add(OperationSetBasicInstantMessaging.class);
  preferredProtocols.put(OperationSetBasicInstantMessaging.class,ProtocolNames.AIM);
break;
case kABEmailProperty:
supportedOpSets.add(OperationSetBasicTelephony.class);
break;
case kABICQInstantProperty:
supportedOpSets.add(OperationSetBasicInstantMessaging.class);
preferredProtocols.put(OperationSetBasicInstantMessaging.class,ProtocolNames.ICQ);
break;
case kABJabberInstantProperty:
supportedOpSets.add(OperationSetBasicInstantMessaging.class);
preferredProtocols.put(OperationSetBasicInstantMessaging.class,ProtocolNames.JABBER);
supportedOpSets.add(OperationSetBasicTelephony.class);
preferredProtocols.put(OperationSetBasicTelephony.class,ProtocolNames.JABBER);
break;
case kABPhoneProperty:
supportedOpSets.add(OperationSetBasicTelephony.class);
break;
case kABMSNInstantProperty:
supportedOpSets.add(OperationSetBasicInstantMessaging.class);
preferredProtocols.put(OperationSetBasicInstantMessaging.class,ProtocolNames.MSN);
break;
case kABYahooInstantProperty:
supportedOpSets.add(OperationSetBasicInstantMessaging.class);
preferredProtocols.put(OperationSetBasicInstantMessaging.class,ProtocolNames.YAHOO);
break;
default :
break;
}
contactDetail.setSupportedOpSets(supportedOpSets);
if (!preferredProtocols.isEmpty()) contactDetail.setPreferredProtocols(preferredProtocols);
return contactDetail;
}
