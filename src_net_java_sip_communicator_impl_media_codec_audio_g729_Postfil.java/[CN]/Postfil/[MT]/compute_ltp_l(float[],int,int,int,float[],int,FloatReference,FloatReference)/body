{
  float[] tab_hup_l=TabLd8k.tab_hup_l;
  int ptr_h;
  int i;
  int ptr2;
  float temp;
  ptr_h=(phase - 1) * LH2_L;
  ptr2=s_in_offset - ltpdel + LH_UP_L;
  for (int n=y_up_offset, toIndex=y_up_offset + L_SUBFR; n < toIndex; n++) {
    temp=0.f;
    for (i=0; i < LH2_L; i++) {
      temp+=tab_hup_l[ptr_h + i] * s_in[ptr2];
      ptr2--;
    }
    y_up[n]=temp;
    ptr2+=LH2_L_P1;
  }
  float _num=0.f;
  for (int n=0; n < L_SUBFR; n++) {
    _num+=y_up[y_up_offset + n] * s_in[s_in_offset + n];
  }
  if (_num < 0.0f)   _num=0.0f;
  num.value=_num;
  float _den=0.f;
  for (int n=y_up_offset, toIndex=y_up_offset + L_SUBFR; n < toIndex; n++) {
    _den+=y_up[n] * y_up[n];
  }
  den.value=_den;
}
