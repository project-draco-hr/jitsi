{
  OperationSetPersistentPresence opSetPersPresence=(OperationSetPersistentPresence)provider.getOperationSet(OperationSetPersistentPresence.class);
  if (opSetPersPresence == null) {
    return;
  }
  if (!(metaContact instanceof MetaContactImpl)) {
    throw new IllegalArgumentException(metaContact + " is not an instance of MetaContactImpl");
  }
  ContactGroup parentProtoGroup=resolveProtoPath(provider,(MetaContactGroupImpl)parentMetaGroup);
  if (parentProtoGroup == null) {
    throw new MetaContactListException("Could not obtain proto group parent for " + metaContact,null,MetaContactListException.CODE_NETWORK_ERROR);
  }
  BlockingSubscriptionEventRetriever evtRetriever=new BlockingSubscriptionEventRetriever(contactID);
  addContactToEventIgnoreList(contactID,provider);
  opSetPersPresence.addSubscriptionListener(evtRetriever);
  opSetPersPresence.addServerStoredGroupChangeListener(evtRetriever);
  try {
    opSetPersPresence.subscribe(parentProtoGroup,contactID);
    evtRetriever.waitForEvent(CONTACT_LIST_MODIFICATION_TIMEOUT);
  }
 catch (  OperationFailedException ex) {
    if (ex.getErrorCode() == OperationFailedException.SUBSCRIPTION_ALREADY_EXISTS) {
      throw new MetaContactListException("failed to create contact" + contactID,ex,MetaContactListException.CODE_CONTACT_ALREADY_EXISTS_ERROR);
    }
    throw new MetaContactListException("failed to create contact" + contactID,ex,MetaContactListException.CODE_NETWORK_ERROR);
  }
catch (  Exception ex) {
    throw new MetaContactListException("failed to create contact" + contactID,ex,MetaContactListException.CODE_NETWORK_ERROR);
  }
 finally {
    removeContactFromEventIgnoreList(contactID,provider);
    opSetPersPresence.removeSubscriptionListener(evtRetriever);
  }
  if (evtRetriever.evt == null) {
    throw new MetaContactListException("Failed to create a contact with address: " + contactID,null,MetaContactListException.CODE_NETWORK_ERROR);
  }
  if (evtRetriever.evt instanceof SubscriptionEvent && ((SubscriptionEvent)evtRetriever.evt).getEventID() == SubscriptionEvent.SUBSCRIPTION_FAILED) {
    throw new MetaContactListException("Failed to create a contact with address: " + contactID + " "+ ((SubscriptionEvent)evtRetriever.evt).getErrorReason(),null,MetaContactListException.CODE_UNKNOWN_ERROR);
  }
  ((MetaContactImpl)metaContact).addProtoContact(evtRetriever.sourceContact);
  if (fireEvent) {
    this.fireProtoContactEvent(evtRetriever.sourceContact,ProtoContactEvent.PROTO_CONTACT_ADDED,null,metaContact);
  }
  ((MetaContactGroupImpl)parentMetaGroup).addMetaContact((MetaContactImpl)metaContact);
}
