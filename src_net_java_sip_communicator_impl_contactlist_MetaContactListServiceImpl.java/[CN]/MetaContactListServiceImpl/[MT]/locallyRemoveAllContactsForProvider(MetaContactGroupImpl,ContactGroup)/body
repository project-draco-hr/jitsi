{
  Iterator<MetaContact> childrenContactsIter=parentMetaGroup.getChildContacts();
  while (childrenContactsIter.hasNext()) {
    MetaContactImpl child=(MetaContactImpl)childrenContactsIter.next();
    Iterator<Contact> contactsToRemove=child.getContactsForContactGroup(groupToRemove);
    child.removeContactsForGroup(groupToRemove);
    if (child.getContactCount() == 0) {
      parentMetaGroup.removeMetaContact(child);
      fireMetaContactEvent(child,parentMetaGroup,MetaContactEvent.META_CONTACT_REMOVED);
    }
 else {
      while (contactsToRemove.hasNext()) {
        fireProtoContactEvent(contactsToRemove.next(),ProtoContactEvent.PROTO_CONTACT_REMOVED,child,null);
      }
    }
  }
  Iterator<MetaContactGroup> subgroupsIter=parentMetaGroup.getSubgroups();
  while (subgroupsIter.hasNext()) {
    MetaContactGroupImpl subMetaGroup=(MetaContactGroupImpl)subgroupsIter.next();
    Iterator<ContactGroup> contactGroups=subMetaGroup.getContactGroups();
    ContactGroup protoGroup=null;
    while (contactGroups.hasNext()) {
      protoGroup=contactGroups.next();
      if (groupToRemove == protoGroup.getParentContactGroup())       this.locallyRemoveAllContactsForProvider(subMetaGroup,protoGroup);
    }
    if (subMetaGroup.countSubgroups() == 0 && subMetaGroup.countChildContacts() == 0 && subMetaGroup.countContactGroups() == 0) {
      parentMetaGroup.removeSubgroup(subMetaGroup);
      fireMetaContactGroupEvent(subMetaGroup,groupToRemove.getProtocolProvider(),protoGroup,MetaContactGroupEvent.META_CONTACT_GROUP_REMOVED);
    }
  }
  parentMetaGroup.removeProtoGroup(groupToRemove);
}
