{
  super(owner);
  ResourceManagementService resources=BrandingActivator.getResources();
  String applicationName=resources.getSettingsString("service.gui.APPLICATION_NAME");
  this.setTitle(resources.getI18NString("plugin.branding.ABOUT_WINDOW_TITLE",new String[]{applicationName}));
  setModal(false);
  setDefaultCloseOperation(DISPOSE_ON_CLOSE);
  JPanel mainPanel=new WindowBackground();
  mainPanel.setLayout(new BorderLayout());
  JPanel textPanel=new JPanel();
  textPanel.setPreferredSize(new Dimension(470,280));
  textPanel.setLayout(new BoxLayout(textPanel,BoxLayout.Y_AXIS));
  textPanel.setBorder(BorderFactory.createEmptyBorder(15,15,15,15));
  textPanel.setOpaque(false);
  JLabel titleLabel=new JLabel(applicationName);
  titleLabel.setFont(titleLabel.getFont().deriveFont(Font.BOLD,28));
  titleLabel.setForeground(Constants.TITLE_COLOR);
  titleLabel.setAlignmentX(Component.RIGHT_ALIGNMENT);
  JTextField versionLabel=new JTextField(" " + System.getProperty("sip-communicator.version"));
  versionLabel.setUI(new SIPCommTextFieldUI());
  versionLabel.setBorder(null);
  versionLabel.setOpaque(false);
  versionLabel.setEditable(false);
  versionLabel.setFont(versionLabel.getFont().deriveFont(Font.BOLD,18));
  versionLabel.setForeground(Constants.TITLE_COLOR);
  versionLabel.setAlignmentX(Component.RIGHT_ALIGNMENT);
  versionLabel.setHorizontalAlignment(JTextField.RIGHT);
  int logoAreaFontSize=resources.getSettingsInt("plugin.branding.ABOUT_LOGO_FONT_SIZE");
  JTextArea logoArea=new JTextArea(resources.getI18NString("plugin.branding.LOGO_MESSAGE"));
  logoArea.setFont(logoArea.getFont().deriveFont(Font.BOLD,logoAreaFontSize));
  logoArea.setForeground(Constants.TITLE_COLOR);
  logoArea.setOpaque(false);
  logoArea.setLineWrap(true);
  logoArea.setWrapStyleWord(true);
  logoArea.setEditable(false);
  logoArea.setPreferredSize(new Dimension(100,20));
  logoArea.setAlignmentX(Component.RIGHT_ALIGNMENT);
  logoArea.setBorder(BorderFactory.createEmptyBorder(30,DEFAULT_TEXT_INDENT,0,0));
  StyledHTMLEditorPane rightsArea=new StyledHTMLEditorPane();
  rightsArea.setContentType("text/html");
  rightsArea.appendToEnd(resources.getI18NString("plugin.branding.COPYRIGHT",new String[]{Constants.TEXT_COLOR}));
  rightsArea.setPreferredSize(new Dimension(50,20));
  rightsArea.setBorder(BorderFactory.createEmptyBorder(0,DEFAULT_TEXT_INDENT,0,0));
  rightsArea.setOpaque(false);
  rightsArea.setEditable(false);
  rightsArea.setAlignmentX(Component.RIGHT_ALIGNMENT);
  rightsArea.addHyperlinkListener(this);
  StyledHTMLEditorPane licenseArea=new StyledHTMLEditorPane();
  licenseArea.setContentType("text/html");
  licenseArea.appendToEnd(resources.getI18NString("plugin.branding.LICENSE",new String[]{Constants.TEXT_COLOR}));
  licenseArea.setPreferredSize(new Dimension(50,20));
  licenseArea.setBorder(BorderFactory.createEmptyBorder(resources.getSettingsInt("plugin.branding.ABOUT_PARAGRAPH_GAP"),DEFAULT_TEXT_INDENT,0,0));
  licenseArea.setOpaque(false);
  licenseArea.setEditable(false);
  licenseArea.setAlignmentX(Component.RIGHT_ALIGNMENT);
  licenseArea.addHyperlinkListener(this);
  textPanel.add(titleLabel);
  textPanel.add(versionLabel);
  textPanel.add(logoArea);
  textPanel.add(rightsArea);
  textPanel.add(licenseArea);
  JButton okButton=new JButton(resources.getI18NString("service.gui.OK"));
  this.getRootPane().setDefaultButton(okButton);
  okButton.setMnemonic(resources.getI18nMnemonic("service.gui.OK"));
  okButton.addActionListener(this);
  JPanel buttonPanel=new JPanel(new FlowLayout(FlowLayout.RIGHT));
  buttonPanel.add(okButton);
  buttonPanel.setOpaque(false);
  mainPanel.add(textPanel,BorderLayout.CENTER);
  mainPanel.add(buttonPanel,BorderLayout.SOUTH);
  this.getContentPane().add(mainPanel);
  this.pack();
  this.setResizable(false);
  setLocationRelativeTo(getParent());
  this.getRootPane().getActionMap().put("close",new CloseAction());
  InputMap imap=this.getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  imap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),"close");
  if (OSUtils.IS_MAC) {
    imap.put(KeyStroke.getKeyStroke(KeyEvent.VK_W,InputEvent.META_DOWN_MASK),"close");
    imap.put(KeyStroke.getKeyStroke(KeyEvent.VK_W,InputEvent.CTRL_DOWN_MASK),"close");
  }
}
