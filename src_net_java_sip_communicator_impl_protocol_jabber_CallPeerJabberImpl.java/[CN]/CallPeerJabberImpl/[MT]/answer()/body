{
  Iterable<ContentPacketExtension> answer;
  try {
    getMediaHandler().getTransportManager().wrapupConnectivityEstablishment();
    answer=getMediaHandler().generateSessionAccept();
  }
 catch (  Exception exc) {
    logger.info("Failed to answer an incoming call",exc);
    String reasonText="Error: " + exc.getMessage();
    JingleIQ errResp=JinglePacketFactory.createSessionTerminate(sessionInitIQ.getTo(),sessionInitIQ.getFrom(),sessionInitIQ.getSID(),Reason.FAILED_APPLICATION,reasonText);
    setState(CallPeerState.FAILED,reasonText);
    getProtocolProvider().getConnection().sendPacket(errResp);
    return;
  }
  JingleIQ response=JinglePacketFactory.createSessionAccept(sessionInitIQ.getTo(),sessionInitIQ.getFrom(),getSID(),answer);
  getProtocolProvider().getConnection().sendPacket(response);
  try {
    getMediaHandler().start();
  }
 catch (  UndeclaredThrowableException e) {
    Throwable exc=e.getUndeclaredThrowable();
    logger.info("Failed to establish a connection",exc);
    String reasonText="Error: " + exc.getMessage();
    JingleIQ errResp=JinglePacketFactory.createSessionTerminate(sessionInitIQ.getTo(),sessionInitIQ.getFrom(),sessionInitIQ.getSID(),Reason.GENERAL_ERROR,reasonText);
    setState(CallPeerState.FAILED,reasonText);
    getProtocolProvider().getConnection().sendPacket(errResp);
    return;
  }
  setState(CallPeerState.CONNECTED);
}
