{
  if (CallPeerState.DISCONNECTED.equals(getState()) || CallPeerState.FAILED.equals(getState())) {
    if (logger.isDebugEnabled())     logger.debug("Ignoring a request to hangup a call peer " + "that is already DISCONNECTED");
    return;
  }
  ProtocolProviderServiceJabberImpl provider=getProtocolProvider();
  CallPeerState prevPeerState=getState();
  setState(CallPeerState.DISCONNECTED);
  JingleIQ responseIQ=null;
  if (prevPeerState.equals(CallPeerState.CONNECTED) || CallPeerState.isOnHold(prevPeerState)) {
    responseIQ=JinglePacketFactory.createBye(provider.getOurJID(),peerJID,jingleSID);
  }
 else   if (CallPeerState.CONNECTING.equals(getState()) || CallPeerState.CONNECTING_WITH_EARLY_MEDIA.equals(getState()) || CallPeerState.ALERTING_REMOTE_SIDE.equals(getState())) {
    responseIQ=JinglePacketFactory.createCancel(provider.getOurJID(),peerJID,jingleSID);
  }
 else   if (prevPeerState.equals(CallPeerState.INCOMING_CALL)) {
    responseIQ=JinglePacketFactory.createBusy(provider.getOurJID(),peerJID,jingleSID);
  }
 else   if (prevPeerState.equals(CallPeerState.BUSY) || prevPeerState.equals(CallPeerState.FAILED)) {
  }
 else {
    logger.info("Could not determine call peer state!");
  }
  if (responseIQ != null)   provider.getConnection().sendPacket(responseIQ);
}
