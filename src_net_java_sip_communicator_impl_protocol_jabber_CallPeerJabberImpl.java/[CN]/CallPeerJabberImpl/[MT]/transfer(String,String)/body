{
  JingleIQ transferSessionInfo=new JingleIQ();
  ProtocolProviderServiceJabberImpl protocolProvider=getProtocolProvider();
  transferSessionInfo.setAction(JingleAction.SESSION_INFO);
  transferSessionInfo.setFrom(protocolProvider.getOurJID());
  transferSessionInfo.setSID(getSID());
  transferSessionInfo.setTo(getAddress());
  transferSessionInfo.setType(IQ.Type.SET);
  TransferPacketExtension transfer=new TransferPacketExtension();
  if (sid != null) {
    transfer.setFrom(protocolProvider.getOurJID());
    transfer.setSID(sid);
  }
  transfer.setTo(to);
  transferSessionInfo.addExtension(transfer);
  Connection connection=protocolProvider.getConnection();
  PacketCollector collector=connection.createPacketCollector(new PacketIDFilter(transferSessionInfo.getPacketID()));
  protocolProvider.getConnection().sendPacket(transferSessionInfo);
  Packet result=collector.nextResult(SmackConfiguration.getPacketReplyTimeout());
  if (result == null) {
    throw new OperationFailedException("No response to the \"transfer\" request.",OperationFailedException.ILLEGAL_ARGUMENT);
  }
 else   if (((IQ)result).getType() != IQ.Type.RESULT) {
    throw new OperationFailedException("Remote peer does not manage call \"transfer\"." + "Response to the \"transfer\" request is: " + ((IQ)result).getType(),OperationFailedException.ILLEGAL_ARGUMENT);
  }
 else {
    String message=((sid == null) ? "Unattended" : "Attended") + " transfer to: " + to;
    hangup(false,message,new ReasonPacketExtension(Reason.SUCCESS,message,new TransferredPacketExtension()));
  }
}
