{
  DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
  XMLUtils.disableExternalEntities(factory);
  DocumentBuilder builder;
  try {
    builder=factory.newDocumentBuilder();
    InputStream in=new ByteArrayInputStream(xml.getBytes());
    Document doc=builder.parse(in);
    Element e=doc.getDocumentElement();
    String elementName=e.getNodeName();
    if (elementName.equals("text")) {
      String id=e.getAttribute("id");
      double x=Double.parseDouble(e.getAttribute("x"));
      double y=Double.parseDouble(e.getAttribute("y"));
      String fill=e.getAttribute("fill");
      String fontFamily=e.getAttribute("font-family");
      int fontSize=Integer.parseInt(e.getAttribute("font-size"));
      String text=e.getTextContent();
      this.setID(id);
      this.setWhiteboardPoint(new WhiteboardPoint(x,y));
      this.setFontName(fontFamily);
      this.setFontSize(fontSize);
      this.setText(text);
      this.setColor(Color.decode(fill).getRGB());
    }
  }
 catch (  ParserConfigurationException ex) {
    if (logger.isDebugEnabled())     logger.debug("Problem WhiteboardObject : " + xml);
  }
catch (  IOException ex) {
    if (logger.isDebugEnabled())     logger.debug("Problem WhiteboardObject : " + xml);
  }
catch (  Exception ex) {
    if (logger.isDebugEnabled())     logger.debug("Problem WhiteboardObject : " + xml);
  }
}
