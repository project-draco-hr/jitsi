{
  if (t.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {
    Object o=null;
    try {
      o=t.getTransferData(DataFlavor.javaFileListFlavor);
    }
 catch (    UnsupportedFlavorException e) {
      if (logger.isDebugEnabled())       logger.debug("Failed to drop files.",e);
    }
catch (    IOException e) {
      if (logger.isDebugEnabled())       logger.debug("Failed to drop files.",e);
    }
    if (o instanceof Collection) {
      ChatPanel chatPanel=getChatPanel();
      if (chatPanel != null) {
        Collection<File> files=(Collection<File>)o;
        for (        File file : files) {
          chatPanel.sendFile(file);
          GuiActivator.getUIService().getChatWindowManager().openChat(chatPanel,false);
        }
        return true;
      }
    }
  }
 else   if (t.isDataFlavorSupported(uiContactDataFlavor)) {
    Object o=null;
    try {
      o=t.getTransferData(uiContactDataFlavor);
    }
 catch (    UnsupportedFlavorException e) {
      if (logger.isDebugEnabled())       logger.debug("Failed to drop meta contact.",e);
    }
catch (    IOException e) {
      if (logger.isDebugEnabled())       logger.debug("Failed to drop meta contact.",e);
    }
    if (o instanceof ContactNode && comp instanceof TreeContactList) {
      UIContact transferredContact=((ContactNode)o).getContactDescriptor();
      if (!(transferredContact instanceof MetaUIContact))       return false;
      TreeContactList list=(TreeContactList)comp;
      Object dest=list.getSelectedValue();
      if (transferredContact == null)       return false;
      if (transferredContact.getDescriptor() instanceof MetaContact) {
        MetaContact metaContact=(MetaContact)transferredContact.getDescriptor();
        boolean onlyReadonlyContacts=true;
        Iterator<Contact> iter=metaContact.getContacts();
        while (iter.hasNext()) {
          Contact c=iter.next();
          ProtocolProviderService pp=c.getProtocolProvider();
          OperationSetPersistentPresencePermissions opsetPermissions=pp.getOperationSet(OperationSetPersistentPresencePermissions.class);
          if (opsetPermissions == null || !opsetPermissions.isReadOnly(c)) {
            onlyReadonlyContacts=false;
            break;
          }
        }
        if (onlyReadonlyContacts)         return false;
      }
      if (dest instanceof ContactNode) {
        UIContact destContact=((ContactNode)dest).getContactDescriptor();
        if (!(destContact instanceof MetaUIContact))         return false;
        if (transferredContact != destContact) {
          String mergeEnabledStr=GuiActivator.getResources().getSettingsString("impl.gui.dnd.MERGE_ENABLED");
          if (mergeEnabledStr != null && !Boolean.parseBoolean(mergeEnabledStr)) {
            UIGroup destGroup=destContact.getParentGroup();
            if (destGroup == null || !(destGroup instanceof MetaUIGroup) || (ConfigurationUtils.isContactMoveDisabled() || ConfigurationUtils.isCreateGroupDisabled()))             return false;
            MetaContactListManager.moveMetaContactToGroup((MetaContact)transferredContact.getDescriptor(),(MetaContactGroup)destGroup.getDescriptor());
          }
 else {
            if (!ConfigurationUtils.isAddContactDisabled()) {
              MetaContactListManager.moveMetaContactToMetaContact((MetaContact)transferredContact.getDescriptor(),(MetaContact)destContact.getDescriptor());
            }
          }
        }
        return true;
      }
 else       if (dest instanceof GroupNode) {
        UIGroup destGroup=((GroupNode)dest).getGroupDescriptor();
        if (!(destGroup instanceof MetaUIGroup))         return false;
        if (!transferredContact.getParentGroup().equals(destGroup) && !(ConfigurationUtils.isContactMoveDisabled() && ConfigurationUtils.isCreateGroupDisabled())) {
          MetaContactListManager.moveMetaContactToGroup((MetaContact)transferredContact.getDescriptor(),(MetaContactGroup)destGroup.getDescriptor());
        }
        return true;
      }
    }
  }
  return false;
}
