{
  if (command == null) {
    throw new IllegalArgumentException("command cannot be null");
  }
  final Class<? extends Command> type=COMMANDS.get(command);
  if (type == null) {
    throw new UnsupportedCommandException(command);
  }
  final Command cmd;
  try {
    cmd=type.newInstance();
    cmd.init(this.provider,this.connection);
    return cmd;
  }
 catch (  InstantiationException ex) {
    throw new IllegalStateException("A bad command implementation has been registered. It fails" + " to instantiate.",ex);
  }
catch (  IllegalAccessException ex) {
    throw new IllegalStateException("A bad command implementation has been registered. It does " + "not allow access to its constructor and therefore cannot" + " be instantiated.",ex);
  }
}
