{
  if (remoteAddress == null) {
    throw new IllegalArgumentException("Remote address may not be null");
  }
  if (params == null) {
    throw new IllegalArgumentException("HTTP parameters may not be null");
  }
  Socket sock=socket != null ? socket : this.context.getSocketFactory().createSocket();
  if (localAddress != null) {
    sock.setReuseAddress(HttpConnectionParams.getSoReuseaddr(params));
    sock.bind(localAddress);
  }
  int connTimeout=HttpConnectionParams.getConnectionTimeout(params);
  int soTimeout=HttpConnectionParams.getSoTimeout(params);
  try {
    sock.setSoTimeout(soTimeout);
    sock.connect(remoteAddress,connTimeout);
  }
 catch (  SocketTimeoutException ex) {
    throw new ConnectTimeoutException("Connect to " + remoteAddress + " timed out");
  }
  String hostname;
  if (remoteAddress instanceof HttpInetSocketAddress) {
    hostname=((HttpInetSocketAddress)remoteAddress).getHttpHost().getHostName();
  }
 else {
    hostname=remoteAddress.getHostName();
  }
  SSLSocket sslsock;
  if (sock instanceof SSLSocket) {
    sslsock=(SSLSocket)sock;
  }
 else {
    int port=remoteAddress.getPort();
    sslsock=(SSLSocket)this.context.getSocketFactory().createSocket(sock,hostname,port,true);
  }
  return sslsock;
}
