{
  Object o=Toolkit.getDefaultToolkit().getDesktopProperty("awt.multiClickInterval");
  final int doubleClickSpeed=(o instanceof Integer ? ((Integer)o).intValue() : 500);
  menu=TrayMenuFactory.createTrayMenu(this,systray.isSwing());
  String osName=System.getProperty("os.name");
  if (osName.startsWith("Windows")) {
    logoIcon=Resources.getImage("service.systray.TRAY_ICON_WINDOWS");
    logoIconOffline=Resources.getImage("service.systray.TRAY_ICON_WINDOWS_OFFLINE");
    logoIconAway=Resources.getImage("service.systray.TRAY_ICON_WINDOWS_AWAY");
    logoIconFFC=Resources.getImage("service.systray.TRAY_ICON_WINDOWS_FFC");
    envelopeIcon=Resources.getImage("service.systray.MESSAGE_ICON_WINDOWS");
  }
 else   if (osName.startsWith("Mac OS X")) {
    logoIcon=Resources.getImage("service.systray.TRAY_ICON_MACOSX");
    logoIconWhite=Resources.getImage("service.systray.TRAY_ICON_MACOSX_WHITE");
    envelopeIcon=Resources.getImage("service.systray.MESSAGE_ICON_MACOSX");
    envelopeIconWhite=Resources.getImage("service.systray.MESSAGE_ICON_MACOSX_WHITE");
  }
 else {
    logoIcon=Resources.getImage("service.systray.TRAY_ICON");
    logoIconOffline=Resources.getImage("service.systray.TRAY_ICON_OFFLINE");
    logoIconAway=Resources.getImage("service.systray.TRAY_ICON_AWAY");
    logoIconFFC=Resources.getImage("service.systray.TRAY_ICON_FFC");
    envelopeIcon=Resources.getImage("service.systray.MESSAGE_ICON");
  }
  if (!osName.startsWith("Mac OS X")) {
    currentIcon=logoIconOffline;
  }
 else   currentIcon=logoIcon;
  trayIcon=new TrayIcon(currentIcon,Resources.getApplicationString("service.gui.APPLICATION_NAME"),menu);
  trayIcon.setIconAutoSize(true);
  if (osName.startsWith("Mac OS X")) {
    dockIconOffline=Resources.getImageURL("service.systray.DOCK_ICON_OFFLINE");
    dockIconAway=Resources.getImageURL("service.systray.DOCK_ICON_AWAY");
    dockIconFFC=Resources.getImageURL("service.systray.DOCK_ICON_FFC");
  }
  trayIcon.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      long currentTime=System.currentTimeMillis();
      UIService uiService=SystrayActivator.getUIService();
      boolean isVisible=!uiService.isVisible();
      if (isVisible) {
        setVisibleTime=currentTime;
      }
 else       if (currentTime < (setVisibleTime + doubleClickSpeed)) {
        return;
      }
      uiService.setVisible(isVisible);
      configService.setProperty("net.java.sip.communicator.impl.systray.showApplication",Boolean.toString(isVisible));
    }
  }
);
  if (osName.startsWith("Mac OS X")) {
    TrayMenuFactory.addPopupMenuListener(menu,new PopupMenuListener(){
      public void popupMenuWillBecomeVisible(      PopupMenuEvent e){
        if (currentIcon == envelopeIcon) {
          trayIcon.setIcon(envelopeIconWhite);
          currentIcon=envelopeIconWhite;
        }
 else {
          trayIcon.setIcon(logoIconWhite);
          currentIcon=logoIconWhite;
        }
      }
      public void popupMenuWillBecomeInvisible(      PopupMenuEvent e){
        if (currentIcon == envelopeIconWhite) {
          trayIcon.setIcon(envelopeIcon);
          currentIcon=envelopeIcon;
        }
 else {
          getTrayIcon().setIcon(logoIcon);
          currentIcon=logoIcon;
        }
      }
      public void popupMenuCanceled(      PopupMenuEvent e){
        popupMenuWillBecomeInvisible(e);
      }
    }
);
  }
  PopupMessageHandler pph=new PopupMessageHandlerTrayIconImpl(trayIcon);
  popupHandlerSet.put(pph.getClass().getName(),pph);
  SystrayActivator.bundleContext.registerService(PopupMessageHandler.class.getName(),pph,null);
  try {
    SystrayActivator.bundleContext.addServiceListener(new ServiceListenerImpl(),"(objectclass=" + PopupMessageHandler.class.getName() + ")");
  }
 catch (  Exception e) {
    logger.warn(e);
  }
  ServiceReference[] handlerRefs=null;
  try {
    handlerRefs=SystrayActivator.bundleContext.getServiceReferences(PopupMessageHandler.class.getName(),null);
  }
 catch (  InvalidSyntaxException ex) {
    logger.error("Error while retrieving service refs",ex);
  }
  if (handlerRefs != null) {
    for (int i=0; i < handlerRefs.length; i++) {
      PopupMessageHandler handler=(PopupMessageHandler)SystrayActivator.bundleContext.getService(handlerRefs[i]);
      String handlerName=handler.getClass().getName();
      if (!popupHandlerSet.containsKey(handlerName)) {
        popupHandlerSet.put(handlerName,handler);
        logger.info("added the following popup handler : " + handler);
        String configuredHandler=(String)configService.getProperty("systray.POPUP_HANDLER");
        if (configuredHandler.equals(handler.getClass().getName()))         setActivePopupMessageHandler(handler);
      }
    }
  }
  if (activePopupHandler == null) {
    setActivePopupMessageHandler(pph);
  }
  systray.addTrayIcon(trayIcon);
  initialized=true;
}
