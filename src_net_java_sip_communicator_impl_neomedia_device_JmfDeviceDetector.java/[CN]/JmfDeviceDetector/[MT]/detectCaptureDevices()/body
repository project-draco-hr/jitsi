{
  logger.info("Looking for Audio capturer");
  try {
    new JavaSoundAuto();
  }
 catch (  Throwable exc) {
    logger.debug("No JMF javasound detected: " + exc.getMessage());
  }
  try {
    new FMJJavaSoundAuto();
  }
 catch (  Throwable exc) {
    logger.debug("No FMJ javasound detected: " + exc.getMessage());
  }
  try {
    new PortAudioAuto();
  }
 catch (  Throwable exc) {
    logger.info("No portaudio detected: " + exc.getMessage());
  }
  DeviceConfiguration.addAudioSystem(DeviceConfiguration.AUDIO_SYSTEM_NONE);
  if (NeomediaActivator.getConfigurationService().getBoolean(MediaServiceImpl.DISABLE_VIDEO_SUPPORT_PROPERTY_NAME,false))   return;
  logger.info("Looking for video capture devices");
  boolean fmjVideoAvailable=isFMJVideoAvailable();
  try {
    if (fmjVideoAvailable)     new FMJCivilVideoAuto();
  }
 catch (  Throwable exc) {
    logger.debug("No FMJ CIVIL video detected: " + exc.getMessage(),exc);
    fmjVideoAvailable=false;
  }
  if (OSUtils.IS_MAC) {
    try {
      new QuickTimeAuto();
    }
 catch (    Throwable t) {
      logger.debug("No QuickTime detected: " + t.getMessage(),t);
    }
  }
 else   if (OSUtils.IS_LINUX) {
    try {
      new Video4Linux2Auto();
    }
 catch (    Throwable t) {
      logger.debug("No Video4Linux2 detected: " + t.getMessage(),t);
    }
  }
 else   if (OSUtils.IS_WINDOWS) {
    try {
      new DirectShowAuto();
    }
 catch (    Throwable t) {
      logger.debug("No DirectShow detected: " + t.getMessage(),t);
    }
  }
  try {
    new ImageStreamingAuto();
  }
 catch (  Throwable exc) {
    logger.debug("No desktop streaming available: " + exc.getMessage(),exc);
  }
}
