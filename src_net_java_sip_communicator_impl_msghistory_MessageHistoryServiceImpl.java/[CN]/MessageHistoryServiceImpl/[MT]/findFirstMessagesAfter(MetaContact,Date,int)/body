{
  LinkedList<EventObject> result=new LinkedList<EventObject>();
  Iterator<Contact> iter=contact.getContacts();
  while (iter.hasNext()) {
    Contact item=iter.next();
    try {
      History history=this.getHistory(null,item);
      HistoryReader reader=history.getReader();
      Iterator<HistoryRecord> recs=reader.findFirstRecordsAfter(date,count + 4);
      while (recs.hasNext()) {
        result.add(convertHistoryRecordToMessageEvent(recs.next(),item));
      }
    }
 catch (    IOException e) {
      logger.error("Could not read history",e);
    }
  }
  int startIx=0;
  Iterator<EventObject> i=result.iterator();
  boolean isRecordOK=false;
  while (i.hasNext() && !isRecordOK) {
    Object object=i.next();
    if (object instanceof MessageDeliveredEvent) {
      isRecordOK=(((MessageDeliveredEvent)object).getTimestamp().getTime() > date.getTime());
    }
 else     if (object instanceof MessageReceivedEvent) {
      isRecordOK=(((MessageReceivedEvent)object).getTimestamp().getTime() > date.getTime());
    }
    if (!isRecordOK)     startIx++;
  }
  Collections.sort(result,new MessageEventComparator<EventObject>());
  int toIndex=startIx + count;
  if (toIndex > result.size())   toIndex=result.size();
  return result.subList(startIx,toIndex);
}
