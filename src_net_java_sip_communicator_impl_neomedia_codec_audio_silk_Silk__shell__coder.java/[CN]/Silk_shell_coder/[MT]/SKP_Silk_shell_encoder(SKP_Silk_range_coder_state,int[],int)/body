{
  int[] pulses1=new int[8], pulses2=new int[4], pulses3=new int[2], pulses4=new int[1];
  assert(Silk_define.SHELL_CODEC_FRAME_LENGTH == 16);
  combine_pulses(pulses1,0,pulses0,pulses0_offset,8);
  combine_pulses(pulses2,0,pulses1,0,4);
  combine_pulses(pulses3,0,pulses2,0,2);
  combine_pulses(pulses4,0,pulses3,0,1);
  encode_split(sRC,pulses3[0],pulses4[0],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table3);
  encode_split(sRC,pulses2[0],pulses3[0],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table2);
  encode_split(sRC,pulses1[0],pulses2[0],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table1);
  encode_split(sRC,pulses0[pulses0_offset + 0],pulses1[0],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  encode_split(sRC,pulses0[pulses0_offset + 2],pulses1[1],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  encode_split(sRC,pulses1[2],pulses2[1],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table1);
  encode_split(sRC,pulses0[pulses0_offset + 4],pulses1[2],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  encode_split(sRC,pulses0[pulses0_offset + 6],pulses1[3],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  encode_split(sRC,pulses2[2],pulses3[1],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table2);
  encode_split(sRC,pulses1[4],pulses2[2],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table1);
  encode_split(sRC,pulses0[pulses0_offset + 8],pulses1[4],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  encode_split(sRC,pulses0[pulses0_offset + 10],pulses1[5],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  encode_split(sRC,pulses1[6],pulses2[3],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table1);
  encode_split(sRC,pulses0[pulses0_offset + 12],pulses1[6],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  encode_split(sRC,pulses0[pulses0_offset + 14],pulses1[7],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
}
