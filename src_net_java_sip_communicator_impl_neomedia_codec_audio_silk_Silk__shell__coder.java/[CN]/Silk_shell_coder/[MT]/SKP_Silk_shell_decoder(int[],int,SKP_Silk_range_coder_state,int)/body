{
  int[] pulses3=new int[2], pulses2=new int[4], pulses1=new int[8];
  Silk_typedef.SKP_assert(Silk_define.SHELL_CODEC_FRAME_LENGTH == 16);
  decode_split(pulses3,0,pulses3,1,sRC,pulses4,Silk_tables_pulses_per_block.SKP_Silk_shell_code_table3);
  decode_split(pulses2,0,pulses2,1,sRC,pulses3[0],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table2);
  decode_split(pulses1,0,pulses1,1,sRC,pulses2[0],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table1);
  decode_split(pulses0,pulses0_offset + 0,pulses0,pulses0_offset + 1,sRC,pulses1[0],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  decode_split(pulses0,pulses0_offset + 2,pulses0,pulses0_offset + 3,sRC,pulses1[1],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  decode_split(pulses1,2,pulses1,3,sRC,pulses2[1],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table1);
  decode_split(pulses0,pulses0_offset + 4,pulses0,pulses0_offset + 5,sRC,pulses1[2],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  decode_split(pulses0,pulses0_offset + 6,pulses0,pulses0_offset + 7,sRC,pulses1[3],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  decode_split(pulses2,2,pulses2,3,sRC,pulses3[1],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table2);
  decode_split(pulses1,4,pulses1,5,sRC,pulses2[2],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table1);
  decode_split(pulses0,pulses0_offset + 8,pulses0,pulses0_offset + 9,sRC,pulses1[4],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  decode_split(pulses0,pulses0_offset + 10,pulses0,pulses0_offset + 11,sRC,pulses1[5],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  decode_split(pulses1,6,pulses1,7,sRC,pulses2[3],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table1);
  decode_split(pulses0,pulses0_offset + 12,pulses0,pulses0_offset + 13,sRC,pulses1[6],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
  decode_split(pulses0,pulses0_offset + 14,pulses0,pulses0_offset + 15,sRC,pulses1[7],Silk_tables_pulses_per_block.SKP_Silk_shell_code_table0);
}
