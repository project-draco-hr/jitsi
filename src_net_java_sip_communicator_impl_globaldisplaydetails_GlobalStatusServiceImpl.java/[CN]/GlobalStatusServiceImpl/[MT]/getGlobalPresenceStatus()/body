{
  int status=0;
  Collection<ProtocolProviderService> pProviders=AccountUtils.getRegisteredProviders();
  if (pProviders == null || pProviders.size() <= 0)   return getPresenceStatus(status);
  Iterator<ProtocolProviderService> providersIter=pProviders.iterator();
  boolean hasAvailableProvider=false;
  while (providersIter.hasNext()) {
    ProtocolProviderService protocolProvider=providersIter.next();
    boolean isProtocolHidden=protocolProvider.getAccountID().getAccountProperty(ProtocolProviderFactory.IS_PROTOCOL_HIDDEN) != null;
    if (isProtocolHidden)     continue;
    if (!protocolProvider.isRegistered())     continue;
    OperationSetPresence presence=protocolProvider.getOperationSet(OperationSetPresence.class);
    if (presence == null) {
      hasAvailableProvider=true;
      continue;
    }
    int presenceStatus=(presence == null) ? PresenceStatus.AVAILABLE_THRESHOLD : presence.getPresenceStatus().getStatus();
    if (status < presenceStatus)     status=presenceStatus;
  }
  if (status == 0 && hasAvailableProvider)   status=PresenceStatus.AVAILABLE_THRESHOLD;
  return getPresenceStatus(status);
}
