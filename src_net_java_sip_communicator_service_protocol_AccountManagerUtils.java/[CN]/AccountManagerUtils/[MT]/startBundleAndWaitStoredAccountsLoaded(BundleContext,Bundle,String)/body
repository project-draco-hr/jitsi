{
  AccountManager accountManager=getAccountManager(bundleContextWithAccountManager);
  final boolean[] storedAccountsAreLoaded=new boolean[1];
  AccountManagerListener listener=new AccountManagerListener(){
    public void handleAccountManagerEvent(    AccountManagerEvent event){
      if (AccountManagerEvent.STORED_ACCOUNTS_LOADED != event.getType())       return;
      ProtocolProviderFactory factory=event.getFactory();
      if ((factory != null) && !protocolNameToWait.equals(factory.getProtocolName()))       return;
      if (factory != null) {
        BundleContext bundleContext=bundleToStart.getBundleContext();
        if (bundleContext == null)         return;
        Collection<ServiceReference<ProtocolProviderFactory>> factoryRefs;
        try {
          factoryRefs=bundleContext.getServiceReferences(ProtocolProviderFactory.class,"(" + ProtocolProviderFactory.PROTOCOL + "="+ protocolNameToWait+ ")");
        }
 catch (        InvalidSyntaxException isex) {
          factoryRefs=null;
        }
        if ((factoryRefs != null) && !factoryRefs.isEmpty()) {
          boolean factoryIsRegistered=false;
          for (          ServiceReference<ProtocolProviderFactory> factoryRef : factoryRefs) {
            if (factory == bundleContext.getService(factoryRef)) {
              factoryIsRegistered=true;
              break;
            }
          }
          if (!factoryIsRegistered)           return;
        }
      }
synchronized (storedAccountsAreLoaded) {
        storedAccountsAreLoaded[0]=true;
        storedAccountsAreLoaded.notify();
      }
    }
  }
;
  accountManager.addListener(listener);
  try {
    bundleToStart.start();
    while (true) {
synchronized (storedAccountsAreLoaded) {
        if (storedAccountsAreLoaded[0]) {
          break;
        }
        storedAccountsAreLoaded.wait();
      }
    }
  }
  finally {
    accountManager.removeListener(listener);
  }
}
