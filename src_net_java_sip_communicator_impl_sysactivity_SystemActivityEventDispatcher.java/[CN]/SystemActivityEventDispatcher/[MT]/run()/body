{
  try {
    stopped=false;
    while (!stopped) {
      Map.Entry<SystemActivityEvent,Integer> eventToProcess=null;
      List<SystemActivityChangeListener> listenersCopy;
synchronized (eventsToDispatch) {
        if (eventsToDispatch.size() == 0) {
          try {
            eventsToDispatch.wait();
          }
 catch (          InterruptedException iex) {
          }
        }
        if (listeners.size() == 0)         continue;
        listenersCopy=new ArrayList<SystemActivityChangeListener>(listeners);
        Iterator<Map.Entry<SystemActivityEvent,Integer>> iter=eventsToDispatch.entrySet().iterator();
        if (iter.hasNext()) {
          eventToProcess=iter.next();
          iter.remove();
        }
      }
      if (eventToProcess != null && listenersCopy != null) {
        if (eventToProcess.getValue() > 0) synchronized (this) {
          try {
            wait(eventToProcess.getValue());
          }
 catch (          Throwable t) {
          }
        }
        for (int i=0; i < listenersCopy.size(); i++) {
          fireSystemActivityEvent(eventToProcess.getKey(),listenersCopy.get(i));
        }
      }
      eventToProcess=null;
      listenersCopy=null;
    }
  }
 catch (  Throwable t) {
    logger.error("Error dispatching thread ended unexpectedly",t);
  }
}
