{
  String userID=null;
  char[] password=null;
  String serverAddress=null;
  String serverPort=null;
  if (accountPanel.isCreateAccount()) {
    NewAccount newAccount=getCreateAccountService().createAccount();
    if (newAccount != null) {
      userID=newAccount.getUserName();
      password=newAccount.getPassword();
      serverAddress=newAccount.getServerAddress();
      serverPort=newAccount.getServerPort();
      if (serverAddress == null)       setServerFieldAccordingToUIN(userID);
    }
 else {
      return false;
    }
  }
 else {
    userID=accountPanel.getUsername();
    if (userID == null || userID.trim().length() == 0)     throw new IllegalStateException("No user ID provided.");
    if (userID.indexOf('@') < 0 && registration.getDefaultUserSufix() != null)     userID=userID + '@' + registration.getDefaultUserSufix();
    password=accountPanel.getPassword();
    serverAddress=connectionPanel.getServerAddress();
    serverPort=connectionPanel.getServerPort();
  }
  registration.setUserID(userID);
  registration.setPassword(new String(password));
  registration.setRememberPassword(accountPanel.isRememberPassword());
  registration.setClientCertificateId(connectionPanel.getClientTlsCertificateId());
  registration.setServerAddress(serverAddress);
  registration.setServerOverridden(connectionPanel.isServerOverridden());
  registration.setSendKeepAlive(connectionPanel.isSendKeepAlive());
  registration.setGmailNotificationEnabled(connectionPanel.isGmailNotificationsEnabled());
  registration.setGoogleContactsEnabled(connectionPanel.isGoogleContactsEnabled());
  registration.setResourceAutogenerated(connectionPanel.isAutogenerateResourceEnabled());
  registration.setResource(connectionPanel.getResource());
  if (serverPort != null)   registration.setPort(Integer.parseInt(serverPort));
  String priority=connectionPanel.getPriority();
  if (priority != null)   registration.setPriority(Integer.parseInt(priority));
  registration.setDTMFMethod(connectionPanel.getDTMFMethod());
  registration.setDtmfMinimalToneDuration(connectionPanel.getDtmfMinimalToneDuration());
  securityPanel.commitPanel(registration);
  registration.setUseIce(iceConfigPanel.isUseIce());
  registration.setUseGoogleIce(iceConfigPanel.isUseGoogleIce());
  registration.setAutoDiscoverStun(iceConfigPanel.isAutoDiscoverStun());
  registration.setUseDefaultStunServer(iceConfigPanel.isUseDefaultStunServer());
  registration.getAdditionalStunServers().clear();
  List<StunServerDescriptor> stunServers=iceConfigPanel.getAdditionalStunServers();
  for (  StunServerDescriptor descriptor : stunServers)   registration.addStunServer(descriptor);
  registration.setUseJingleNodes(iceConfigPanel.isUseJingleNodes());
  registration.setAutoDiscoverJingleNodes(iceConfigPanel.isAutoDiscoverJingleNodes());
  registration.getAdditionalJingleNodes().clear();
  List<JingleNodeDescriptor> jingleNodes=iceConfigPanel.getAdditionalJingleNodes();
  for (  JingleNodeDescriptor descriptor : jingleNodes)   registration.addJingleNodes(descriptor);
  registration.setUseUPNP(iceConfigPanel.isUseUPNP());
  registration.setAllowNonSecure(connectionPanel.isAllowNonSecure());
  registration.setDisableJingle(telephonyConfigPanel.isJingleDisabled());
  registration.setTelephonyDomainBypassCaps(telephonyConfigPanel.getTelephonyDomainBypassCaps());
  registration.setOverridePhoneSufix(telephonyConfigPanel.getTelephonyDomain());
  encodingsPanel.commitPanel(registration);
  return true;
}
