{
  Bundle providerBundle=RssSlickFixture.providerBundle;
  providerBundle.stop();
  assertTrue("Couldn't stop the protocol provider bundle. State was" + providerBundle.getState(),providerBundle.getState() != Bundle.ACTIVE && providerBundle.getState() != Bundle.STOPPING);
  providerBundle.uninstall();
  assertEquals("Couldn't stop the protocol provider bundle.",providerBundle.getState(),Bundle.UNINSTALLED);
  providerBundle=RssSlickFixture.bc.installBundle(providerBundle.getLocation());
  assertEquals("Couldn't reinstall protocol provider bundle.",providerBundle.getState(),Bundle.INSTALLED);
  providerBundle.start();
  assertEquals("Couldn't restart protocol provider bundle.",providerBundle.getState(),Bundle.ACTIVE);
  ServiceReference[] providerRefs=null;
  try {
    providerRefs=RssSlickFixture.bc.getServiceReferences(ProtocolProviderService.class.getName(),"(" + ProtocolProviderFactory.PROTOCOL + "="+ ProtocolNames.RSS+ ")");
  }
 catch (  InvalidSyntaxException ise) {
    fail("OSGi filter is wrong. Error was: " + ise.getMessage());
  }
  assertTrue("An RSS protocol provider service was still registered as an" + " OSGi service even after being explicitly uninstalled",providerRefs == null || providerRefs.length == 0);
  ServiceReference confRef=RssSlickFixture.bc.getServiceReference(ConfigurationService.class.getName());
  ConfigurationService confServ=(ConfigurationService)RssSlickFixture.bc.getService(confRef);
  confServ.purgeStoredConfiguration();
}
