{
  final SimpleDateFormat format=new SimpleDateFormat("mm:ss");
  final Calendar c=Calendar.getInstance();
  final JLabel counter=new JLabel();
  counter.setForeground(Color.red);
  counter.setFont(counter.getFont().deriveFont((float)(counter.getFont().getSize() + 5)));
  setLayout(new GridBagLayout());
  setBorder(BorderFactory.createEmptyBorder(20,20,20,20));
  GridBagConstraints constraints=new GridBagConstraints();
  JLabel messageLabel=new JLabel(GuiActivator.getResources().getI18NString("service.gui.security.SECURITY_ALERT"));
  messageLabel.setForeground(Color.WHITE);
  constraints.anchor=GridBagConstraints.CENTER;
  constraints.fill=GridBagConstraints.NONE;
  constraints.gridx=0;
  constraints.gridy=0;
  add(messageLabel,constraints);
  constraints.anchor=GridBagConstraints.CENTER;
  constraints.fill=GridBagConstraints.NONE;
  constraints.gridx=0;
  constraints.gridy=1;
  add(counter,constraints);
  ZrtpControl zrtpControl=null;
  if (securityControl instanceof ZrtpControl)   zrtpControl=(ZrtpControl)securityControl;
  long initialSeconds=0;
  if (zrtpControl != null)   initialSeconds=zrtpControl.getTimeoutValue();
  c.setTimeInMillis(initialSeconds);
  counter.setText(format.format(c.getTime()));
  if (initialSeconds > 0)   timer.schedule(new TimerTask(){
    @Override public void run(){
      if (c.getTimeInMillis() - 1000 > 0) {
        c.add(Calendar.SECOND,-1);
        counter.setText(format.format(c.getTime()));
      }
    }
  }
,1000,1000);
}
