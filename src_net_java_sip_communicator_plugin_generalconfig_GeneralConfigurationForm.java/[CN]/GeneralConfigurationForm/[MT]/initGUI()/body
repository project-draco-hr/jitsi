{
  BorderLayout borderLayout=new BorderLayout();
  this.setBorder(BorderFactory.createEmptyBorder(20,20,20,20));
  this.setLayout(borderLayout);
  setPreferredSize(new Dimension(500,300));
{
    mainPanel=new JPanel();
    BoxLayout boxLayout=new BoxLayout(mainPanel,javax.swing.BoxLayout.Y_AXIS);
    mainPanel.setLayout(boxLayout);
    this.add(mainPanel,BorderLayout.NORTH);
    String osName=System.getProperty("os.name");
    if (osName.startsWith("Windows")) {
      autoStartCheckBox=new JCheckBox();
      mainPanel.add(autoStartCheckBox);
      mainPanel.add(Box.createVerticalStrut(10));
      autoStartCheckBox.setText(Resources.getString("autoStartOption"));
      initAutoStartCheckBox();
      autoStartCheckBox.addActionListener(this);
    }
{
      groupMessagesCheckBox=new JCheckBox();
      mainPanel.add(groupMessagesCheckBox);
      mainPanel.add(Box.createVerticalStrut(10));
      groupMessagesCheckBox.setText(Resources.getString("groupChatMessages"));
      groupMessagesCheckBox.addActionListener(this);
    }
{
      logHistoryPanel=new JPanel();
      mainPanel.add(logHistoryPanel);
      mainPanel.add(Box.createVerticalStrut(10));
      logHistoryPanel.setLayout(null);
      logHistoryPanel.setPreferredSize(new java.awt.Dimension(380,57));
      logHistoryPanel.setAlignmentX(0.0f);
{
        logHistoryCheckBox=new JCheckBox();
        logHistoryPanel.add(logHistoryCheckBox);
        logHistoryCheckBox.setText(Resources.getString("logHistory"));
        logHistoryCheckBox.setBounds(0,0,200,19);
        logHistoryCheckBox.addActionListener(this);
        logHistoryCheckBox.addChangeListener(new ChangeListener(){
          public void stateChanged(          ChangeEvent e){
            showHistoryCheckBox.setEnabled(logHistoryCheckBox.isSelected());
            historySizeSpinner.setEnabled(logHistoryCheckBox.isSelected());
          }
        }
);
      }
{
        showHistoryCheckBox=new JCheckBox();
        logHistoryPanel.add(showHistoryCheckBox);
        showHistoryCheckBox.setText(Resources.getString("showHistory"));
        showHistoryCheckBox.setBounds(17,25,140,19);
        showHistoryCheckBox.addActionListener(this);
        showHistoryCheckBox.addChangeListener(new ChangeListener(){
          public void stateChanged(          ChangeEvent e){
            historySizeSpinner.setEnabled(showHistoryCheckBox.isSelected());
          }
        }
);
      }
{
        SpinnerNumberModel historySizeSpinnerModel=new SpinnerNumberModel(0,0,100,1);
        historySizeSpinner=new JSpinner();
        logHistoryPanel.add(historySizeSpinner);
        historySizeSpinner.setModel(historySizeSpinnerModel);
        historySizeSpinner.setBounds(150,23,47,22);
        historySizeSpinnerModel.addChangeListener(new ChangeListener(){
          public void stateChanged(          ChangeEvent e){
            ConfigurationManager.setChatHistorySize(((Integer)historySizeSpinner.getValue()).intValue());
          }
        }
);
      }
{
        historySizeLabel=new JLabel();
        logHistoryPanel.add(historySizeLabel);
        historySizeLabel.setText(Resources.getString("historySize"));
        historySizeLabel.setBounds(205,27,220,15);
      }
    }
{
      sendMessagePanel=new JPanel();
      BorderLayout sendMessagePanelLayout=new BorderLayout(10,10);
      sendMessagePanel.setLayout(sendMessagePanelLayout);
      mainPanel.add(sendMessagePanel);
      mainPanel.add(Box.createVerticalStrut(10));
      sendMessagePanel.setAlignmentX(0.0f);
      sendMessagePanel.setPreferredSize(new java.awt.Dimension(380,22));
{
        sendMessageLabel=new JLabel();
        sendMessagePanel.add(sendMessageLabel,BorderLayout.WEST);
        sendMessageLabel.setText(Resources.getString("sendMessagesWith"));
      }
{
        ComboBoxModel sendMessageComboBoxModel=new DefaultComboBoxModel(new String[]{ConfigurationManager.ENTER_COMMAND,ConfigurationManager.CTRL_ENTER_COMMAND});
        sendMessageComboBox=new JComboBox();
        sendMessagePanel.add(sendMessageComboBox,BorderLayout.CENTER);
        sendMessageComboBox.setModel(sendMessageComboBoxModel);
        sendMessageComboBox.addItemListener(new ItemListener(){
          public void itemStateChanged(          ItemEvent arg0){
            ConfigurationManager.setSendMessageCommand((String)sendMessageComboBox.getSelectedItem());
          }
        }
);
      }
    }
{
      enableTypingNotifiCheckBox=new JCheckBox();
      enableTypingNotifiCheckBox.setLayout(null);
      mainPanel.add(enableTypingNotifiCheckBox);
      mainPanel.add(Box.createVerticalStrut(10));
      enableTypingNotifiCheckBox.setText(Resources.getString("enableTypingNotifications"));
      enableTypingNotifiCheckBox.setPreferredSize(new java.awt.Dimension(253,20));
      enableTypingNotifiCheckBox.setAlignmentY(0.0f);
      enableTypingNotifiCheckBox.addActionListener(this);
    }
{
      bringToFrontCheckBox=new JCheckBox();
      mainPanel.add(bringToFrontCheckBox);
      mainPanel.add(Box.createVerticalStrut(10));
      bringToFrontCheckBox.setText(Resources.getString("bringWindowToFront"));
      bringToFrontCheckBox.addActionListener(this);
    }
  }
}
