{
  int nbEncryptionProtocols=ENCRYPTION_PROTOCOLS.size();
  String[] encryptions=new String[nbEncryptionProtocols];
  boolean[] selectedEncryptions=new boolean[nbEncryptionProtocols];
  for (  Map.Entry<String,Integer> e : encryptionProtocols.entrySet()) {
    int index=e.getValue();
    if (index != -1) {
      String name=e.getKey();
      if (isExistingEncryptionProtocol(name)) {
        encryptions[index]=name;
        selectedEncryptions[index]=encryptionProtocolStatus.get(name);
      }
    }
  }
  int j=0;
  for (  String encryptionProtocol : ENCRYPTION_PROTOCOLS) {
    if (!encryptionProtocols.containsKey(encryptionProtocol)) {
      boolean set=false;
      while (j < encryptions.length && !set) {
        if (encryptions[j] == null) {
          encryptions[j]=encryptionProtocol;
          selectedEncryptions[j]=encryptionProtocol.equals("ZRTP");
          set=true;
        }
        ++j;
      }
    }
  }
  return new Object[]{encryptions,selectedEncryptions};
}
