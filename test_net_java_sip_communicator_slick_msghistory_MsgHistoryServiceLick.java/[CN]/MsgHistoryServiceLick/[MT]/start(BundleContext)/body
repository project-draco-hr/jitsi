{
  MsgHistoryServiceLick.bc=bundleContext;
  setName("MsgHistoryServiceLick");
  Hashtable properties=new Hashtable();
  properties.put("service.pid",getName());
  addTestSuite(TestMsgHistoryService.class);
  bundleContext.registerService(getClass().getName(),this,properties);
  logger.debug("Successfully registered " + getClass().getName());
  MockProvider provider=new MockProvider("SlickMockUser");
  Map supportedOperationSets=provider.getSupportedOperationSets();
  MsgHistoryServiceLick.mockPresOpSet=(MockPersistentPresenceOperationSet)supportedOperationSets.get(OperationSetPersistentPresence.class.getName());
  MsgHistoryServiceLick.mockBImOpSet=(MockBasicInstantMessaging)supportedOperationSets.get(OperationSetBasicInstantMessaging.class.getName());
  MockContactGroup root=(MockContactGroup)MsgHistoryServiceLick.mockPresOpSet.getServerStoredContactListRoot();
  root.addContact(new MockContact(TEST_CONTACT_NAME,provider));
  MsgHistoryServiceLick.mockPrServiceRegistration=registerMockProviderService(provider);
  MsgHistoryServiceLick.mockProvider=provider;
  msgHistoryServiceRef=bundleContext.getServiceReference(MessageHistoryService.class.getName());
  msgHistoryService=(MessageHistoryService)bundleContext.getService(msgHistoryServiceRef);
}
