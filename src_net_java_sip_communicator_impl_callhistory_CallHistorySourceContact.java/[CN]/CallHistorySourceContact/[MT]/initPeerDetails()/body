{
  Iterator<CallPeerRecord> recordsIter=callRecord.getPeerRecords().iterator();
  while (recordsIter.hasNext()) {
    String peerAddress=recordsIter.next().getPeerAddress();
    if (displayName.length() > 0)     displayName+="," + peerAddress;
 else     displayName+=peerAddress;
    if (peerAddress != null) {
      ContactDetail contactDetail=new ContactDetail(peerAddress);
      Map<Class<? extends OperationSet>,ProtocolProviderService> preferredProviders=null;
      Map<Class<? extends OperationSet>,String> preferredProtocols=null;
      ProtocolProviderService preferredProvider=callRecord.getProtocolProvider();
      if (preferredProvider != null) {
        preferredProviders=new Hashtable<Class<? extends OperationSet>,ProtocolProviderService>();
        OperationSetContactCapabilities opSetCaps=preferredProvider.getOperationSet(OperationSetContactCapabilities.class);
        OperationSetPresence opSetPres=preferredProvider.getOperationSet(OperationSetPresence.class);
        if (opSetCaps != null && opSetPres != null) {
          Contact contact=opSetPres.findContactByID(peerAddress);
          if (contact != null && opSetCaps.getOperationSet(contact,OperationSetBasicTelephony.class) != null) {
            preferredProviders.put(OperationSetBasicTelephony.class,preferredProvider);
          }
        }
 else {
          preferredProviders.put(OperationSetBasicTelephony.class,preferredProvider);
        }
        contactDetail.setPreferredProviders(preferredProviders);
      }
 else {
        preferredProtocols=new Hashtable<Class<? extends OperationSet>,String>();
        preferredProtocols.put(OperationSetBasicTelephony.class,ProtocolNames.SIP);
        contactDetail.setPreferredProtocols(preferredProtocols);
      }
      LinkedList<Class<? extends OperationSet>> supportedOpSets=new LinkedList<Class<? extends OperationSet>>();
      if ((preferredProviders != null && preferredProviders.containsKey(OperationSetBasicTelephony.class)) || (preferredProtocols != null)) {
        supportedOpSets.add(OperationSetBasicTelephony.class);
      }
      contactDetail.setSupportedOpSets(supportedOpSets);
      contactDetails.add(contactDetail);
    }
  }
}
