{
  if (isNullOrEmpty(xml)) {
    throw new IllegalArgumentException("XML cannot be null or empty");
  }
  try {
    ContentType content=new ContentType();
    Document document=XmlUtils.createDocument(xml);
    Element contentElement=document.getDocumentElement();
    if (CONTENT_ELEMENT.equals(contentElement.getLocalName()) && !NAMESPACE.equals(contentElement.getNamespaceURI())) {
      throw new Exception("Document doesn't contain content element");
    }
    NamedNodeMap attributes=contentElement.getAttributes();
    for (int i=0; i < attributes.getLength(); i++) {
      Attr attribute=(Attr)attributes.item(i);
      String namespaceUri=getNamespaceUri(attribute);
      if (namespaceUri == null) {
        throw new Exception("content element is invalid");
      }
      if (isStandartXmlNamespace(namespaceUri)) {
        continue;
      }
      if (NAMESPACE.equals(namespaceUri)) {
        throw new Exception("content element is invalid");
      }
      QName qName=new QName(namespaceUri,attribute.getLocalName(),attribute.getPrefix() == null ? "" : attribute.getPrefix());
      content.getAnyAttributes().put(qName,attribute.getValue());
    }
    NodeList childNodes=contentElement.getChildNodes();
    for (int i=0; i < childNodes.getLength(); i++) {
      Node node=childNodes.item(i);
      if (node.getNodeType() != Node.ELEMENT_NODE) {
        continue;
      }
      Element element=(Element)node;
      String namespaceUri=getNamespaceUri(element);
      if (namespaceUri == null) {
        throw new Exception("content element is invalid");
      }
      String localName=node.getLocalName();
      if (NAMESPACE.equals(namespaceUri)) {
        if (DATA_ELEMENT.equals(localName)) {
          content.setData(dataFromElement(element));
        }
 else         if (MIMETYPE_ELEMENT.equals(localName)) {
          content.setMimeType(mimeTypeFromElement(element));
        }
 else         if (ENCODING_ELEMENT.equals(localName)) {
          content.setEncoding(encodingFromElement(element));
        }
 else         if (DESCRIPTION_ELEMENT.equals(localName)) {
          content.getDescription().add(descriptionFromElement(element));
        }
 else {
          throw new Exception("content element is invalid");
        }
      }
 else {
        content.getAny().add(element);
      }
    }
    return content;
  }
 catch (  Exception ex) {
    throw new ParsingException(ex);
  }
}
