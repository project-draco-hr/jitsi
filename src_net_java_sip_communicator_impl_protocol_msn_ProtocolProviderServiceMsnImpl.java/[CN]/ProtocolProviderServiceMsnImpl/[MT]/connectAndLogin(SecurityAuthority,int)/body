{
synchronized (initializationLock) {
    ProtocolProviderFactory protocolProviderFactory=MsnActivator.getProtocolProviderFactory();
    AccountID accountID=getAccountID();
    String password=protocolProviderFactory.loadPassword(accountID);
    if (password == null) {
      UserCredentials credentials=new UserCredentials();
      credentials.setUserName(accountID.getUserID());
      credentials=authority.obtainCredentials(ProtocolNames.MSN,credentials,reasonCode);
      if (credentials == null) {
        fireRegistrationStateChanged(getRegistrationState(),RegistrationState.UNREGISTERED,RegistrationStateChangeEvent.REASON_USER_REQUEST,"");
        return;
      }
      char[] pass=credentials.getPassword();
      if (pass == null) {
        fireRegistrationStateChanged(getRegistrationState(),RegistrationState.UNREGISTERED,RegistrationStateChangeEvent.REASON_USER_REQUEST,"");
        return;
      }
      password=new String(pass);
      if (credentials.isPasswordPersistent())       protocolProviderFactory.storePassword(accountID,password);
    }
    messenger=MsnMessengerFactory.createMsnMessenger(accountID.getUserID(),password);
    logoutReceived=false;
    messenger.addMessengerListener(new MsnConnectionListener());
    persistentPresence.setMessenger(messenger);
    typingNotifications.setMessenger(messenger);
    fireRegistrationStateChanged(getRegistrationState(),RegistrationState.REGISTERING,RegistrationStateChangeEvent.REASON_NOT_SPECIFIED,null);
    try {
      messenger.login();
    }
 catch (    UnresolvedAddressException ex) {
      fireRegistrationStateChanged(getRegistrationState(),RegistrationState.CONNECTION_FAILED,RegistrationStateChangeEvent.REASON_SERVER_NOT_FOUND,null);
    }
catch (    DnssecRuntimeException ex) {
      fireRegistrationStateChanged(getRegistrationState(),RegistrationState.UNREGISTERED,RegistrationStateChangeEvent.REASON_USER_REQUEST,null);
    }
  }
}
