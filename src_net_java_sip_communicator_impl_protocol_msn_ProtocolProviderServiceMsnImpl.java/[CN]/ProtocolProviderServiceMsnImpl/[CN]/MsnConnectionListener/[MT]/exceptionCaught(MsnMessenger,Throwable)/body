{
  if (throwable instanceof IncorrectPasswordException) {
    unregisterInternal(false);
    MsnActivator.getProtocolProviderFactory().storePassword(getAccountID(),null);
    fireRegistrationStateChanged(getRegistrationState(),RegistrationState.AUTHENTICATION_FAILED,RegistrationStateChangeEvent.REASON_AUTHENTICATION_FAILED,"Incorrect Password");
    reconnect(SecurityAuthority.WRONG_PASSWORD);
  }
 else   if (throwable instanceof SocketException) {
    fireRegistrationStateChanged(getRegistrationState(),RegistrationState.CONNECTION_FAILED,RegistrationStateChangeEvent.REASON_INTERNAL_ERROR,null);
  }
 else   if (throwable instanceof UnknownHostException) {
    fireRegistrationStateChanged(getRegistrationState(),RegistrationState.CONNECTION_FAILED,RegistrationStateChangeEvent.REASON_SERVER_NOT_FOUND,"A network error occured. Could not connect to server.");
  }
 else   if (throwable instanceof MsnProtocolException) {
    MsnProtocolException exception=(MsnProtocolException)throwable;
    logger.error("Error in Msn lib ",exception);
switch (exception.getErrorCode()) {
case 500:
case 540:
case 601:
      if (isRegistered()) {
        unregisterInternal(false);
        fireRegistrationStateChanged(getRegistrationState(),RegistrationState.UNREGISTERED,RegistrationStateChangeEvent.REASON_INTERNAL_ERROR,null);
      }
    break;
case 911:
  if (isRegistered()) {
    unregisterInternal(false);
    MsnActivator.getProtocolProviderFactory().storePassword(getAccountID(),null);
    fireRegistrationStateChanged(getRegistrationState(),RegistrationState.AUTHENTICATION_FAILED,RegistrationStateChangeEvent.REASON_AUTHENTICATION_FAILED,null);
    reconnect(SecurityAuthority.WRONG_PASSWORD);
  }
break;
}
}
 else {
logger.error("Error in Msn lib ",throwable);
if (throwable instanceof LoginException) {
MsnActivator.getProtocolProviderFactory().storePassword(getAccountID(),null);
fireRegistrationStateChanged(getRegistrationState(),RegistrationState.AUTHENTICATION_FAILED,RegistrationStateChangeEvent.REASON_AUTHENTICATION_FAILED,null);
reconnect(SecurityAuthority.WRONG_PASSWORD);
}
}
}
