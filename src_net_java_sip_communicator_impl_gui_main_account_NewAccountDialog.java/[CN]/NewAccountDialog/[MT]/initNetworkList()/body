{
  String prefWName=GuiActivator.getResources().getSettingsString("impl.gui.PREFERRED_ACCOUNT_WIZARD");
  String preferredWizardName=(prefWName != null && prefWName.length() > 0) ? prefWName : null;
  Collection<ServiceReference<AccountRegistrationWizard>> accountWizardRefs;
  try {
    accountWizardRefs=GuiActivator.bundleContext.getServiceReferences(AccountRegistrationWizard.class,null);
  }
 catch (  InvalidSyntaxException ex) {
    logger.error("Error while retrieving service refs",ex);
    return;
  }
  if ((accountWizardRefs != null) && !accountWizardRefs.isEmpty()) {
    if (logger.isDebugEnabled()) {
      logger.debug("Found " + accountWizardRefs.size() + " already installed providers.");
    }
    ArrayList<AccountRegistrationWizard> networksList=new ArrayList<AccountRegistrationWizard>(accountWizardRefs.size());
    AccountRegistrationWizard prefWiz=null;
    for (    ServiceReference<AccountRegistrationWizard> serRef : accountWizardRefs) {
      AccountRegistrationWizard wizard=GuiActivator.bundleContext.getService(serRef);
      networksList.add(wizard);
      if (preferredWizardName != null && wizard.getClass().getName().equals(preferredWizardName)) {
        prefWiz=wizard;
      }
    }
    Collections.sort(networksList,new Comparator<AccountRegistrationWizard>(){
      public int compare(      AccountRegistrationWizard arg0,      AccountRegistrationWizard arg1){
        return arg0.getProtocolName().compareToIgnoreCase(arg1.getProtocolName());
      }
    }
);
    for (int i=0; i < networksList.size(); i++) {
      networkComboBox.addItem(networksList.get(i));
    }
    if (prefWiz != null) {
      networkComboBox.setSelectedItem(prefWiz);
    }
 else {
      networkComboBox.insertItemAt(emptyWizard,0);
      networkComboBox.setSelectedItem(emptyWizard);
      advancedButton.setEnabled(false);
      addAccountButton.setEnabled(false);
    }
  }
}
