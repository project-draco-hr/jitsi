{
  JMenuItem menuItem=(JMenuItem)e.getSource();
  String itemName=menuItem.getName();
  if (itemName.equalsIgnoreCase("config")) {
    configActionPerformed();
  }
 else   if (itemName.equals("conference")) {
    java.util.List<ProtocolProviderService> confProviders=CallManager.getTelephonyConferencingProviders();
    if (confProviders != null && confProviders.size() > 0) {
      ConferenceInviteDialog confInviteDialog=new ConferenceInviteDialog();
      confInviteDialog.setVisible(true);
    }
 else     new ErrorDialog(null,GuiActivator.getResources().getI18NString("service.gui.WARNING"),GuiActivator.getResources().getI18NString("service.gui.NO_ONLINE_CONFERENCING_ACCOUNT")).showDialog();
  }
 else   if (itemName.equals("showHideOffline")) {
    boolean isShowOffline=ConfigurationManager.isShowOffline();
    TreeContactList.presenceFilter.setShowOffline(!isShowOffline);
    GuiActivator.getContactList().setDefaultFilter(TreeContactList.presenceFilter);
    GuiActivator.getContactList().applyDefaultFilter();
    String itemTextKey=!isShowOffline ? "service.gui.HIDE_OFFLINE_CONTACTS" : "service.gui.SHOW_OFFLINE_CONTACTS";
    menuItem.setText(GuiActivator.getResources().getI18NString(itemTextKey));
  }
 else   if (itemName.equals("sound")) {
    boolean mute=!GuiActivator.getAudioNotifier().isMute();
    GuiActivator.getAudioNotifier().setMute(mute);
{
      for (      NotificationHandler handler : GuiActivator.getNotificationService().getActionHandlers(NotificationAction.ACTION_SOUND)) {
        if (handler instanceof SoundNotificationHandler) {
          SoundNotificationHandler soundHandler=(SoundNotificationHandler)handler;
          soundHandler.setMute(mute);
        }
      }
    }
    menuItem.setText(GuiActivator.getResources().getI18NString(mute ? "service.gui.SOUND_ON" : "service.gui.SOUND_OFF"));
  }
}
