{
  ConfigurationService cfg=GuiActivator.getConfigurationService();
  Boolean showOptionsProp=cfg.getBoolean(ConfigurationFrame.SHOW_OPTIONS_WINDOW_PROPERTY,true);
  if (showOptionsProp.booleanValue()) {
    UIService uiService=GuiActivator.getUIService();
    if ((uiService == null) || !uiService.useMacOSXScreenMenuBar() || !registerConfigMenuItemMacOSX()) {
      registerConfigMenuItemNonMacOSX();
    }
  }
  ResourceManagementService r=GuiActivator.getResources();
  conferenceMenuItem=new JMenuItem(r.getI18NString("service.gui.CREATE_CONFERENCE_CALL"));
  conferenceMenuItem.setMnemonic(r.getI18nMnemonic("service.gui.CREATE_CONFERENCE_CALL"));
  conferenceMenuItem.setName("conference");
  conferenceMenuItem.addActionListener(this);
  add(conferenceMenuItem);
  GuiActivator.bundleContext.addServiceListener(this);
  initVideoBridgeMenu();
  if (!cfg.getBoolean(AUTO_ANSWER_MENU_DISABLED_PROP,false)) {
    if (ConfigurationUtils.isAutoAnswerDisableSubmenu()) {
      this.addSeparator();
      AutoAnswerMenu.registerMenuItems(this);
    }
 else {
      AutoAnswerMenu autoAnswerMenu=new AutoAnswerMenu();
      this.add(autoAnswerMenu);
    }
  }
  this.addSeparator();
  String offlineTextKey=ConfigurationUtils.isShowOffline() ? "service.gui.HIDE_OFFLINE_CONTACTS" : "service.gui.SHOW_OFFLINE_CONTACTS";
  if (!isChatMenu) {
    hideOfflineMenuItem=new JMenuItem(r.getI18NString(offlineTextKey));
    hideOfflineMenuItem.setMnemonic(r.getI18nMnemonic(offlineTextKey));
    hideOfflineMenuItem.setName("showHideOffline");
    hideOfflineMenuItem.addActionListener(this);
    this.add(hideOfflineMenuItem);
  }
  String soundTextKey=GuiActivator.getAudioNotifier().isMute() ? "service.gui.SOUND_ON" : "service.gui.SOUND_OFF";
  soundMenuItem=new JMenuItem(r.getI18NString(soundTextKey));
  soundMenuItem.setMnemonic(r.getI18nMnemonic(soundTextKey));
  soundMenuItem.setName("sound");
  soundMenuItem.addActionListener(this);
  this.add(soundMenuItem);
  loadSkin();
}
