{
  String password=SIPAccRegWizzActivator.getSIPProtocolProviderFactory().loadPassword(accountID);
  String serverAddress=accountID.getAccountPropertyString(ProtocolProviderFactory.SERVER_ADDRESS);
  String displayName=accountID.getAccountPropertyString(ProtocolProviderFactory.DISPLAY_NAME);
  String authName=accountID.getAccountPropertyString(ProtocolProviderFactory.AUTHORIZATION_NAME);
  String serverPort=accountID.getAccountPropertyString(ProtocolProviderFactory.SERVER_PORT);
  String proxyAddress=accountID.getAccountPropertyString(ProtocolProviderFactory.PROXY_ADDRESS);
  String proxyPort=accountID.getAccountPropertyString(ProtocolProviderFactory.PROXY_PORT);
  String preferredTransport=accountID.getAccountPropertyString(ProtocolProviderFactory.PREFERRED_TRANSPORT);
  boolean enablePresence=accountID.getAccountPropertyBoolean(ProtocolProviderFactory.IS_PRESENCE_ENABLED,false);
  boolean forceP2P=accountID.getAccountPropertyBoolean(ProtocolProviderFactory.FORCE_P2P_MODE,false);
  boolean enabledDefaultEncryption=accountID.getAccountPropertyBoolean(ProtocolProviderFactory.DEFAULT_ENCRYPTION,true);
  boolean enabledSipZrtpAttribute=accountID.getAccountPropertyBoolean(ProtocolProviderFactory.DEFAULT_SIPZRTP_ATTRIBUTE,true);
  boolean proxyAutoConfigureEnabled=accountID.getAccountPropertyBoolean(ProtocolProviderFactory.PROXY_AUTO_CONFIG,false);
  ;
  String pollingPeriod=accountID.getAccountPropertyString(ProtocolProviderFactory.POLLING_PERIOD);
  String subscriptionPeriod=accountID.getAccountPropertyString(ProtocolProviderFactory.SUBSCRIPTION_EXPIRATION);
  String keepAliveMethod=accountID.getAccountPropertyString("KEEP_ALIVE_METHOD");
  String keepAliveInterval=accountID.getAccountPropertyString("KEEP_ALIVE_INTERVAL");
  boolean xCapEnable=accountID.getAccountPropertyBoolean("XCAP_ENABLE",false);
  boolean xCapUseSipCredetials=accountID.getAccountPropertyBoolean("XCAP_USE_SIP_CREDETIALS",true);
  String xCapServerUri=accountID.getAccountPropertyString("XCAP_SERVER_URI");
  String xCapUser=accountID.getAccountPropertyString("XCAP_USER");
  String xCapPassword=accountID.getAccountPropertyString("XCAP_PASSWORD");
  connectionPanel.setServerOverridden(accountID.getAccountPropertyBoolean(ProtocolProviderFactory.IS_SERVER_OVERRIDDEN,false));
  accountPanel.setUserIDEnabled(false);
  accountPanel.setUserID((serverAddress == null) ? accountID.getUserID() : (accountID.getUserID() + "@" + serverAddress));
  if (password != null) {
    accountPanel.setPassword(password);
    accountPanel.setRememberPassword(true);
  }
  connectionPanel.setServerAddress(serverAddress);
  connectionPanel.setServerEnabled(false);
  if (displayName != null && displayName.length() > 0)   accountPanel.setDisplayName(displayName);
  if (authName != null && authName.length() > 0)   connectionPanel.setAuthenticationName(authName);
  connectionPanel.enablesProxyAutoConfigure(proxyAutoConfigureEnabled);
  connectionPanel.setServerPort(serverPort);
  connectionPanel.setProxy(proxyAddress);
  connectionPanel.setSelectedTransport(preferredTransport);
  connectionPanel.setProxyPort(proxyPort);
  presencePanel.setPresenceEnabled(enablePresence);
  presencePanel.setForcePeerToPeerMode(forceP2P);
  connectionPanel.enablesDefaultEncryption(enabledDefaultEncryption);
  connectionPanel.setSipZrtpEnabled(enabledSipZrtpAttribute,enabledDefaultEncryption);
  presencePanel.setPollPeriod(pollingPeriod);
  presencePanel.setSubscriptionExpiration(subscriptionPeriod);
  if (!enablePresence) {
    presencePanel.setPresenceOptionsEnabled(enablePresence);
  }
  connectionPanel.setKeepAliveMethod(keepAliveMethod);
  connectionPanel.setKeepAliveInterval(keepAliveInterval);
  presencePanel.setXCapEnable(xCapEnable);
  presencePanel.setXCapEnableEnabled(xCapEnable);
  presencePanel.setXCapUseSipCredetials(xCapUseSipCredetials);
  presencePanel.setXCapUseSipCredetialsEnabled(xCapUseSipCredetials);
  presencePanel.setXCapServerUri(xCapServerUri);
  presencePanel.setXCapUser(xCapUser);
  presencePanel.setXCapPassword(xCapPassword);
}
