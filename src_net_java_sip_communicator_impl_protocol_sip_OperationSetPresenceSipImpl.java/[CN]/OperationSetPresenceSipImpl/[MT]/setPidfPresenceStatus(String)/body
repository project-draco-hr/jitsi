{
  Document doc=convertDocument(presenceDoc);
  if (doc == null) {
    return;
  }
  logger.debug("parsing:\n" + presenceDoc);
  NodeList presList=doc.getElementsByTagName(PRESENCE_ELEMENT);
  if (presList.getLength() == 0) {
    logger.error("no presence element in this document");
    return;
  }
  if (presList.getLength() > 1) {
    logger.warn("more than one presence element in this document");
  }
  Node presNode=presList.item(0);
  if (presNode.getNodeType() != Node.ELEMENT_NODE) {
    logger.error("the presence node is not an element");
    return;
  }
  Element presence=(Element)presNode;
  SipStatusEnum personStatus=null;
  NodeList personList=presence.getElementsByTagName(PERSON_ELEMENT);
  if (personList.getLength() > 1) {
    logger.error("more than one person in this document");
    return;
  }
  if (personList.getLength() > 0) {
    Node personNode=personList.item(0);
    if (personNode.getNodeType() != Node.ELEMENT_NODE) {
      logger.error("the person node is not and element");
      return;
    }
    Element person=(Element)personNode;
    NodeList activityList=person.getElementsByTagName(ACTIVITY_ELEMENT);
    if (activityList.getLength() > 0) {
      Element activity=null;
      for (int i=0; i < activityList.getLength(); i++) {
        Node activityNode=activityList.item(i);
        if (activityNode.getNodeType() != Node.ELEMENT_NODE) {
          continue;
        }
        if (activityNode.getNodeName().equals(AWAY_ELEMENT) || activityNode.getNodeName().equals(BUSY_ELEMENT)) {
          activity=(Element)activityNode;
          break;
        }
      }
      if (activity != null) {
        if (activity.getNodeName().equals(AWAY_ELEMENT)) {
          personStatus=SipStatusEnum.AWAY;
        }
 else         if (activity.getNodeName().equals(BUSY_ELEMENT)) {
          personStatus=SipStatusEnum.DO_NOT_DISTURB;
        }
      }
    }
  }
  NodeList tupleList=presence.getElementsByTagName(TUPLE_ELEMENT);
  for (int i=0; i < tupleList.getLength(); i++) {
    Node tupleNode=tupleList.item(i);
    if (tupleNode.getNodeType() != Node.ELEMENT_NODE) {
      continue;
    }
    Element tuple=(Element)tupleNode;
    NodeList contactList=tuple.getElementsByTagName(CONTACT_ELEMENT);
    for (int j=0; j < contactList.getLength(); j++) {
      Node contactNode=contactList.item(j);
      if (contactNode.getNodeType() != Node.ELEMENT_NODE) {
        continue;
      }
      Element contact=(Element)contactNode;
      ContactSipImpl sipcontact=(ContactSipImpl)resolveContactID(getTextContent(contact));
      if (sipcontact == null) {
        logger.debug("no contact found for id: " + getTextContent(contact));
        continue;
      }
      if (personStatus != null) {
        changePresenceStatusForContact(sipcontact,personStatus);
        continue;
      }
      NodeList statusList=tuple.getElementsByTagName(STATUS_ELEMENT);
      if (statusList.getLength() == 0) {
        logger.debug("no status in this tuple");
        continue;
      }
      int index=statusList.getLength() - 1;
      Node statusNode=null;
      do {
        Node temp=statusList.item(index);
        if (temp.getNodeType() == Node.ELEMENT_NODE) {
          statusNode=temp;
          break;
        }
        index--;
      }
 while (index >= 0);
      if (statusNode == null) {
        logger.debug("no valid status in this tuple");
        break;
      }
      Element status=(Element)statusNode;
      NodeList basicList=status.getElementsByTagName(BASIC_ELEMENT);
      if (basicList.getLength() == 0) {
        logger.debug("no <basic> in this status");
        continue;
      }
      index=basicList.getLength() - 1;
      Node basicNode=null;
      do {
        Node temp=basicList.item(index);
        if (temp.getNodeType() == Node.ELEMENT_NODE) {
          basicNode=temp;
          break;
        }
        index--;
      }
 while (index >= 0);
      if (basicNode == null) {
        logger.debug("no valid <basic> in this status");
        break;
      }
      Element basic=(Element)basicNode;
      NodeList noteList=tuple.getElementsByTagName(NOTE_ELEMENT);
      boolean changed=false;
      for (int k=0; k < noteList.getLength() && !changed; k++) {
        Node noteNode=noteList.item(k);
        if (noteNode.getNodeType() != Node.ELEMENT_NODE) {
          continue;
        }
        Element note=(Element)noteNode;
        String state=getTextContent(note);
        if (state.equalsIgnoreCase(SipStatusEnum.AWAY.getStatusName())) {
          changed=true;
          changePresenceStatusForContact(sipcontact,SipStatusEnum.AWAY);
        }
 else         if (state.equalsIgnoreCase(SipStatusEnum.DO_NOT_DISTURB.getStatusName())) {
          changed=true;
          changePresenceStatusForContact(sipcontact,SipStatusEnum.DO_NOT_DISTURB);
        }
      }
      if (changed == false) {
        if (getTextContent(basic).equalsIgnoreCase(ONLINE_STATUS)) {
          changePresenceStatusForContact(sipcontact,SipStatusEnum.ONLINE);
        }
 else         if (getTextContent(basic).equalsIgnoreCase(OFFLINE_STATUS)) {
          changePresenceStatusForContact(sipcontact,SipStatusEnum.OFFLINE);
        }
      }
    }
  }
}
