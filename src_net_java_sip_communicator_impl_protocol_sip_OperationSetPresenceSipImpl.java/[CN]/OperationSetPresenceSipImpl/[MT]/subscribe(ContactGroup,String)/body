{
  if (logger.isDebugEnabled())   logger.debug("let's subscribe " + contactIdentifier);
  ContactSipImpl contact=resolveContactID(contactIdentifier);
  if (contact != null) {
    if (contact.isPersistent()) {
      throw new OperationFailedException("Contact " + contactIdentifier + " already exists.",OperationFailedException.SUBSCRIPTION_ALREADY_EXISTS);
    }
 else {
      ContactGroupSipImpl oldParentGroup=(ContactGroupSipImpl)contact.getParentContactGroup();
      oldParentGroup.removeContact(contact);
      fireSubscriptionEvent(contact,oldParentGroup,SubscriptionEvent.SUBSCRIPTION_REMOVED);
    }
  }
  Address contactAddress;
  try {
    contactAddress=parentProvider.parseAddressString(contactIdentifier);
  }
 catch (  ParseException exc) {
    throw new IllegalArgumentException(contactIdentifier + " is not a valid string.",exc);
  }
  contact=new ContactSipImpl(contactAddress,this.parentProvider);
  ((ContactGroupSipImpl)parentGroup).addContact(contact);
  fireSubscriptionEvent(contact,parentGroup,SubscriptionEvent.SUBSCRIPTION_CREATED);
  if (this.presenceEnabled == false)   return;
  assertConnected();
  subscriber.subscribe(new PresenceSubscriberSubscription(contact));
}
