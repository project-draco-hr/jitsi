{
  List<File> vect=new Vector<File>();
  File histDir=null;
  try {
    String userSetDataDirectory=System.getProperty("HistoryServiceDirectory");
    histDir=getFileAccessService().getPrivatePersistentDirectory((userSetDataDirectory == null) ? DATA_DIRECTORY : userSetDataDirectory,FileCategory.PROFILE);
    findDatFiles(vect,histDir);
  }
 catch (  Exception e) {
    logger.error("Error opening directory",e);
  }
  DBStructSerializer structParse=new DBStructSerializer(this);
  for (  File f : vect) {
synchronized (this.histories) {
      try {
        History hist=structParse.loadHistory(f);
        if (!this.histories.containsKey(hist.getID())) {
          this.histories.put(hist.getID(),hist);
        }
      }
 catch (      Exception e) {
        logger.error("Could not load history from file: " + f.getAbsolutePath(),e);
      }
    }
  }
synchronized (this.histories) {
    return this.histories.keySet().iterator();
  }
}
