{
  Object outputData=output.getData();
  if (outputData != null) {
    Object inputData=input.getData();
    if (inputData == null) {
      output.setFormat(input.getFormat());
      return outputOffset;
    }
    Class<?> dataType=outputData.getClass();
    if (inputData.getClass().equals(dataType) && dataType.equals(byte[].class)) {
      int inputOffset=input.getOffset();
      int inputLength=input.getLength();
      byte[] outputBytes=(byte[])outputData;
      int outputLength=outputBytes.length - outputOffset;
      if (outputLength < 1)       return -1;
      if (inputLength < outputLength)       outputLength=inputLength;
      System.arraycopy((byte[])inputData,inputOffset,outputBytes,outputOffset,outputLength);
      output.setData(outputBytes);
      output.setLength(output.getLength() + outputLength);
      if (output.getOffset() == outputOffset) {
        output.setFormat(input.getFormat());
        output.setDiscard(input.isDiscard());
        output.setEOM(input.isEOM());
        output.setFlags(input.getFlags());
        output.setHeader(input.getHeader());
        output.setSequenceNumber(input.getSequenceNumber());
        output.setTimeStamp(input.getTimeStamp());
        output.setDuration(Buffer.TIME_UNKNOWN);
      }
      input.setLength(inputLength - outputLength);
      input.setOffset(inputOffset + outputLength);
      return (outputOffset + outputLength);
    }
  }
  if (output.getOffset() == outputOffset) {
    output.copy(input);
    int outputLength=output.getLength();
    input.setLength(input.getLength() - outputLength);
    input.setOffset(input.getOffset() + outputLength);
  }
  return -1;
}
