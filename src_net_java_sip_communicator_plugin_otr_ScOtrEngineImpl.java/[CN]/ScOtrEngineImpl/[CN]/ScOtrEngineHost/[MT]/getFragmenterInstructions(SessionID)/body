{
  final OtrContact otrContact=getOtrContact(sessionID);
  final OperationSetBasicInstantMessagingTransport transport=otrContact.contact.getProtocolProvider().getOperationSet(OperationSetBasicInstantMessagingTransport.class);
  if (transport == null) {
    if (logger.isDebugEnabled()) {
      logger.debug("No implementation of " + "BasicInstantMessagingTransport available. Assuming " + "OTR defaults for OTR fragmentation instructions.");
    }
    return null;
  }
  int messageSize=transport.maximumMessageSize(otrContact.contact);
  if (messageSize == OperationSetBasicInstantMessagingTransport.UNLIMITED) {
    messageSize=FragmenterInstructions.UNLIMITED;
  }
  int numberOfMessages=transport.numberOfMessages(otrContact.contact);
  if (numberOfMessages == OperationSetBasicInstantMessagingTransport.UNLIMITED) {
    numberOfMessages=FragmenterInstructions.UNLIMITED;
  }
  if (logger.isDebugEnabled()) {
    logger.debug("OTR fragmentation instructions for sending a " + "message to " + otrContact.contact.getDisplayName() + " ("+ otrContact.contact.getAddress()+ "). Maximum number of "+ "messages: "+ numberOfMessages+ ", maximum message size: "+ messageSize);
  }
  return new FragmenterInstructions(numberOfMessages,messageSize);
}
