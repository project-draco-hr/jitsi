{
  this.otrEngine.addOtrEngineListener(new OtrEngineListener(){
    public void sessionStatusChanged(    SessionID sessionID){
      Contact contact=getContact(sessionID);
      if (contact == null)       return;
      String message="";
switch (otrEngine.getSessionStatus(sessionID)) {
case ENCRYPTED:
        PublicKey remotePubKey=otrEngine.getRemotePublicKey(sessionID);
      PublicKey storedPubKey=OtrActivator.scOtrKeyManager.loadPublicKey(contact);
    if (!remotePubKey.equals(storedPubKey))     OtrActivator.scOtrKeyManager.savePublicKey(contact,remotePubKey);
  if (!OtrActivator.scOtrKeyManager.isVerified(contact)) {
    String unverifiedSessionWarning=OtrActivator.resourceService.getI18NString("plugin.otr.activator.unverifiedsessionwarning",new String[]{contact.getDisplayName()});
    OtrActivator.uiService.getChat(contact).addMessage(contact.getDisplayName(),System.currentTimeMillis(),Chat.SYSTEM_MESSAGE,unverifiedSessionWarning,OperationSetBasicInstantMessaging.HTML_MIME_TYPE);
  }
message=OtrActivator.resourceService.getI18NString((OtrActivator.scOtrKeyManager.isVerified(contact)) ? "plugin.otr.activator.sessionstared" : "plugin.otr.activator.unverifiedsessionstared",new String[]{contact.getDisplayName()});
break;
case FINISHED:
message=OtrActivator.resourceService.getI18NString("plugin.otr.activator.sessionfinished",new String[]{contact.getDisplayName()});
break;
case PLAINTEXT:
message=OtrActivator.resourceService.getI18NString("plugin.otr.activator.sessionlost",new String[]{contact.getDisplayName()});
break;
}
OtrActivator.uiService.getChat(contact).addMessage(contact.getDisplayName(),System.currentTimeMillis(),Chat.SYSTEM_MESSAGE,message,OperationSetBasicInstantMessaging.HTML_MIME_TYPE);
for (ScOtrEngineListener l : listeners) {
l.sessionStatusChanged(contact);
}
}
}
);
}
