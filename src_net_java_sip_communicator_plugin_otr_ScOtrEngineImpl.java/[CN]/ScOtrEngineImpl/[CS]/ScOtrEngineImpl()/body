{
  otrEngine=new OtrEngineImpl(otrEngineHost);
  contactsMap.clear();
  this.otrEngine.addOtrEngineListener(new OtrEngineListener(){
    public void sessionStatusChanged(    SessionID sessionID){
      Contact contact=getContact(sessionID);
      if (contact == null)       return;
      String message="";
switch (otrEngine.getSessionStatus(sessionID)) {
case ENCRYPTED:
        PublicKey remotePubKey=otrEngine.getRemotePublicKey(sessionID);
      PublicKey storedPubKey=OtrActivator.scOtrKeyManager.loadPublicKey(contact);
    if (!remotePubKey.equals(storedPubKey))     OtrActivator.scOtrKeyManager.savePublicKey(contact,remotePubKey);
  if (!OtrActivator.scOtrKeyManager.isVerified(contact)) {
    UUID sessionGuid=null;
    for (    ScSessionID scSessionID : contactsMap.keySet()) {
      if (scSessionID.getSessionID().equals(sessionID)) {
        sessionGuid=scSessionID.getGUID();
        break;
      }
    }
    OtrActivator.uiService.getChat(contact).addChatLinkClickedListener(ScOtrEngineImpl.this);
    String unverifiedSessionWarning=OtrActivator.resourceService.getI18NString("plugin.otr.activator" + ".unverifiedsessionwarning",new String[]{contact.getDisplayName(),this.getClass().getName(),"AUTHENTIFICATION",sessionGuid.toString()});
    OtrActivator.uiService.getChat(contact).addMessage(contact.getDisplayName(),new Date(),Chat.SYSTEM_MESSAGE,unverifiedSessionWarning,OperationSetBasicInstantMessaging.HTML_MIME_TYPE);
  }
String otrAndHistoryMessage;
if (!ConfigurationUtils.isHistoryLoggingEnabled() || !isHistoryLoggingEnabled(contact)) {
otrAndHistoryMessage=OtrActivator.resourceService.getI18NString("plugin.otr.activator.historyoff",new String[]{OtrActivator.resourceService.getSettingsString("service.gui.APPLICATION_NAME"),this.getClass().getName(),"showHistoryPopupMenu"});
}
 else {
otrAndHistoryMessage=OtrActivator.resourceService.getI18NString("plugin.otr.activator.historyon",new String[]{OtrActivator.resourceService.getSettingsString("service.gui.APPLICATION_NAME"),this.getClass().getName(),"showHistoryPopupMenu"});
}
OtrActivator.uiService.getChat(contact).addMessage(contact.getDisplayName(),new Date(),Chat.SYSTEM_MESSAGE,otrAndHistoryMessage,OperationSetBasicInstantMessaging.HTML_MIME_TYPE);
message=OtrActivator.resourceService.getI18NString(OtrActivator.scOtrKeyManager.isVerified(contact) ? "plugin.otr.activator.sessionstared" : "plugin.otr.activator" + ".unverifiedsessionstared",new String[]{contact.getDisplayName()});
break;
case FINISHED:
message=OtrActivator.resourceService.getI18NString("plugin.otr.activator.sessionfinished",new String[]{contact.getDisplayName()});
break;
case PLAINTEXT:
message=OtrActivator.resourceService.getI18NString("plugin.otr.activator.sessionlost",new String[]{contact.getDisplayName()});
break;
}
OtrActivator.uiService.getChat(contact).addMessage(contact.getDisplayName(),new Date(),Chat.SYSTEM_MESSAGE,message,OperationSetBasicInstantMessaging.HTML_MIME_TYPE);
for (ScOtrEngineListener l : getListeners()) l.sessionStatusChanged(contact);
}
}
);
}
