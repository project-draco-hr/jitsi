{
  otrEngine=new OtrEngineImpl(otrEngineHost);
  contactsMap.clear();
  scSessionStatusMap.clear();
  this.otrEngine.addOtrEngineListener(new OtrEngineListener(){
    public void sessionStatusChanged(    SessionID sessionID){
      Contact contact=getContact(sessionID);
      if (contact == null)       return;
      scheduler.cancel(contact);
      ScSessionStatus scSessionStatus=getSessionStatus(contact);
      String message="";
switch (otrEngine.getSessionStatus(sessionID)) {
case ENCRYPTED:
        scSessionStatus=ScSessionStatus.ENCRYPTED;
      scSessionStatusMap.put(sessionID,scSessionStatus);
    PublicKey remotePubKey=otrEngine.getRemotePublicKey(sessionID);
  String remoteFingerprint=null;
try {
  remoteFingerprint=new OtrCryptoEngineImpl().getFingerprint(remotePubKey);
}
 catch (OtrCryptoException e) {
  logger.debug("Could not get the fingerprint from the " + "public key of contact: " + contact);
}
List<String> allFingerprintsOfContact=OtrActivator.scOtrKeyManager.getAllRemoteFingerprints(contact);
if (allFingerprintsOfContact != null) {
if (!allFingerprintsOfContact.contains(remoteFingerprint)) {
OtrActivator.scOtrKeyManager.saveFingerprint(contact,remoteFingerprint);
}
}
if (!OtrActivator.scOtrKeyManager.isVerified(contact,remoteFingerprint)) {
OtrActivator.scOtrKeyManager.unverify(contact,remoteFingerprint);
UUID sessionGuid=null;
for (ScSessionID scSessionID : contactsMap.keySet()) {
if (scSessionID.getSessionID().equals(sessionID)) {
sessionGuid=scSessionID.getGUID();
break;
}
}
OtrActivator.uiService.getChat(contact).addChatLinkClickedListener(ScOtrEngineImpl.this);
String unverifiedSessionWarning=OtrActivator.resourceService.getI18NString("plugin.otr.activator" + ".unverifiedsessionwarning",new String[]{contact.getDisplayName(),this.getClass().getName(),"AUTHENTIFICATION",sessionGuid.toString()});
OtrActivator.uiService.getChat(contact).addMessage(contact.getDisplayName(),new Date(),Chat.SYSTEM_MESSAGE,unverifiedSessionWarning,OperationSetBasicInstantMessaging.HTML_MIME_TYPE);
}
String otrAndHistoryMessage;
if (!ConfigurationUtils.isHistoryLoggingEnabled() || !isHistoryLoggingEnabled(contact)) {
otrAndHistoryMessage=OtrActivator.resourceService.getI18NString("plugin.otr.activator.historyoff",new String[]{OtrActivator.resourceService.getSettingsString("service.gui.APPLICATION_NAME"),this.getClass().getName(),"showHistoryPopupMenu"});
}
 else {
otrAndHistoryMessage=OtrActivator.resourceService.getI18NString("plugin.otr.activator.historyon",new String[]{OtrActivator.resourceService.getSettingsString("service.gui.APPLICATION_NAME"),this.getClass().getName(),"showHistoryPopupMenu"});
}
OtrActivator.uiService.getChat(contact).addMessage(contact.getDisplayName(),new Date(),Chat.SYSTEM_MESSAGE,otrAndHistoryMessage,OperationSetBasicInstantMessaging.HTML_MIME_TYPE);
message=OtrActivator.resourceService.getI18NString(OtrActivator.scOtrKeyManager.isVerified(contact,remoteFingerprint) ? "plugin.otr.activator.sessionstared" : "plugin.otr.activator" + ".unverifiedsessionstared",new String[]{contact.getDisplayName()});
break;
case FINISHED:
scSessionStatus=ScSessionStatus.FINISHED;
scSessionStatusMap.put(sessionID,scSessionStatus);
message=OtrActivator.resourceService.getI18NString("plugin.otr.activator.sessionfinished",new String[]{contact.getDisplayName()});
break;
case PLAINTEXT:
scSessionStatus=ScSessionStatus.PLAINTEXT;
scSessionStatusMap.put(sessionID,scSessionStatus);
message=OtrActivator.resourceService.getI18NString("plugin.otr.activator.sessionlost",new String[]{contact.getDisplayName()});
break;
}
OtrActivator.uiService.getChat(contact).addMessage(contact.getDisplayName(),new Date(),Chat.SYSTEM_MESSAGE,message,OperationSetBasicInstantMessaging.HTML_MIME_TYPE);
for (ScOtrEngineListener l : getListeners()) l.sessionStatusChanged(contact);
}
public void multipleInstancesDetected(SessionID sessionID){
Contact contact=getContact(sessionID);
if (contact == null) return;
for (ScOtrEngineListener l : getListeners()) l.multipleInstancesDetected(contact);
}
public void outgoingSessionChanged(SessionID sessionID){
Contact contact=getContact(sessionID);
if (contact == null) return;
for (ScOtrEngineListener l : getListeners()) l.outgoingSessionChanged(contact);
}
}
);
}
