{
  super(mainFrame);
  this.configList=new ConfigFormList(this);
  this.configScrollList=new SCScrollPane();
  this.configScrollList.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
  this.configScrollList.setViewportView(configList);
  this.setTitle(GuiActivator.getResources().getI18NString("service.gui.SETTINGS"));
  this.getContentPane().setLayout(new BorderLayout());
  this.addDefaultForms();
  this.mainPanel.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  this.mainPanel.add(centerPanel,BorderLayout.CENTER);
  this.mainPanel.add(configScrollList,BorderLayout.WEST);
  buttonsPanel.setBorder(BorderFactory.createMatteBorder(1,0,0,0,Constants.BORDER_COLOR));
  this.mainPanel.add(buttonsPanel,BorderLayout.SOUTH);
  this.getContentPane().add(mainPanel);
  GuiActivator.bundleContext.addServiceListener(this);
  ServiceReference[] confFormsRefs=null;
  try {
    confFormsRefs=GuiActivator.bundleContext.getServiceReferences(ConfigurationForm.class.getName(),null);
  }
 catch (  InvalidSyntaxException ex) {
  }
  if (confFormsRefs != null) {
    for (int i=0; i < confFormsRefs.length; i++) {
      ConfigurationForm form=(ConfigurationForm)GuiActivator.bundleContext.getService(confFormsRefs[i]);
      this.addConfigurationForm(form);
    }
  }
}
