{
  this.messageWindow=messageWindow;
  this.setRollover(true);
  this.setLayout(new FlowLayout(FlowLayout.LEFT,0,0));
  this.setPreferredSize(new Dimension(300,DEFAULT_BUTTON_HEIGHT));
  this.add(cutButton);
  this.add(copyButton);
  this.add(pasteButton);
  this.addSeparator();
  this.add(settingsButton);
  this.addSeparator();
  this.add(previousButton);
  this.add(nextButton);
  this.addSeparator();
  this.add(historyButton);
  this.addSeparator();
  this.add(addButton);
  this.saveButton.setName("save");
  this.saveButton.setToolTipText(Messages.getI18NString("save").getText() + " Ctrl-S");
  this.printButton.setName("print");
  this.printButton.setToolTipText(Messages.getI18NString("print").getText());
  this.cutButton.setName("cut");
  this.cutButton.setToolTipText(Messages.getI18NString("cut").getText() + " Ctrl-X");
  this.copyButton.setName("copy");
  this.copyButton.setToolTipText(Messages.getI18NString("copy").getText() + " Ctrl-C");
  this.pasteButton.setName("paste");
  this.pasteButton.setToolTipText(Messages.getI18NString("paste").getText() + " Ctrl-P");
  this.previousButton.setName("previous");
  this.previousButton.setToolTipText(Messages.getI18NString("previousTooltip").getText());
  this.nextButton.setName("next");
  this.nextButton.setToolTipText(Messages.getI18NString("nextTooltip").getText());
  this.sendFileButton.setName("sendFile");
  this.sendFileButton.setToolTipText(Messages.getI18NString("sendFile").getText());
  this.historyButton.setName("history");
  this.historyButton.setToolTipText(Messages.getI18NString("history").getText() + " Ctrl-H");
  this.addButton.setName("addContact");
  this.addButton.setToolTipText(Messages.getI18NString("addContact").getText());
  this.fontButton.setName("font");
  this.fontButton.setToolTipText(Messages.getI18NString("font").getText());
  this.settingsButton.setName("settings");
  this.settingsButton.setToolTipText(Messages.getI18NString("settings").getText());
  this.saveButton.setPreferredSize(new Dimension(DEFAULT_BUTTON_WIDTH,DEFAULT_BUTTON_HEIGHT));
  this.printButton.setPreferredSize(new Dimension(DEFAULT_BUTTON_WIDTH,DEFAULT_BUTTON_HEIGHT));
  this.cutButton.setPreferredSize(new Dimension(DEFAULT_BUTTON_WIDTH,DEFAULT_BUTTON_HEIGHT));
  this.copyButton.setPreferredSize(new Dimension(DEFAULT_BUTTON_WIDTH,DEFAULT_BUTTON_HEIGHT));
  this.pasteButton.setPreferredSize(new Dimension(DEFAULT_BUTTON_WIDTH,DEFAULT_BUTTON_HEIGHT));
  this.previousButton.setPreferredSize(new Dimension(DEFAULT_BUTTON_WIDTH,DEFAULT_BUTTON_HEIGHT));
  this.nextButton.setPreferredSize(new Dimension(DEFAULT_BUTTON_WIDTH,DEFAULT_BUTTON_HEIGHT));
  this.sendFileButton.setPreferredSize(new Dimension(DEFAULT_BUTTON_WIDTH,DEFAULT_BUTTON_HEIGHT));
  this.historyButton.setPreferredSize(new Dimension(DEFAULT_BUTTON_WIDTH,DEFAULT_BUTTON_HEIGHT));
  this.fontButton.setPreferredSize(new Dimension(DEFAULT_BUTTON_WIDTH,DEFAULT_BUTTON_HEIGHT));
  this.settingsButton.setPreferredSize(new Dimension(DEFAULT_BUTTON_WIDTH,DEFAULT_BUTTON_HEIGHT));
  this.saveButton.addMouseListener(this);
  this.printButton.addMouseListener(this);
  this.cutButton.addMouseListener(this);
  this.copyButton.addMouseListener(this);
  this.pasteButton.addMouseListener(this);
  this.previousButton.addMouseListener(this);
  this.nextButton.addMouseListener(this);
  this.sendFileButton.addMouseListener(this);
  this.historyButton.addMouseListener(this);
  this.addButton.addMouseListener(this);
  this.fontButton.addMouseListener(this);
  this.saveButton.setEnabled(false);
  this.printButton.setEnabled(false);
  this.sendFileButton.setEnabled(false);
  this.fontButton.setEnabled(false);
  this.initPluginComponents();
  messageWindow.addChatChangeListener(new ChatChangeListener(){
    public void chatChanged(    ChatPanel panel){
      if (panel instanceof MetaContactChatPanel) {
        MetaContact contact=((MetaContactChatPanel)panel).getMetaContact();
        if (contact == null)         return;
        Contact defaultContact=contact.getDefaultContact();
        if (defaultContact == null)         return;
        ContactGroup parent=defaultContact.getParentContactGroup();
        boolean isParentPersist=true;
        boolean isParentResolved=true;
        if (parent != null) {
          isParentPersist=parent.isPersistent();
          isParentResolved=parent.isResolved();
        }
        if (!defaultContact.isPersistent() && !defaultContact.isResolved() && !isParentPersist&& !isParentResolved) {
          addButton.setVisible(true);
          currentChatContact=defaultContact;
        }
 else {
          addButton.setVisible(false);
          currentChatContact=null;
        }
      }
    }
  }
);
}
