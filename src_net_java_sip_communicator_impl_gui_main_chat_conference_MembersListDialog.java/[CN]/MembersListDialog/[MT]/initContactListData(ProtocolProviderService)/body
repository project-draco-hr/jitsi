{
  this.setCurrentProvider(protocolProvider);
  srcContactList.removeAllContactSources();
  ContactSourceService currentProviderContactSource=new ProtocolContactSourceServiceImpl(protocolProvider,OperationSetMultiUserChat.class);
  currentStringContactSource=new StringContactSourceServiceImpl(protocolProvider,OperationSetMultiUserChat.class);
  currentStringContactSource.setDisableDisplayDetails(false);
  srcContactList.addContactSource(currentProviderContactSource);
  srcContactList.addContactSource(currentStringContactSource);
  srcContactList.applyDefaultFilter();
  new Thread(new Runnable(){
    @Override public void run(){
      List<String> membersWhiteList=MembersListDialog.this.chatRoomWrapper.getChatRoom().getMembersWhiteList();
      UIContactSource uiContactSource=srcContactList.getContactSource(currentStringContactSource);
      for (      String member : membersWhiteList) {
        SourceContact newSourceContact=currentStringContactSource.createSourceContact(member);
        destContactList.addContact(new InviteUIContact(uiContactSource.createUIContact(newSourceContact),protocolProvider),null,false,false);
      }
    }
  }
).start();
}
