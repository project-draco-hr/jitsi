{
  if (!SwingUtilities.isEventDispatchThread()) {
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        closeChat(chatPanel);
      }
    }
);
    return;
  }
synchronized (chatSyncRoot) {
    if (containsChat(chatPanel)) {
      Date lastMsgTimestamp=chatPanel.getChatConversationPanel().getLastIncomingMsgTimestamp();
      if (!chatPanel.isWriteAreaEmpty()) {
        int answer=showWarningMessage("service.gui.NON_EMPTY_CHAT_WINDOW_CLOSE",chatPanel);
        if (answer == JOptionPane.OK_OPTION)         closeChatPanel(chatPanel);
      }
 else       if (System.currentTimeMillis() - lastMsgTimestamp.getTime() < 2 * 1000) {
        int answer=showWarningMessage("service.gui.CLOSE_CHAT_AFTER_NEW_MESSAGE",chatPanel);
        if (answer == JOptionPane.OK_OPTION)         closeChatPanel(chatPanel);
      }
 else       if (chatPanel.containsActiveFileTransfers()) {
        int answer=showWarningMessage("service.gui.CLOSE_CHAT_ACTIVE_FILE_TRANSFER",chatPanel);
        if (answer == JOptionPane.OK_OPTION) {
          chatPanel.cancelActiveFileTransfers();
          closeChatPanel(chatPanel);
        }
      }
 else       if (chatPanel.getChatSession() instanceof AdHocConferenceChatSession) {
        AdHocConferenceChatSession adHocSession=(AdHocConferenceChatSession)chatPanel.getChatSession();
        GuiActivator.getUIService().getConferenceChatManager().leaveChatRoom((AdHocChatRoomWrapper)adHocSession.getDescriptor());
        closeChatPanel(chatPanel);
      }
 else {
        closeChatPanel(chatPanel);
      }
    }
  }
}
