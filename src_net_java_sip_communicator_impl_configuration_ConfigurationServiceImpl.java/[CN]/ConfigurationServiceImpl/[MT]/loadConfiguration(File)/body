{
  FailSafeTransaction trans=this.faService.createFailSafeTransaction(file);
  try {
    trans.restoreFile();
  }
 catch (  Exception e) {
    logger.error("can't restore the configuration file before loading" + " it",e);
  }
  try {
    DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
    DocumentBuilder builder=factory.newDocumentBuilder();
    Map properties=new Hashtable();
    if (file.length() < "<sip-communicator>".length() * 2)     propertiesDocument=createPropertiesDocument();
 else     propertiesDocument=builder.parse(file);
    Node root=propertiesDocument.getFirstChild();
    Node currentNode=null;
    NodeList children=root.getChildNodes();
    for (int i=0; i < children.getLength(); i++) {
      currentNode=children.item(i);
      if (currentNode.getNodeType() == Node.ELEMENT_NODE) {
        StringBuffer propertyNameBuff=new StringBuffer();
        propertyNameBuff.append(currentNode.getNodeName());
        loadNode(currentNode,propertyNameBuff,properties);
      }
    }
    return properties;
  }
 catch (  SAXException ex) {
    logger.error("Error parsing configuration file",ex);
    throw new XMLException(ex.getMessage(),ex);
  }
catch (  ParserConfigurationException ex) {
    logger.error("Error finding configuration for default parsers",ex);
    return new Hashtable();
  }
}
