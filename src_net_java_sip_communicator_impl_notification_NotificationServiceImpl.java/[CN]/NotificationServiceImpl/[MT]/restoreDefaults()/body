{
  Set<String> eventTypes=((Hashtable<String,EventNotification>)notificationsTable.clone()).keySet();
  for (  String eventType : eventTypes) {
    EventNotification notification=notificationsTable.get(eventType);
    Vector<String> actionsToRemove=new Vector<String>(notification.getActions().keySet());
    Iterator<String> actionIter=actionsToRemove.iterator();
    while (actionIter.hasNext()) {
      String actionType=actionIter.next();
      removeEventNotificationAction(eventType,actionType);
    }
    removeEventNotification(eventType);
  }
  for (  Map.Entry<String,EventNotification> entry : defaultNotificationsTable.entrySet()) {
    String eventType=entry.getKey();
    EventNotification notification=entry.getValue();
    Iterator<String> actionIter=notification.getActions().keySet().iterator();
    while (actionIter.hasNext()) {
      String actionType=actionIter.next();
      registerNotificationForEvent(eventType,actionType,notification.getAction(actionType).getActionHandler());
    }
  }
}
