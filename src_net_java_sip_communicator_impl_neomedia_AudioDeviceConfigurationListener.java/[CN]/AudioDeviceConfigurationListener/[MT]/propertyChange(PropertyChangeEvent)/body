{
  String propertyName=ev.getPropertyName();
  if (DeviceConfiguration.PROP_AUDIO_SYSTEM_DEVICES.equals(propertyName)) {
    @SuppressWarnings("unchecked") List<CaptureDeviceInfo> oldDevices=(List<CaptureDeviceInfo>)ev.getOldValue();
    @SuppressWarnings("unchecked") List<CaptureDeviceInfo> newDevices=(List<CaptureDeviceInfo>)ev.getNewValue();
    if (oldDevices.isEmpty())     oldDevices=null;
    if (newDevices.isEmpty())     newDevices=null;
    String title;
    ResourceManagementService r=NeomediaActivator.getResources();
    List<CaptureDeviceInfo> devices;
    boolean removal;
    if (newDevices != null) {
      title=r.getI18NString("impl.media.configform.AUDIO_DEVICE_CONNECTED");
      devices=newDevices;
      removal=false;
    }
 else     if (oldDevices != null) {
      title=r.getI18NString("impl.media.configform.AUDIO_DEVICE_DISCONNECTED");
      devices=oldDevices;
      removal=true;
    }
 else {
      capturePropertyChangeEvent=null;
      notifyPropertyChangeEvent=null;
      playbackPropertyChangeEvent=null;
      return;
    }
    StringBuilder body=new StringBuilder();
    for (    CaptureDeviceInfo device : devices)     body.append(device.getName()).append("\r\n");
    DeviceConfiguration devConf=(DeviceConfiguration)ev.getSource();
    AudioSystem audioSystem=devConf.getAudioSystem();
    boolean selectedHasChanged=false;
    if (audioSystem != null) {
      if (capturePropertyChangeEvent != null) {
        CaptureDeviceInfo cdi=audioSystem.getDevice(AudioSystem.CAPTURE_INDEX);
        if ((cdi != null) && !cdi.equals(capturePropertyChangeEvent.getOldValue())) {
          body.append("\r\n").append(r.getI18NString("impl.media.configform" + ".AUDIO_DEVICE_SELECTED_AUDIO_IN")).append("\r\n\t").append(cdi.getName());
          selectedHasChanged=true;
        }
      }
      if (playbackPropertyChangeEvent != null) {
        CaptureDeviceInfo cdi=audioSystem.getDevice(AudioSystem.PLAYBACK_INDEX);
        if ((cdi != null) && !cdi.equals(playbackPropertyChangeEvent.getOldValue())) {
          body.append("\r\n").append(r.getI18NString("impl.media.configform" + ".AUDIO_DEVICE_SELECTED_AUDIO_OUT")).append("\r\n\t").append(cdi.getName());
          selectedHasChanged=true;
        }
      }
      if (notifyPropertyChangeEvent != null) {
        CaptureDeviceInfo cdi=audioSystem.getDevice(AudioSystem.NOTIFY_INDEX);
        if ((cdi != null) && !cdi.equals(notifyPropertyChangeEvent.getOldValue())) {
          body.append("\r\n").append(r.getI18NString("impl.media.configform" + ".AUDIO_DEVICE_SELECTED_AUDIO_NOTIFICATIONS")).append("\r\n\t").append(cdi.getName());
          selectedHasChanged=true;
        }
      }
    }
    capturePropertyChangeEvent=null;
    notifyPropertyChangeEvent=null;
    playbackPropertyChangeEvent=null;
    if (!removal || selectedHasChanged) {
      showPopUpNotification(title,body.toString(),NeomediaActivator.DEVICE_CONFIGURATION_HAS_CHANGED);
    }
  }
 else   if (CaptureDevices.PROP_DEVICE.equals(propertyName)) {
    capturePropertyChangeEvent=ev;
  }
 else   if (NotifyDevices.PROP_DEVICE.equals(propertyName)) {
    notifyPropertyChangeEvent=ev;
  }
 else   if (PlaybackDevices.PROP_DEVICE.equals(propertyName)) {
    playbackPropertyChangeEvent=ev;
  }
}
