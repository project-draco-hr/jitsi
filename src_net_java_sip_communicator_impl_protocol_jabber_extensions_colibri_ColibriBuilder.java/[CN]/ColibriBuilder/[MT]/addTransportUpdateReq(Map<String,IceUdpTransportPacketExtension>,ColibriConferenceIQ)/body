{
  Objects.requireNonNull(map,"map");
  Objects.requireNonNull(localChannelsInfo,"localChannelsInfo");
  if (conferenceState == null || StringUtils.isNullOrEmpty(conferenceState.getID())) {
    return false;
  }
  boolean hasAnyChanges=false;
  assertRequestType(RequestType.CHANNEL_INFO_UPDATE);
  request.setType(IQ.Type.SET);
  for (  Map.Entry<String,IceUdpTransportPacketExtension> e : map.entrySet()) {
    String contentName=e.getKey();
    ColibriConferenceIQ.ChannelCommon channel=getColibriChannel(localChannelsInfo,contentName);
    if (channel != null) {
      IceUdpTransportPacketExtension transport=IceUdpTransportPacketExtension.cloneTransportAndCandidates(e.getValue(),true);
      ColibriConferenceIQ.ChannelCommon channelRequest=channel instanceof ColibriConferenceIQ.Channel ? new ColibriConferenceIQ.Channel() : new ColibriConferenceIQ.SctpConnection();
      channelRequest.setID(channel.getID());
      channelRequest.setEndpoint(channel.getEndpoint());
      channelRequest.setTransport(transport);
      request.getOrCreateContent(contentName).addChannelCommon(channelRequest);
      hasAnyChanges=true;
    }
  }
  return hasAnyChanges;
}
