{
  ContactGroup rootGroup=opSetPersPresence1.getServerStoredContactListRoot();
  logger.debug("=========== Server Stored Contact List =================");
  logger.debug("rootGroup=" + rootGroup.getGroupName() + " rootGroup.childContacts="+ rootGroup.countContacts()+ "rootGroup.childGroups="+ rootGroup.countSubgroups()+ "Printing rootGroupContents=\n"+ rootGroup.toString());
  Hashtable<String,List<String>> expectedContactList=AdHocMultiUserChatSlickFixture.preInstalledBuddyList;
  logger.debug("============== Expected Contact List ===================");
  logger.debug(expectedContactList);
  Iterator<ContactGroup> groups=rootGroup.subgroups();
  while (groups.hasNext()) {
    ContactGroup group=groups.next();
    List<String> expectedContactsInGroup=expectedContactList.get(group.getGroupName());
    if (!group.getGroupName().equals("NotInContactList") && !group.getGroupName().equals("Default group")) {
      assertNotNull("Group " + group.getGroupName() + " was returned by "+ "the server but was not in the expected contact list.",expectedContactsInGroup);
      Iterator<Contact> contactsIter=group.contacts();
      while (contactsIter.hasNext()) {
        String contactID=contactsIter.next().getAddress();
        expectedContactsInGroup.remove(contactID);
      }
      if (expectedContactsInGroup.size() == 0)       expectedContactList.remove(group.getGroupName());
    }
  }
  assertTrue("The following contacts were on the server sidec contact " + "list, but were not returned by the pers. pres. op. set" + expectedContactList.toString(),expectedContactList.isEmpty());
}
