{
  String autoPopup=configService.getString("net.java.sip.communicator.impl.gui.autoPopupNewMessage");
  if (autoPopup != null && autoPopup.equalsIgnoreCase("yes"))   autoPopupNewMessage=true;
  String messageCommand=configService.getString("net.java.sip.communicator.impl.gui.sendMessageCommand");
  if (messageCommand == null || messageCommand != "")   sendMessageCommand=messageCommand;
  String callPanelShown=configService.getString("net.java.sip.communicator.impl.gui.showCallPanel");
  if (callPanelShown != null && callPanelShown != "") {
    isCallPanelShown=new Boolean(callPanelShown).booleanValue();
  }
  String showOffline=configService.getString("net.java.sip.communicator.impl.gui.showOffline");
  if (showOffline != null && showOffline != "") {
    isShowOffline=new Boolean(showOffline).booleanValue();
  }
  String isVisible=configService.getString("net.java.sip.communicator.impl.systray.showApplication");
  if (isVisible != null && isVisible != "") {
    isApplicationVisible=new Boolean(isVisible).booleanValue();
  }
  String quitWarningShown=configService.getString("net.java.sip.communicator.impl.gui.quitWarningShown");
  if (quitWarningShown != null && quitWarningShown != "") {
    isQuitWarningShown=new Boolean(quitWarningShown).booleanValue();
  }
  String isSendTypingNotif=configService.getString("net.java.sip.communicator.impl.gui.sendTypingNotifications");
  if (isSendTypingNotif != null && isSendTypingNotif != "") {
    isSendTypingNotifications=new Boolean(isSendTypingNotif).booleanValue();
  }
  String isMoveContactConfirmationRequestedString=configService.getString("net.java.sip.communicator.impl.gui.isMoveContactConfirmationRequested");
  if (isMoveContactConfirmationRequestedString != null && isMoveContactConfirmationRequestedString != "") {
    isMoveContactConfirmationRequested=new Boolean(isMoveContactConfirmationRequestedString).booleanValue();
  }
  String isMultiChatWindowEnabledString=configService.getString("net.java.sip.communicator.impl.gui.isMultiChatWindowEnabled");
  if (isMultiChatWindowEnabledString != null && isMultiChatWindowEnabledString != "") {
    isMultiChatWindowEnabled=new Boolean(isMultiChatWindowEnabledString).booleanValue();
  }
  lastContactParent=configService.getString("net.java.sip.communicator.impl.gui.addcontact.lastContactParent");
}
