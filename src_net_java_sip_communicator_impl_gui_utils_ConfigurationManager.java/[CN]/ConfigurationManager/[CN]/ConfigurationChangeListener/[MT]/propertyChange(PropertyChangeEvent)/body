{
  if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.addcontact.lastContactParent"))   lastContactParent=(String)evt.getNewValue();
 else   if (evt.getPropertyName().equals("service.gui.AUTO_POPUP_NEW_MESSAGE")) {
    String autoPopupString=(String)evt.getNewValue();
    autoPopupNewMessage=new Boolean(autoPopupString).booleanValue();
  }
 else   if (evt.getPropertyName().equals("service.gui.SEND_MESSAGE_COMMAND")) {
    sendMessageCommand=(String)evt.getNewValue();
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.showCallPanel")) {
    String showCallPanelString=(String)evt.getNewValue();
    isCallPanelShown=new Boolean(showCallPanelString).booleanValue();
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.showOffline")) {
    String showOfflineString=(String)evt.getNewValue();
    isShowOffline=new Boolean(showOfflineString).booleanValue();
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.systray.showApplication")) {
    String showApplicationString=(String)evt.getNewValue();
    isApplicationVisible=new Boolean(showApplicationString).booleanValue();
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.quitWarningShown")) {
    String showQuitWarningString=(String)evt.getNewValue();
    isQuitWarningShown=new Boolean(showQuitWarningString).booleanValue();
  }
 else   if (evt.getPropertyName().equals("service.gui.SEND_TYPING_NOTIFICATIONS_ENABLED")) {
    String sendTypingNorifString=(String)evt.getNewValue();
    isSendTypingNotifications=new Boolean(sendTypingNorifString).booleanValue();
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.isMoveContactConfirmationRequested")) {
    String moveContactConfirmString=(String)evt.getNewValue();
    isMoveContactConfirmationRequested=new Boolean(moveContactConfirmString).booleanValue();
  }
 else   if (evt.getPropertyName().equals("service.gui.IS_MULTI_CHAT_WINDOW_ENABLED")) {
    String multiChatWindowString=(String)evt.getNewValue();
    isMultiChatWindowEnabled=new Boolean(multiChatWindowString).booleanValue();
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.isHistoryLoggingEnabled")) {
    String historyLoggingString=(String)evt.getNewValue();
    isHistoryLoggingEnabled=new Boolean(historyLoggingString).booleanValue();
  }
 else   if (evt.getPropertyName().equals("service.gui.IS_MESSAGE_HISTORY_SHOWN")) {
    String historyShownString=(String)evt.getNewValue();
    isHistoryShown=new Boolean(historyShownString).booleanValue();
  }
 else   if (evt.getPropertyName().equals("service.gui.MESSAGE_HISTORY_SIZE")) {
    String chatHistorySizeString=(String)evt.getNewValue();
    chatHistorySize=new Integer(chatHistorySizeString).intValue();
  }
 else   if (evt.getPropertyName().equals("impl.gui.IS_TRANSPARENT_WINDOW_ENABLED")) {
    String isTransparentString=(String)evt.getNewValue();
    isTransparentWindowEnabled=new Boolean(isTransparentString).booleanValue();
  }
 else   if (evt.getPropertyName().equals("impl.gui.WINDOW_TRANSPARENCY")) {
    String windowTransparencyString=(String)evt.getNewValue();
    windowTransparency=new Integer(windowTransparencyString).intValue();
  }
}
