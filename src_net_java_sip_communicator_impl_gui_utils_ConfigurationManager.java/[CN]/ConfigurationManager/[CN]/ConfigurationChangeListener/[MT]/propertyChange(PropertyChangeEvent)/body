{
  if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.addcontact.lastContactParent"))   lastContactParent=(String)evt.getNewValue();
 else   if (evt.getPropertyName().equals("service.gui.AUTO_POPUP_NEW_MESSAGE")) {
    String autoPopupString=(String)evt.getNewValue();
    autoPopupNewMessage=Boolean.parseBoolean(autoPopupString);
  }
 else   if (evt.getPropertyName().equals("service.gui.SEND_MESSAGE_COMMAND")) {
    sendMessageCommand=(String)evt.getNewValue();
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.showCallPanel")) {
    String showCallPanelString=(String)evt.getNewValue();
    isCallPanelShown=Boolean.parseBoolean(showCallPanelString);
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.showOffline")) {
    String showOfflineString=(String)evt.getNewValue();
    isShowOffline=Boolean.parseBoolean(showOfflineString);
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.systray.showApplication")) {
    String showApplicationString=(String)evt.getNewValue();
    isApplicationVisible=new Boolean(showApplicationString).booleanValue();
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.quitWarningShown")) {
    String showQuitWarningString=(String)evt.getNewValue();
    isQuitWarningShown=Boolean.parseBoolean(showQuitWarningString);
  }
 else   if (evt.getPropertyName().equals("service.gui.SEND_TYPING_NOTIFICATIONS_ENABLED")) {
    String sendTypingNorifString=(String)evt.getNewValue();
    isSendTypingNotifications=Boolean.parseBoolean(sendTypingNorifString);
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.isMoveContactConfirmationRequested")) {
    String moveContactConfirmString=(String)evt.getNewValue();
    isMoveContactConfirmationRequested=Boolean.parseBoolean(moveContactConfirmString);
  }
 else   if (evt.getPropertyName().equals("service.gui.IS_MULTI_CHAT_WINDOW_ENABLED")) {
    String multiChatWindowString=(String)evt.getNewValue();
    isMultiChatWindowEnabled=Boolean.parseBoolean(multiChatWindowString);
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.isHistoryLoggingEnabled")) {
    String historyLoggingString=(String)evt.getNewValue();
    isHistoryLoggingEnabled=Boolean.parseBoolean(historyLoggingString);
  }
 else   if (evt.getPropertyName().equals("service.gui.IS_MESSAGE_HISTORY_SHOWN")) {
    String historyShownString=(String)evt.getNewValue();
    isHistoryShown=Boolean.parseBoolean(historyShownString);
  }
 else   if (evt.getPropertyName().equals("service.gui.MESSAGE_HISTORY_SIZE")) {
    String chatHistorySizeString=(String)evt.getNewValue();
    chatHistorySize=new Integer(chatHistorySizeString).intValue();
  }
 else   if (evt.getPropertyName().equals("impl.gui.IS_TRANSPARENT_WINDOW_ENABLED")) {
    String isTransparentString=(String)evt.getNewValue();
    isTransparentWindowEnabled=Boolean.parseBoolean(isTransparentString);
  }
 else   if (evt.getPropertyName().equals("impl.gui.WINDOW_TRANSPARENCY")) {
    String windowTransparencyString=(String)evt.getNewValue();
    windowTransparency=new Integer(windowTransparencyString).intValue();
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.chat.ChatWindow.showStylebar")) {
    String chatBarString=(String)evt.getNewValue();
    isChatStylebarVisible=Boolean.parseBoolean(chatBarString);
  }
 else   if (evt.getPropertyName().equals("net.java.sip.communicator.impl.gui.chat.ChatWindow.showToolbar")) {
    String chatBarString=(String)evt.getNewValue();
    isChatToolbarVisible=Boolean.parseBoolean(chatBarString);
  }
}
