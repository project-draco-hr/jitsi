{
  Bundle providerBundle=MsnSlickFixture.providerBundle;
  providerBundle.stop();
  assertTrue("Couldn't stop the protocol provider bundle. State was " + providerBundle.getState(),Bundle.ACTIVE != providerBundle.getState() && Bundle.STOPPING != providerBundle.getState());
  providerBundle.uninstall();
  assertEquals("Couldn't stop the protocol provider bundle.",Bundle.UNINSTALLED,providerBundle.getState());
  providerBundle=MsnSlickFixture.bc.installBundle(providerBundle.getLocation());
  assertEquals("Couldn't re-install protocol provider bundle.",Bundle.INSTALLED,providerBundle.getState());
  AccountManagerUtils.startBundleAndWaitStoredAccountsLoaded(MsnSlickFixture.bc,providerBundle,ProtocolNames.MSN);
  assertEquals("Couldn't re-start protocol provider bundle.",Bundle.ACTIVE,providerBundle.getState());
  ServiceReference[] msnProviderRefs=null;
  try {
    msnProviderRefs=MsnSlickFixture.bc.getServiceReferences(ProtocolProviderService.class.getName(),"(" + ProtocolProviderFactory.PROTOCOL + "="+ ProtocolNames.MSN+ ")");
  }
 catch (  InvalidSyntaxException ex) {
    fail("We apparently got our filter wrong " + ex.getMessage());
  }
  assertTrue("A msn Protocol Provider Service was still regged as an " + "osgi service after it was explicitly uninstalled",msnProviderRefs == null || msnProviderRefs.length == 0);
  ServiceReference confReference=MsnSlickFixture.bc.getServiceReference(ConfigurationService.class.getName());
  ConfigurationService configurationService=(ConfigurationService)MsnSlickFixture.bc.getService(confReference);
  configurationService.purgeStoredConfiguration();
}
