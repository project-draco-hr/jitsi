{
  try {
    logger.logEntry();
    InetAddress localHost=null;
    InetAddress mappedAddress=null;
    InetAddress stunConfirmedAddress=null;
    InetAddress linkLocalAddress=null;
    InetAddress publicAddress=null;
    String selectedInterface=null;
    String preferredAddr=configurationService.getString(PROP_PREFERRED_NET_ADDRESS);
    String preferredIface=configurationService.getString(PROP_PREFERRED_NET_IFACE);
    boolean preferIPv4Stack=Boolean.getBoolean(PROP_PREF_IPV4_STACK);
    boolean preferIPv6Addrs=Boolean.getBoolean(PROP_PREF_IPV6_ADDRS);
    try {
      if (useStun) {
        StunAddress stunMappedAddress=queryStunServer(RANDOM_PORT);
        mappedAddress=(stunMappedAddress == null) ? null : stunMappedAddress.getSocketAddress().getAddress();
      }
      Enumeration localIfaces=NetworkInterface.getNetworkInterfaces();
      interfaces_loop:       while (localIfaces.hasMoreElements()) {
        NetworkInterface iFace=(NetworkInterface)localIfaces.nextElement();
        Enumeration addresses=iFace.getInetAddresses();
        addresses_loop:         while (addresses.hasMoreElements()) {
          InetAddress address=(InetAddress)addresses.nextElement();
          if (address.isAnyLocalAddress() || address.isLinkLocalAddress() || address.isLoopbackAddress()|| isWindowsAutoConfiguredIPv4Address(address)) {
            continue addresses_loop;
          }
          if (mappedAddress != null && mappedAddress.equals(address)) {
            if (logger.isDebugEnabled())             logger.debug("Returninng localhost: Mapped " + "address = Public address = " + address);
            stunConfirmedAddress=address;
          }
 else           if (isLinkLocalIPv4Address(address)) {
            if (logger.isDebugEnabled())             logger.debug("Found Linklocal ipv4 address " + address);
            linkLocalAddress=address;
          }
 else {
            if (logger.isDebugEnabled())             logger.debug("Found a public address " + address);
            if ((publicAddress != null && preferredAddr != null && preferredAddr.equals(publicAddress.getHostAddress())) || (publicAddress != null && selectedInterface != null && preferredIface != null && preferredIface.equals(selectedInterface)) || (publicAddress != null && publicAddress instanceof Inet4Address && address instanceof Inet6Address && preferIPv4Stack)|| (publicAddress != null && publicAddress instanceof Inet6Address && address instanceof Inet4Address && !preferIPv4Stack)) {
              continue;
            }
            publicAddress=address;
            selectedInterface=iFace.getDisplayName();
          }
        }
      }
      if (stunConfirmedAddress != null && !preferIPv6Addrs) {
        logger.debug("Returning stun confirmed address");
        return stunConfirmedAddress;
      }
      if (publicAddress != null) {
        logger.debug("Returning public address");
        return publicAddress;
      }
      if (linkLocalAddress != null) {
        logger.debug("Returning link local address");
        return linkLocalAddress;
      }
      if (anyAddressIsAccepted)       localHost=new InetSocketAddress(RANDOM_PORT).getAddress();
 else       localHost=InetAddress.getLocalHost();
    }
 catch (    Exception ex) {
      logger.error("Failed to determine the localhost address, " + "returning the any address (0.0.0.0/::0)",ex);
      localHost=new InetSocketAddress(RANDOM_PORT).getAddress();
    }
    if (logger.isDebugEnabled())     logger.debug("Returning localhost address=" + localHost);
    return localHost;
  }
  finally {
    logger.logExit();
  }
}
