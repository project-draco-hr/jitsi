{
  Format inputFormat=super.setInputFormat(format);
  if (inputFormat != null) {
    double outputSampleRate;
    int outputChannels;
    long outputDuration;
    if (outputFormat == null) {
      outputSampleRate=Format.NOT_SPECIFIED;
      outputChannels=Format.NOT_SPECIFIED;
      outputDuration=Format.NOT_SPECIFIED;
    }
 else {
      AudioFormat outputAudioFormat=(AudioFormat)outputFormat;
      outputSampleRate=outputAudioFormat.getSampleRate();
      outputChannels=outputAudioFormat.getChannels();
      outputDuration=outputAudioFormat.computeDuration(0);
    }
    AudioFormat inputAudioFormat=(AudioFormat)inputFormat;
    double inputSampleRate=inputAudioFormat.getSampleRate();
    int inputChannels=inputAudioFormat.getChannels();
    if ((outputSampleRate != inputSampleRate) || (outputChannels != inputChannels) || (outputDuration == Format.NOT_SPECIFIED)) {
      setOutputFormat(new AudioFormat(Constants.SPEEX_RTP,inputSampleRate,Format.NOT_SPECIFIED,inputChannels,AudioFormat.LITTLE_ENDIAN,AudioFormat.SIGNED,Format.NOT_SPECIFIED,Format.NOT_SPECIFIED,Format.byteArray){
        @Override public long computeDuration(        long length){
          return duration;
        }
      }
);
    }
  }
  return inputFormat;
}
