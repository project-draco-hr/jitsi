{
  TrackControl[] trackControls=sourceProcessor.getTrackControls();
  logger.debug("We will be able to transmit in:");
  List<String> transmittableAudioEncodings=new ArrayList<String>();
  List<String> transmittableVideoEncodings=new ArrayList<String>();
  for (int i=0; i < trackControls.length; i++) {
    Format[] formats=trackControls[i].getSupportedFormats();
    for (int j=0; j < formats.length; j++) {
      Format format=formats[j];
      String encoding=format.getEncoding();
      int sdpInt=MediaUtils.jmfToSdpEncoding(encoding);
      if (sdpInt != MediaUtils.UNKNOWN_ENCODING) {
        String sdp=String.valueOf(sdpInt);
        if (format instanceof AudioFormat) {
          if (!transmittableAudioEncodings.contains(sdp)) {
            if (logger.isDebugEnabled()) {
              logger.debug("Audio=[" + (j + 1) + "]="+ encoding+ "; sdp="+ sdp);
            }
            transmittableAudioEncodings.add(sdp);
          }
        }
 else         if (format instanceof VideoFormat) {
          if (!transmittableVideoEncodings.contains(sdp)) {
            if (logger.isDebugEnabled()) {
              logger.debug("Video=[" + (j + 1) + "]="+ encoding+ "; sdp="+ sdp);
            }
            transmittableVideoEncodings.add(sdp);
          }
        }
      }
 else {
        logger.debug("unknown encoding format " + encoding);
      }
    }
  }
  final int transmittableAudioEncodingCount=transmittableAudioEncodings.size();
  if (transmittableAudioEncodingCount > 0) {
    supportedAudioEncodings=transmittableAudioEncodings.toArray(new String[transmittableAudioEncodingCount]);
    this.sortEncodingsArray(supportedAudioEncodings);
  }
{
  }
  final int transmittableVideoEncodingCount=transmittableVideoEncodings.size();
  if (transmittableVideoEncodingCount > 0) {
    supportedVideoEncodings=transmittableVideoEncodings.toArray(new String[transmittableVideoEncodingCount]);
    this.sortEncodingsArray(supportedVideoEncodings);
  }
{
  }
}
