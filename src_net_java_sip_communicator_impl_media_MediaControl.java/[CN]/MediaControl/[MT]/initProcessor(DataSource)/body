{
  encodingConfiguration.registerCustomCodecs();
  try {
    try {
      dataSource.connect();
    }
 catch (    NullPointerException ex) {
      logger.error("An internal error occurred while" + " trying to connec to the datasource!",ex);
      throw new MediaException("An internal error occurred while" + " trying to connec to the datasource!",MediaException.INTERNAL_ERROR,ex);
    }
    Control ctl=(Control)dataSource.getControl("javax.media.control.BufferControl");
    if (ctl != null) {
      if (!OSUtils.IS_LINUX)       ((BufferControl)ctl).setBufferLength(60);
    }
    sourceProcessor=Manager.createProcessor(dataSource);
    if (!processorUtility.waitForState(sourceProcessor,Processor.Configured)) {
      throw new MediaException("Media manager could not configure processor\n" + "for the specified data source",MediaException.INTERNAL_ERROR);
    }
  }
 catch (  NoProcessorException ex) {
    logger.error("Media manager could not create a processor\n" + "for the specified data source",ex);
    throw new MediaException("Media manager could not create a processor\n" + "for the specified data source",MediaException.INTERNAL_ERROR,ex);
  }
catch (  IOException ex) {
    logger.error("Media manager could not connect " + "to the specified data source",ex);
    throw new MediaException("Media manager could not connect " + "to the specified data source",MediaException.INTERNAL_ERROR,ex);
  }
  sourceProcessor.setContentDescriptor(new ContentDescriptor(ContentDescriptor.RAW_RTP));
synchronized (supportedEncodingsAreCalculated) {
    supportedEncodingsAreCalculated[0]=false;
  }
}
