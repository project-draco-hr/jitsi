{
  super(new GridLayout(5,1));
  config=MailboxActivator.getConfigurationService();
  jtfOutgoingMessage.setText(Mailbox.getOutgoingMessageFileLocation().toString());
  jpOutgoingMessage.add(jlblOutgoingMessage);
  jpOutgoingMessage.add(jtfOutgoingMessage);
  jpOutgoingMessage.add(jbtnOutgoingMessage);
  jtfIncomingMessage.setText(Mailbox.getIncomingMessageDirectory().toString());
  jfcIncomingMessage.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
  jpIncomingMessage.add(jlblIncomingMessage);
  jpIncomingMessage.add(jtfIncomingMessage);
  jpIncomingMessage.add(jbtnIncomingMessage);
  jsWaitTime.setValue(new Integer(Mailbox.getWaitTime()));
  jpWaitTime.add(jlblWaitTime);
  jpWaitTime.add(jsWaitTime);
  jsMaxMessageTime.setValue(new Integer(Mailbox.getMaxMessageDuration()));
  jpMaxMessageTime.add(jlblMaxMessageTime);
  jpMaxMessageTime.add(jsMaxMessageTime);
  jpConfirmDefault.add(jbtnConfirm);
  jpConfirmDefault.add(jbtnDefault);
  this.add(jpOutgoingMessage);
  this.add(jpIncomingMessage);
  this.add(jpWaitTime);
  this.add(jpMaxMessageTime);
  this.add(jpConfirmDefault);
  jbtnIncomingMessage.addActionListener(this);
  jbtnOutgoingMessage.addActionListener(this);
  jbtnConfirm.addActionListener(this);
  jbtnDefault.addActionListener(this);
  jtfIncomingMessage.setColumns(20);
  jtfOutgoingMessage.setColumns(20);
  ((JSpinner.DefaultEditor)jsWaitTime.getEditor()).getTextField().setColumns(6);
  ((JSpinner.DefaultEditor)jsMaxMessageTime.getEditor()).getTextField().setColumns(6);
}
