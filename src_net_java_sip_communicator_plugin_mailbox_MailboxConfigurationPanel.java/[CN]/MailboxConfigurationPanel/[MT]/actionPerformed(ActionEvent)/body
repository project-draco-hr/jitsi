{
  if (e.getSource() == jbtnIncomingMessage) {
    jfcIncomingMessage.setCurrentDirectory(Mailbox.getIncomingMessageDirectory());
    int returnVal=jfcIncomingMessage.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
      File file=jfcIncomingMessage.getSelectedFile();
      jtfIncomingMessage.setText(file.toString());
    }
  }
 else   if (e.getSource() == jbtnOutgoingMessage) {
    jfcOutgoingMessage.setCurrentDirectory(Mailbox.getOutgoingMessageFileLocation());
    int returnVal=jfcOutgoingMessage.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
      File file=jfcOutgoingMessage.getSelectedFile();
      jtfIncomingMessage.setText(file.toString());
    }
  }
 else   if (e.getSource() == jbtnConfirm) {
    config.setProperty(Mailbox.MAX_MSG_DURATION_PROPERTY_NAME,(Integer)jsMaxMessageTime.getValue());
    config.setProperty(Mailbox.WAIT_TIME_PROPERTY_NAME,(Integer)jsWaitTime.getValue());
    config.setProperty(Mailbox.INCOMING_MESSAGE_PROPERTY_NAME,jtfIncomingMessage.getText());
    config.setProperty(Mailbox.OUTGOING_MESSAGE_PROPERTY_NAME,jtfOutgoingMessage.getText());
    JOptionPane.showMessageDialog(this,"Values Set!");
  }
 else   if (e.getSource() == jbtnDefault) {
    int choice=JOptionPane.showConfirmDialog(this,"OK to reset all values to default?","Set Defaults?",JOptionPane.YES_NO_OPTION);
    if (choice == JOptionPane.YES_OPTION) {
      config.setProperty(Mailbox.MAX_MSG_DURATION_PROPERTY_NAME,null);
      config.setProperty(Mailbox.WAIT_TIME_PROPERTY_NAME,null);
      config.setProperty(Mailbox.INCOMING_MESSAGE_PROPERTY_NAME,null);
      config.setProperty(Mailbox.OUTGOING_MESSAGE_PROPERTY_NAME,null);
      config.setProperty(Mailbox.MAX_MSG_DURATION_PROPERTY_NAME,Mailbox.getMaxMessageDuration());
      config.setProperty(Mailbox.WAIT_TIME_PROPERTY_NAME,Mailbox.getWaitTime());
      config.setProperty(Mailbox.INCOMING_MESSAGE_PROPERTY_NAME,Mailbox.getIncomingMessageDirectory());
      config.setProperty(Mailbox.OUTGOING_MESSAGE_PROPERTY_NAME,Mailbox.getOutgoingMessageFileLocation());
      jtfIncomingMessage.setText(Mailbox.getIncomingMessageDirectory().toString());
      jtfOutgoingMessage.setText(Mailbox.getOutgoingMessageFileLocation().toString());
      jsWaitTime.setValue(Mailbox.getWaitTime());
      jsMaxMessageTime.setValue(Mailbox.getMaxMessageDuration());
    }
  }
}
