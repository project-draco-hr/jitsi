{
  stringBuffer.append(getLineString(callPeer.getAddress(),""));
  if (callPeer.getCallDurationStartTime() != CallPeer.CALL_DURATION_START_TIME_UNKNOWN) {
    Date startTime=new Date(callPeer.getCallDurationStartTime());
    stringBuffer.append(getLineString(resources.getI18NString("service.gui.callinfo.CALL_DURATION"),GuiUtils.formatTime(startTime.getTime(),System.currentTimeMillis())));
  }
  if (callPeer instanceof MediaAwareCallPeer) {
    CallPeerMediaHandler callPeerMediaHandler=((MediaAwareCallPeer)callPeer).getMediaHandler();
    if (callPeerMediaHandler != null) {
      String iceCandidateExtendedType=callPeerMediaHandler.getICECandidateExtendedType();
      if (iceCandidateExtendedType != null) {
        stringBuffer.append(getLineString(resources.getI18NString("service.gui.callinfo.ICE_CANDIDATE_EXTENDED_TYPE"),iceCandidateExtendedType));
      }
      String iceState=callPeerMediaHandler.getICEState();
      if (iceState != null && !iceState.equals("Terminated")) {
        stringBuffer.append(getLineString(resources.getI18NString("service.gui.callinfo.ICE_STATE"),resources.getI18NString("service.gui.callinfo.ICE_STATE." + iceState)));
      }
      MediaStream mediaStream=callPeerMediaHandler.getStream(MediaType.AUDIO);
      if (mediaStream != null && mediaStream.isStarted()) {
        stringBuffer.append("<br/>");
        stringBuffer.append(getLineString(resources.getI18NString("service.gui.callinfo.AUDIO_INFO"),""));
        this.appendStreamEncryptionMethod(stringBuffer,callPeerMediaHandler,mediaStream,MediaType.AUDIO);
        constructAudioVideoInfo(mediaStream,stringBuffer);
      }
      mediaStream=callPeerMediaHandler.getStream(MediaType.VIDEO);
      if (mediaStream != null && mediaStream.isStarted()) {
        stringBuffer.append("<br/>");
        stringBuffer.append(getLineString(resources.getI18NString("service.gui.callinfo.VIDEO_INFO"),""));
        this.appendStreamEncryptionMethod(stringBuffer,callPeerMediaHandler,mediaStream,MediaType.VIDEO);
        constructAudioVideoInfo(mediaStream,stringBuffer);
      }
    }
  }
}
