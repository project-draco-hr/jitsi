{
  if (evt.getCause() == LdapEvent.LdapEventCause.SEARCH_ACHIEVED || evt.getCause() == LdapEvent.LdapEventCause.SEARCH_CANCELLED) {
synchronized (objLock) {
      objLock.notify();
    }
  }
  if (evt.getCause() == LdapEvent.LdapEventCause.NEW_SEARCH_RESULT) {
    LdapPersonFound person=(LdapPersonFound)evt.getContent();
    String displayName=null;
    if (person == null) {
      return;
    }
    if (person.getDisplayName() != null) {
      displayName=person.getDisplayName();
    }
 else {
      displayName=person.getFirstName() + " " + person.getSurname();
    }
    List<ContactDetail> contactDetails=getContactDetails(person);
    if (!contactDetails.isEmpty()) {
      GenericSourceContact sourceContact=new GenericSourceContact(getContactSource(),displayName,contactDetails);
      try {
        sourceContact.setImage(person.fetchPhoto());
      }
 catch (      OutOfMemoryError oome) {
      }
      addQueryResult(sourceContact);
    }
  }
 else   if (evt.getCause() == LdapEvent.LdapEventCause.SEARCH_AUTH_ERROR) {
synchronized (objLock) {
      objLock.notify();
    }
    new Thread(){
      public void run(){
        DirectorySettingsForm settingsForm=new DirectorySettingsForm();
        LdapDirectorySettings ldapSettings=getContactSource().getLdapDirectory().getSettings();
        settingsForm.setModal(true);
        settingsForm.loadData(ldapSettings);
        settingsForm.setNameFieldEnabled(false);
        settingsForm.setHostnameFieldEnabled(false);
        settingsForm.setBaseDNFieldEnabled(false);
        settingsForm.setPortFieldEnabled(false);
        JOptionPane.showMessageDialog(null,Resources.getString("impl.ldap.WRONG_CREDENTIALS",new String[]{ldapSettings.getName()}),Resources.getString("impl.ldap.WRONG_CREDENTIALS",new String[]{ldapSettings.getName()}),JOptionPane.WARNING_MESSAGE);
        int ret=settingsForm.showDialog();
        if (ret == 1) {
          LdapService ldapService=LdapActivator.getLdapService();
          LdapFactory factory=ldapService.getFactory();
          LdapDirectory ldapDir=getContactSource().getLdapDirectory();
          LdapDirectorySettings settings=ldapDir.getSettings();
          LdapActivator.disableContactSource(ldapDir);
          ldapService.getServerSet().removeServerWithName(settings.getName());
          ldapDir=factory.createServer(settingsForm.getSettings());
          ldapService.getServerSet().addServer(ldapDir);
          LdapActivator.enableContactSource(ldapDir);
        }
      }
    }
.start();
  }
}
