{
  final GraphicsConfiguration graphicsConf=GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration();
  final JWindow notificationWindow=new JWindow(graphicsConf);
  final Timer popupTimer=new Timer(10000,new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (notificationWindow.isVisible())       new Thread(new PopupDiscarder(notificationWindow)).start();
    }
  }
);
  popupTimer.setRepeats(false);
  MouseAdapter adapter=new MouseAdapter(){
    @Override public void mouseEntered(    MouseEvent e){
      popupTimer.stop();
    }
    @Override public void mouseExited(    MouseEvent e){
      popupTimer.start();
    }
    @Override public void mouseClicked(    MouseEvent e){
      Container container=notificationWindow.getContentPane();
      PopupNotificationPanel notif=(PopupNotificationPanel)container.getComponent(0);
      firePopupMessageClicked(new SystrayPopupMessageEvent(e,notif.getTag()));
      notificationWindow.dispose();
    }
  }
;
  notificationWindow.addMouseListener(adapter);
  JComponent content=popupMessage.getComponent();
  if (content == null) {
    content=createPopup(popupMessage.getMessageTitle(),popupMessage.getMessage(),popupMessage.getIcon(),popupMessage.getTag());
  }
  registerMouseListener(content,adapter);
  notificationWindow.add(content);
  notificationWindow.setAlwaysOnTop(true);
  notificationWindow.pack();
  new Thread(new PopupLauncher(notificationWindow,graphicsConf)).start();
  popupTimer.start();
}
