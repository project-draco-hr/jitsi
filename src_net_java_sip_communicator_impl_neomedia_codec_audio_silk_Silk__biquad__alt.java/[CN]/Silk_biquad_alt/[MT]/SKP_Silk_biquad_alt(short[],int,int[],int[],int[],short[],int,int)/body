{
  int k;
  int inval, A0_U_Q28, A0_L_Q28, A1_U_Q28, A1_L_Q28, out32_Q14;
  A0_L_Q28=(-A_Q28[0]) & 0x00003FFF;
  A0_U_Q28=(-A_Q28[0]) >> 14;
  A1_L_Q28=(-A_Q28[1]) & 0x00003FFF;
  A1_U_Q28=(-A_Q28[1]) >> 14;
  for (k=0; k < len; k++) {
    inval=in[in_offset + k];
    out32_Q14=Silk_macros.SKP_SMLAWB(S[0],B_Q28[0],inval) << 2;
    S[0]=S[1] + (Silk_macros.SKP_SMULWB(out32_Q14,A0_L_Q28) >> 14);
    S[0]=Silk_macros.SKP_SMLAWB(S[0],out32_Q14,A0_U_Q28);
    S[0]=Silk_macros.SKP_SMLAWB(S[0],B_Q28[1],inval);
    S[1]=Silk_macros.SKP_SMULWB(out32_Q14,A1_L_Q28) >> 14;
    S[1]=Silk_macros.SKP_SMLAWB(S[1],out32_Q14,A1_U_Q28);
    S[1]=Silk_macros.SKP_SMLAWB(S[1],B_Q28[2],inval);
    out[out_offset + k]=(short)Silk_SigProc_FIX.SKP_SAT16((out32_Q14 >> 14) + 2);
  }
}
