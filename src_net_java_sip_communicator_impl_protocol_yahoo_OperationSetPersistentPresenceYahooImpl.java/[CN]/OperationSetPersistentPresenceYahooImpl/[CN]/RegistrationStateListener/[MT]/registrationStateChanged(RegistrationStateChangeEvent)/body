{
  logger.debug("The yahoo provider changed state from: " + evt.getOldState() + " to: "+ evt.getNewState());
  if (evt.getNewState() == RegistrationState.REGISTERING) {
    earlyEventListener=new EarlyEventListener(parentProvider.getYahooSession());
  }
 else   if (evt.getNewState() == RegistrationState.REGISTERED) {
    parentProvider.getYahooSession().addSessionListener(new StatusChangedListener());
    ssContactList.setYahooSession(parentProvider.getYahooSession());
    initContactStatuses();
    addSubscriptionListener(statusUpdater);
    if (earlyEventListener != null) {
      earlyEventListener.dispose();
      earlyEventListener=null;
    }
  }
 else   if (evt.getNewState() == RegistrationState.UNREGISTERED || evt.getNewState() == RegistrationState.AUTHENTICATION_FAILED || evt.getNewState() == RegistrationState.CONNECTION_FAILED) {
    PresenceStatus oldStatus=currentStatus;
    currentStatus=YahooStatusEnum.OFFLINE;
    fireProviderStatusChangeEvent(oldStatus,currentStatus);
    removeSubscriptionListener(statusUpdater);
    Iterator groupsIter=getServerStoredContactListRoot().subgroups();
    while (groupsIter.hasNext()) {
      ContactGroupYahooImpl group=(ContactGroupYahooImpl)groupsIter.next();
      Iterator contactsIter=group.contacts();
      while (contactsIter.hasNext()) {
        ContactYahooImpl contact=(ContactYahooImpl)contactsIter.next();
        PresenceStatus oldContactStatus=contact.getPresenceStatus();
        if (!oldContactStatus.isOnline())         continue;
        contact.updatePresenceStatus(YahooStatusEnum.OFFLINE);
        fireContactPresenceStatusChangeEvent(contact,contact.getParentContactGroup(),oldContactStatus,YahooStatusEnum.OFFLINE);
      }
    }
    if (earlyEventListener != null) {
      earlyEventListener.dispose();
      earlyEventListener=null;
    }
  }
}
