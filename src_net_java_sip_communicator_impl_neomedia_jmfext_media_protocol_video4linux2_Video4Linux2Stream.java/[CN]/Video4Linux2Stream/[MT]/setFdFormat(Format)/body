{
  int pixelformat=0;
  if (format instanceof AVFrameFormat) {
    pixelformat=((AVFrameFormat)format).getDevicePixFmt();
    nativePixelFormat=pixelformat;
  }
  if (Video4Linux2.V4L2_PIX_FMT_NONE == pixelformat)   throw new IOException("Unsupported format " + format);
  long v4l2_format=Video4Linux2.v4l2_format_alloc(Video4Linux2.V4L2_BUF_TYPE_VIDEO_CAPTURE);
  if (v4l2_format == 0)   throw new OutOfMemoryError("v4l2_format_alloc");
  try {
    if (Video4Linux2.ioctl(fd,Video4Linux2.VIDIOC_G_FMT,v4l2_format) == -1)     throw new IOException("ioctl: request= VIDIO_G_FMT");
    VideoFormat videoFormat=(VideoFormat)format;
    Dimension size=videoFormat.getSize();
    long fmtPix=Video4Linux2.v4l2_format_getFmtPix(v4l2_format);
    int width=Video4Linux2.v4l2_pix_format_getWidth(fmtPix);
    int height=Video4Linux2.v4l2_pix_format_getHeight(fmtPix);
    boolean setFdFormat=false;
    if (size == null) {
      Dimension defaultSize=NeomediaActivator.getMediaServiceImpl().getDeviceConfiguration().getVideoSize();
      if ((width < defaultSize.width) || (height < defaultSize.height))       size=defaultSize;
    }
    if ((size != null) && ((size.width != width) || (size.height != height))) {
      Video4Linux2.v4l2_pix_format_setWidthAndHeight(fmtPix,size.width,size.height);
      setFdFormat=true;
    }
    if (Video4Linux2.v4l2_pix_format_getPixelformat(v4l2_format) != pixelformat) {
      Video4Linux2.v4l2_pix_format_setPixelformat(fmtPix,pixelformat);
      setFdFormat=true;
    }
    if (setFdFormat)     setFdFormat(v4l2_format,fmtPix,size,pixelformat);
  }
  finally {
    Video4Linux2.free(v4l2_format);
  }
}
