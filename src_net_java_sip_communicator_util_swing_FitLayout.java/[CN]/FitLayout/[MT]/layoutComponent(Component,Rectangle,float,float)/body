{
  Dimension componentSize=component.getPreferredSize();
  boolean scale=false;
  double widthRatio;
  double heightRatio;
  if ((componentSize.width != bounds.width) && (componentSize.width > 0)) {
    scale=true;
    widthRatio=bounds.width / (double)componentSize.width;
  }
 else   widthRatio=1;
  if ((componentSize.height != bounds.height) && (componentSize.height > 0)) {
    scale=true;
    heightRatio=bounds.height / (double)componentSize.height;
  }
 else   heightRatio=1;
  if (scale) {
    double ratio=Math.min(widthRatio,heightRatio);
    componentSize.width=(int)(componentSize.width * ratio);
    componentSize.height=(int)(componentSize.height * ratio);
    if (component.isMaximumSizeSet()) {
      Dimension maximumSize=component.getMaximumSize();
      if (componentSize.width > maximumSize.width)       componentSize.width=maximumSize.width;
      if (componentSize.height > maximumSize.height)       componentSize.height=maximumSize.height;
    }
  }
  if (componentSize.height < 1)   componentSize.height=1;
  if (componentSize.width < 1)   componentSize.width=1;
  component.setBounds(bounds.x + Math.round((bounds.width - componentSize.width) * alignmentX),bounds.y + Math.round((bounds.height - componentSize.height) * alignmentY),componentSize.width,componentSize.height);
}
