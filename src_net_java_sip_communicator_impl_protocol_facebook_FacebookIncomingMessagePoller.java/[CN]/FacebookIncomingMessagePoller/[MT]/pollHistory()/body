{
  for (  FacebookUser user : this.session.getBuddyList().getBuddies()) {
    HttpGet get=new HttpGet(HISTORY_URL + user.uid);
    HttpResponse response=this.session.getHttpClient().execute(get);
    String body=EntityUtils.toString(response.getEntity());
    if (response.getStatusLine().getStatusCode() != 200) {
      throw new BrokenFacebookProtocolException("http code " + response.getStatusLine().getStatusCode() + ". "+ body);
    }
    try {
      FacebookJsonResponse jsonResponse=new FacebookJsonResponse(this.session,body);
      JSONArray history=jsonResponse.getJson().getJSONObject("payload").getJSONArray("history");
      for (int i=0; i < history.length(); i++) {
        JSONObject msg=history.getJSONObject(i);
        if (msg.getString("type").equals("msg")) {
          FacebookMessage fm=null;
          String fromUid=msg.getString("from");
          if (fromUid.equals(user.uid)) {
            fm=new FacebookMessage(user,msg);
            if (fm.getTime() > this.lastReceiveTime) {
              this.lastReceiveTime=fm.getTime();
              this.notifyListeners(fm);
            }
          }
        }
      }
    }
 catch (    JSONException e) {
      throw new BrokenFacebookProtocolException("response " + body,e);
    }
  }
}
