{
  if (videoDS == null)   return null;
  FormatControl formatControl=(FormatControl)videoDS.getControl(FormatControl.class.getName());
  if (formatControl == null)   return null;
  Format[] formats=formatControl.getSupportedFormats();
  final int count=formats.length;
  if (count < 1)   return null;
  VideoFormat selectedFormat=null;
  if (count == 1)   selectedFormat=(VideoFormat)formats[0];
 else {
class FormatInfo {
      public final VideoFormat format;
      public final double difference;
      public FormatInfo(      VideoFormat format){
        this.format=format;
        Dimension size=format.getSize();
        int width=(size == null) ? 0 : size.width;
        double xScale;
        if (width == 0)         xScale=Double.POSITIVE_INFINITY;
 else         if (width == preferredWidth)         xScale=1;
 else         xScale=(preferredWidth / (double)width);
        int height=(size == null) ? 0 : size.height;
        double yScale;
        if (height == 0)         yScale=Double.POSITIVE_INFINITY;
 else         if (height == preferredHeight)         yScale=1;
 else         yScale=(preferredHeight / (double)height);
        difference=Math.abs(1 - Math.min(xScale,yScale));
      }
    }
    FormatInfo[] infos=new FormatInfo[count];
    for (int i=0; i < count; i++) {
      FormatInfo info=infos[i]=new FormatInfo((VideoFormat)formats[i]);
      if (info.difference == 0) {
        selectedFormat=info.format;
        break;
      }
    }
    if (selectedFormat == null) {
      Arrays.sort(infos,new Comparator<FormatInfo>(){
        public int compare(        FormatInfo info0,        FormatInfo info1){
          return Double.compare(info0.difference,info1.difference);
        }
      }
);
      selectedFormat=infos[0].format;
    }
  }
  formatControl.setFormat(selectedFormat);
  return selectedFormat.getSize();
}
