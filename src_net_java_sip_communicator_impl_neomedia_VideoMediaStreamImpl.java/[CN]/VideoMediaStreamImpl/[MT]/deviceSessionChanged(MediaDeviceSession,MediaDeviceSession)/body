{
  super.deviceSessionChanged(oldValue,newValue);
  if (oldValue instanceof VideoMediaDeviceSession) {
    VideoMediaDeviceSession oldVideoMediaDeviceSession=(VideoMediaDeviceSession)oldValue;
    if (deviceSessionVideoListener != null)     oldVideoMediaDeviceSession.removeVideoListener(deviceSessionVideoListener);
    oldVideoMediaDeviceSession.setKeyFrameControl(null);
  }
  if (newValue instanceof VideoMediaDeviceSession) {
    VideoMediaDeviceSession newVideoMediaDeviceSession=(VideoMediaDeviceSession)newValue;
    if (deviceSessionVideoListener == null) {
      deviceSessionVideoListener=new VideoListener(){
        /** 
 * Notifies that a visual <tt>Component</tt> representing
 * video has been added to the provider this listener has
 * been added to.
 * @param e a <tt>VideoEvent</tt> describing the added
 * visual <tt>Component</tt> representing video and the
 * provider it was added into
 * @see VideoListener#videoAdded(VideoEvent)
 */
        public void videoAdded(        VideoEvent e){
          if (fireVideoEvent(e.getType(),e.getVisualComponent(),e.getOrigin()))           e.consume();
        }
        /** 
 * Notifies that a visual <tt>Component</tt> representing
 * video has been removed from the provider this listener
 * has been added to.
 * @param e a <tt>VideoEvent</tt> describing the removed
 * visual <tt>Component</tt> representing video and the
 * provider it was removed from
 * @see VideoListener#videoRemoved(VideoEvent)
 */
        public void videoRemoved(        VideoEvent e){
          videoAdded(e);
        }
        public void videoUpdate(        VideoEvent e){
          fireVideoEvent(e);
        }
      }
;
    }
    newVideoMediaDeviceSession.addVideoListener(deviceSessionVideoListener);
    newVideoMediaDeviceSession.setOutputSize(outputSize);
    RTPTransformConnector rtpConnector=getRTPConnector();
    if (rtpConnector != null)     newVideoMediaDeviceSession.setConnector(rtpConnector);
    newVideoMediaDeviceSession.setRtcpFeedbackPLI(usePLI);
    newVideoMediaDeviceSession.setKeyFrameControl(keyFrameControl);
  }
}
