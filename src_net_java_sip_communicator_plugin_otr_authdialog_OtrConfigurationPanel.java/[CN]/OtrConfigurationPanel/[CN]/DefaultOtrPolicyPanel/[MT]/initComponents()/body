{
  this.setLayout(new BoxLayout(this,BoxLayout.Y_AXIS));
  cbEnable=new SIPCommCheckBox(OtrActivator.resourceService.getI18NString("plugin.otr.configform.CB_ENABLE"));
  cbEnable.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      OtrPolicy otrPolicy=OtrActivator.scOtrEngine.getGlobalPolicy();
      otrPolicy.setEnableManual(((JCheckBox)e.getSource()).isSelected());
      OtrActivator.scOtrEngine.setGlobalPolicy(otrPolicy);
      DefaultOtrPolicyPanel.this.loadPolicy();
    }
  }
);
  this.add(cbEnable);
  cbAutoInitiate=new SIPCommCheckBox(OtrActivator.resourceService.getI18NString("plugin.otr.configform.CB_AUTO"));
  cbAutoInitiate.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      OtrPolicy otrPolicy=OtrActivator.scOtrEngine.getGlobalPolicy();
      boolean isAutoInit=((JCheckBox)e.getSource()).isSelected();
      otrPolicy.setSendWhitespaceTag(isAutoInit);
      OtrActivator.scOtrEngine.setGlobalPolicy(otrPolicy);
      DefaultOtrPolicyPanel.this.loadPolicy();
    }
  }
);
  this.add(cbAutoInitiate);
  cbRequireOtr=new SIPCommCheckBox(OtrActivator.resourceService.getI18NString("plugin.otr.configform.CB_REQUIRE"));
  cbRequireOtr.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      OtrPolicy otrPolicy=OtrActivator.scOtrEngine.getGlobalPolicy();
      boolean isRequired=((JCheckBox)e.getSource()).isSelected();
      otrPolicy.setRequireEncryption(isRequired);
      OtrActivator.configService.setProperty(OtrActivator.OTR_MANDATORY_PROP,Boolean.toString(isRequired));
      OtrActivator.scOtrEngine.setGlobalPolicy(otrPolicy);
      DefaultOtrPolicyPanel.this.loadPolicy();
    }
  }
);
  this.add(cbRequireOtr);
}
