{
  OneType one=new OneType();
  if (!NAMESPACE.equals(getNamespaceUri(element)) || !ONE_ELEMENT.equals(element.getLocalName())) {
    throw new Exception("one element is invalid");
  }
  String id=null;
  NamedNodeMap attributes=element.getAttributes();
  for (int i=0; i < attributes.getLength(); i++) {
    Attr attribute=(Attr)attributes.item(i);
    String namespaceUri=getNamespaceUri(attribute);
    if (namespaceUri == null) {
      throw new Exception("one element is invalid");
    }
    if (isStandartXmlNamespace(namespaceUri)) {
      continue;
    }
    if (!NAMESPACE.equals(namespaceUri) || !ONE_ID_ATTR.equals(attribute.getLocalName()) || id != null) {
      throw new Exception("one element is invalid");
    }
    id=attribute.getValue();
  }
  Element any=null;
  NodeList childNodes=element.getChildNodes();
  for (int i=0; i < childNodes.getLength(); i++) {
    Node node=childNodes.item(i);
    if (node.getNodeType() != Node.ELEMENT_NODE) {
      continue;
    }
    Element childElement=(Element)node;
    String namespaceUri=getNamespaceUri(childElement);
    if (NAMESPACE.equals(namespaceUri) || any != null) {
      throw new Exception("one element is invalid");
    }
    any=childElement;
  }
  if (id == null) {
    throw new Exception("one id attribute is missed");
  }
  one.setId(id);
  one.setAny(any);
  return one;
}
