{
  ResourceManagementService resources=NeomediaActivator.getResources();
  ImageIcon icon=(resources == null) ? null : resources.getImage(DESKTOP_STREAMING_ICON);
  Canvas canvas;
  if (icon == null)   canvas=null;
 else {
    final Image img=icon.getImage();
    canvas=new Canvas(){
      public static final long serialVersionUID=0L;
      @Override public void paint(      Graphics g){
        int width=getWidth();
        int height=getHeight();
        g.setColor(Color.BLACK);
        g.fillRect(0,0,width,height);
        int imgWidth=img.getWidth(this);
        int imgHeight=img.getHeight(this);
        if ((imgWidth < 1) || (imgHeight < 1))         return;
        boolean scale=false;
        float scaleFactor=1;
        if (imgWidth > width) {
          scale=true;
          scaleFactor=width / (float)imgWidth;
        }
        if (imgHeight > height) {
          scale=true;
          scaleFactor=Math.min(scaleFactor,height / (float)imgHeight);
        }
        int dstWidth;
        int dstHeight;
        if (scale) {
          dstWidth=Math.round(imgWidth * scaleFactor);
          dstHeight=Math.round(imgHeight * scaleFactor);
        }
 else {
          dstWidth=imgWidth;
          dstHeight=imgHeight;
        }
        int dstX=(width - dstWidth) / 2;
        int dstY=(height - dstWidth) / 2;
        g.drawImage(img,dstX,dstY,dstX + dstWidth,dstY + dstHeight,0,0,imgWidth,imgHeight,this);
      }
    }
;
    Dimension iconSize=new Dimension(icon.getIconWidth(),icon.getIconHeight());
    canvas.setMaximumSize(iconSize);
    canvas.setPreferredSize(iconSize);
    canvas.setName(DESKTOP_STREAMING_ICON);
    fireVideoEvent(VideoEvent.VIDEO_ADDED,canvas,VideoEvent.LOCAL,false);
  }
  return canvas;
}
