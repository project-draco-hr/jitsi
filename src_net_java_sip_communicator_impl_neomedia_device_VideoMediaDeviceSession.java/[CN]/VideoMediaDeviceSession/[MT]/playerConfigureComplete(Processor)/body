{
  super.playerConfigureComplete(player);
  TrackControl[] trackControls=player.getTrackControls();
  SwScaler playerScaler=null;
  if ((trackControls != null) && (trackControls.length != 0)) {
    try {
      for (      TrackControl trackControl : trackControls) {
        playerScaler=new PlayerScaler(player);
        if ("h264/rtp".equalsIgnoreCase(getFormat().getJMFEncoding())) {
          final DePacketizer depacketizer=new DePacketizer();
          JNIDecoder decoder=new JNIDecoder();
          if (keyFrameControl != null) {
            depacketizer.setKeyFrameControl(keyFrameControl);
            decoder.setKeyFrameControl(new KeyFrameControlAdapter(){
              @Override public boolean requestKeyFrame(              boolean urgent){
                return depacketizer.requestKeyFrame(urgent);
              }
            }
);
          }
          trackControl.setCodecChain(new Codec[]{depacketizer,decoder,playerScaler});
        }
 else {
          trackControl.setCodecChain(new Codec[]{playerScaler});
        }
        break;
      }
    }
 catch (    UnsupportedPlugInException upiex) {
      logger.error("Failed to add SwScaler or H.264 DePacketizer to codec" + " chain",upiex);
      playerScaler=null;
    }
  }
  this.playerScaler=playerScaler;
}
