{
  int i, k, typeOffset;
  final SKP_Silk_NLSF_CB_struct psNLSF_CB;
  if (psEncC.nFramesInPayloadBuf == 0) {
    for (i=0; i < 3; i++) {
      if (Silk_tables_other.SKP_Silk_SamplingRates_table[i] == psEncC.fs_kHz) {
        break;
      }
    }
    Silk_range_coder.SKP_Silk_range_encoder(psRC,i,Silk_tables_other.SKP_Silk_SamplingRates_CDF,0);
  }
  typeOffset=2 * psEncCtrlC.sigtype + psEncCtrlC.QuantOffsetType;
  if (psEncC.nFramesInPayloadBuf == 0) {
    Silk_range_coder.SKP_Silk_range_encoder(psRC,typeOffset,Silk_tables_type_offset.SKP_Silk_type_offset_CDF,0);
  }
 else {
    Silk_range_coder.SKP_Silk_range_encoder(psRC,typeOffset,Silk_tables_type_offset.SKP_Silk_type_offset_joint_CDF[psEncC.typeOffsetPrev],0);
  }
  psEncC.typeOffsetPrev=typeOffset;
  if (psEncC.nFramesInPayloadBuf == 0) {
    Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.GainsIndices[0],Silk_tables_gain.SKP_Silk_gain_CDF[psEncCtrlC.sigtype],0);
  }
 else {
    Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.GainsIndices[0],Silk_tables_gain.SKP_Silk_delta_gain_CDF,0);
  }
  for (i=1; i < Silk_define.NB_SUBFR; i++) {
    Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.GainsIndices[i],Silk_tables_gain.SKP_Silk_delta_gain_CDF,0);
  }
  psNLSF_CB=psEncC.psNLSF_CB[psEncCtrlC.sigtype];
  Silk_range_coder.SKP_Silk_range_encoder_multi(psRC,psEncCtrlC.NLSFIndices,psNLSF_CB.StartPtr,psNLSF_CB.nStages);
  assert(psEncC.useInterpolatedNLSFs == 1 || psEncCtrlC.NLSFInterpCoef_Q2 == (1 << 2));
  Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.NLSFInterpCoef_Q2,Silk_tables_other.SKP_Silk_NLSF_interpolation_factor_CDF,0);
  if (psEncCtrlC.sigtype == Silk_define.SIG_TYPE_VOICED) {
    if (psEncC.fs_kHz == 8) {
      Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.lagIndex,Silk_tables_pitch_lag.SKP_Silk_pitch_lag_NB_CDF,0);
    }
 else     if (psEncC.fs_kHz == 12) {
      Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.lagIndex,Silk_tables_pitch_lag.SKP_Silk_pitch_lag_MB_CDF,0);
    }
 else     if (psEncC.fs_kHz == 16) {
      Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.lagIndex,Silk_tables_pitch_lag.SKP_Silk_pitch_lag_WB_CDF,0);
    }
 else {
      Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.lagIndex,Silk_tables_pitch_lag.SKP_Silk_pitch_lag_SWB_CDF,0);
    }
    if (psEncC.fs_kHz == 8) {
      Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.contourIndex,Silk_tables_pitch_lag.SKP_Silk_pitch_contour_NB_CDF,0);
    }
 else {
      Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.contourIndex,Silk_tables_pitch_lag.SKP_Silk_pitch_contour_CDF,0);
    }
    Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.PERIndex,Silk_tables_LTP.SKP_Silk_LTP_per_index_CDF,0);
    for (k=0; k < Silk_define.NB_SUBFR; k++) {
      Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.LTPIndex[k],Silk_tables_LTP.SKP_Silk_LTP_gain_CDF_ptrs[psEncCtrlC.PERIndex],0);
    }
    Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.LTP_scaleIndex,Silk_tables_other.SKP_Silk_LTPscale_CDF,0);
  }
  Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncCtrlC.Seed,Silk_tables_other.SKP_Silk_Seed_CDF,0);
  Silk_encode_pulses.SKP_Silk_encode_pulses(psRC,psEncCtrlC.sigtype,psEncCtrlC.QuantOffsetType,q,psEncC.frame_length);
  Silk_range_coder.SKP_Silk_range_encoder(psRC,psEncC.vadFlag,Silk_tables_other.SKP_Silk_vadflag_CDF,0);
}
