{
  int errorStatus=-1;
  try {
    log.logEntry();
    String oscarSystemPropertiesFile=System.getProperty("oscar.system.properties");
    if (oscarSystemPropertiesFile == null) {
      oscarSystemPropertiesFile=Main.CLIENT_RUN_PROPERTIES_FILE;
    }
    Properties props=Main.loadProperties(oscarSystemPropertiesFile);
    String profileName=System.getProperty(DefaultBundleCache.CACHE_PROFILE_PROP);
    String profileDirName=System.getProperty(DefaultBundleCache.CACHE_PROFILE_DIR_PROP);
    if ((profileName == null) && (profileDirName == null)) {
      boolean cacheProfileSet=props.containsKey(DefaultBundleCache.CACHE_PROFILE_PROP);
      boolean cacheProfileDirSet=props.containsKey(DefaultBundleCache.CACHE_PROFILE_DIR_PROP);
      if (!cacheProfileSet && !cacheProfileDirSet) {
        props.put(DefaultBundleCache.CACHE_PROFILE_PROP,".sip-communicator");
      }
    }
    MutablePropertyResolver propertyResolver=new MutablePropertyResolverImpl(props);
    Main.oscar=new Noscar();
    Main.oscar.start(propertyResolver,null);
    errorStatus=0;
  }
 catch (  Exception e) {
    log.error("Error occured while starting Oscar OSGI",e);
    errorStatus=-1;
  }
 finally {
    log.logExit();
  }
  System.exit(errorStatus);
}
