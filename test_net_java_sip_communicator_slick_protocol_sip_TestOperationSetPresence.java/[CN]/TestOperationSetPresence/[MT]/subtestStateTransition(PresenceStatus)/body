{
  logger.trace(" --=== beginning state transition test ===--");
  PresenceStatus oldStatus=this.operationSetPresence1.getPresenceStatus();
  String oldStatusMessage=this.operationSetPresence1.getCurrentStatusMessage();
  String newStatusMessage=this.statusMessageRoot + newStatus;
  logger.debug("old status is=" + oldStatus.getStatusName() + " new status="+ newStatus.getStatusName());
  PresenceStatusEventCollector statusEventCollector=new PresenceStatusEventCollector();
  this.operationSetPresence1.addProviderPresenceStatusListener(statusEventCollector);
  this.operationSetPresence1.publishPresenceStatus(newStatus,newStatusMessage);
  pauseAfterStateChanges();
  statusEventCollector.waitForPresEvent(10000);
  statusEventCollector.waitForStatMsgEvent(10000);
  this.operationSetPresence1.removeProviderPresenceStatusListener(statusEventCollector);
  assertEquals("Events dispatched during an event transition.",1,statusEventCollector.collectedPresEvents.size());
  assertEquals("A status changed event contained wrong old status.",oldStatus,((ProviderPresenceStatusChangeEvent)statusEventCollector.collectedPresEvents.get(0)).getOldStatus());
  assertEquals("A status changed event contained wrong new status.",newStatus,((ProviderPresenceStatusChangeEvent)statusEventCollector.collectedPresEvents.get(0)).getNewStatus());
  assertEquals("opSet.getPresenceStatus() did not return properly.",newStatus,this.operationSetPresence1.getPresenceStatus());
  PresenceStatus actualStatus=this.operationSetPresence2.queryContactStatus(this.fixture.userID1);
  if (newStatus.getStatus() != 0) {
    assertEquals("The underlying implementation did not switch to the " + "requested presence status.",newStatus,actualStatus);
  }
 else {
    if (newStatus.getStatus() != 0 && newStatus.getStatus() != 1) {
      fail("The underlying implementation did not switch to the " + "requested presence status.");
    }
  }
  assertEquals("No status message event.",1,statusEventCollector.collectedStatMsgEvents.size());
  assertEquals("A status message event contained wrong old value.",oldStatusMessage,((PropertyChangeEvent)statusEventCollector.collectedStatMsgEvents.get(0)).getOldValue());
  assertEquals("A status message event contained wrong new value.",newStatusMessage,((PropertyChangeEvent)statusEventCollector.collectedStatMsgEvents.get(0)).getNewValue());
  assertEquals("opSet.getCurrentStatusMessage() did not return properly.",newStatusMessage,this.operationSetPresence1.getCurrentStatusMessage());
  logger.trace(" --=== finished test ===--");
}
