{
  Hashtable<String,String> accountProperties=new Hashtable<String,String>();
  if (registration.isRememberPassword()) {
    accountProperties.put(ProtocolProviderFactory.PASSWORD,passwd);
  }
  if (registration.getProxy() != null && registration.getProxy().length() != 0)   accountProperties.put(ProtocolProviderFactory.PROXY_ADDRESS,registration.getProxy());
  if (registration.getProxyPort() != null && registration.getProxyPort().length() != 0)   accountProperties.put(ProtocolProviderFactory.PROXY_PORT,registration.getProxyPort());
  if (registration.getProxyType() != null && registration.getProxyType().length() != 0)   accountProperties.put(ProtocolProviderFactory.PROXY_TYPE,registration.getProxyType());
  if (registration.getProxyUsername() != null && registration.getProxyUsername().length() != 0)   accountProperties.put(ProtocolProviderFactory.PROXY_USERNAME,registration.getProxyUsername());
  if (registration.getProxyPassword() != null && registration.getProxyPassword().length() != 0)   accountProperties.put(ProtocolProviderFactory.PROXY_PASSWORD,registration.getProxyPassword());
  if (isModification) {
    providerFactory.modifyAccount(protocolProvider,accountProperties);
    this.isModification=false;
    return protocolProvider;
  }
  try {
    AccountID accountID=providerFactory.installAccount(user,accountProperties);
    ServiceReference serRef=providerFactory.getProviderForAccount(accountID);
    protocolProvider=(ProtocolProviderService)AimAccRegWizzActivator.bundleContext.getService(serRef);
  }
 catch (  IllegalStateException exc) {
    logger.warn(exc.getMessage());
    throw new OperationFailedException("Account already exists.",OperationFailedException.IDENTIFICATION_CONFLICT);
  }
catch (  Exception exc) {
    logger.warn(exc.getMessage());
    throw new OperationFailedException("Failed to add account",OperationFailedException.GENERAL_ERROR);
  }
  return protocolProvider;
}
