{
  int newBuffLen=buffer.length + newExtensionLen;
  int bufferOffset=offset;
  int newBufferOffset=offset;
  int lengthToCopy=FIXED_HEADER_SIZE + getCsrcCount() * 4;
  boolean extensionBit=getExtensionBit();
  if (extensionBit) {
    lengthToCopy+=EXT_HEADER_SIZE - 2;
  }
 else   newBuffLen+=EXT_HEADER_SIZE;
  byte[] newBuffer=new byte[newBuffLen];
  System.arraycopy(buffer,bufferOffset,newBuffer,newBufferOffset,lengthToCopy);
  newBuffer[newBufferOffset]|=0x10;
  bufferOffset+=lengthToCopy;
  newBufferOffset+=lengthToCopy;
  int totalExtensionLen=newExtensionLen + getExtensionLength();
  if (extensionBit)   bufferOffset+=4;
 else {
    newBuffer[newBufferOffset++]=(byte)0xBE;
    newBuffer[newBufferOffset++]=(byte)0xDE;
  }
  newBuffer[newBufferOffset++]=(byte)(totalExtensionLen >> 4);
  newBuffer[newBufferOffset++]=(byte)totalExtensionLen;
  if (extensionBit) {
    lengthToCopy=getExtensionLength();
    System.arraycopy(buffer,bufferOffset,newBuffer,newBufferOffset,lengthToCopy);
    bufferOffset+=lengthToCopy;
    newBufferOffset+=lengthToCopy;
  }
  System.arraycopy(extBuff,0,newBuffer,newBufferOffset,newExtensionLen);
  newBufferOffset+=newExtensionLen;
  System.arraycopy(buffer,bufferOffset,newBuffer,newBufferOffset,getPayloadLength());
  buffer=newBuffer;
  this.length=newBuffLen - offset;
}
