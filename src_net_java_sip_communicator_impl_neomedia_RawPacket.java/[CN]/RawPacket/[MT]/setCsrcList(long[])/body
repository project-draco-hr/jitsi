{
  int newCsrcCount=newCsrcList.length;
  byte[] csrcBuff=new byte[newCsrcCount * 4];
  int csrcOffset=0;
  for (  long csrc : newCsrcList) {
    csrcBuff[csrcOffset]=(byte)(csrc >> 24);
    csrcBuff[csrcOffset + 1]=(byte)(csrc >> 16);
    csrcBuff[csrcOffset + 2]=(byte)(csrc >> 8);
    csrcBuff[csrcOffset + 3]=(byte)csrc;
    csrcOffset+=4;
  }
  int oldCsrcCount=getCsrcCount();
  byte[] oldBuffer=this.getBuffer();
  byte newBuffer[];
  if (oldBuffer.length < (this.length + this.offset + csrcBuff.length - oldCsrcCount * 4)) {
    newBuffer=new byte[this.length + this.offset + csrcBuff.length - oldCsrcCount * 4];
  }
 else {
    newBuffer=oldBuffer;
  }
  System.arraycopy(oldBuffer,0,newBuffer,0,offset + FIXED_HEADER_SIZE);
  int payloadOffsetForOldBuff=offset + FIXED_HEADER_SIZE + oldCsrcCount * 4;
  int payloadOffsetForNewBuff=offset + FIXED_HEADER_SIZE + newCsrcCount * 4;
  System.arraycopy(oldBuffer,payloadOffsetForOldBuff,newBuffer,payloadOffsetForNewBuff,this.length - payloadOffsetForOldBuff);
  System.arraycopy(csrcBuff,0,newBuffer,offset + FIXED_HEADER_SIZE,csrcBuff.length);
  newBuffer[offset]=(byte)((newBuffer[offset] & 0xF0) | newCsrcCount);
  this.buffer=newBuffer;
  this.length=this.length + payloadOffsetForNewBuff - payloadOffsetForOldBuff;
}
