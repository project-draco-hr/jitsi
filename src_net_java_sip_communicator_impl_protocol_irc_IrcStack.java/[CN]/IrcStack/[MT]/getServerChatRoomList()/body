{
  LOGGER.trace("Start retrieve server chat room list.");
  final IRCApi irc=this.session.get();
  if (irc == null) {
    throw new IllegalStateException("irc instance is not available");
  }
synchronized (this.channellist) {
    List<String> list=this.channellist.get(CHAT_ROOM_LIST_CACHE_EXPIRATION);
    if (list == null) {
      LOGGER.trace("Chat room list null or outdated. Start retrieving " + "new chat room list.");
      Result<List<String>,Exception> listSignal=new Result<List<String>,Exception>(new LinkedList<String>());
synchronized (listSignal) {
        try {
          irc.addListener(new ChannelListListener(irc,listSignal));
          irc.rawMessage("LIST");
          while (!listSignal.isDone()) {
            LOGGER.trace("Start waiting for list ...");
            listSignal.wait();
          }
          LOGGER.trace("Done waiting for list.");
        }
 catch (        InterruptedException e) {
          LOGGER.warn("INTERRUPTED while waiting for list.",e);
        }
      }
      list=listSignal.getValue();
      this.channellist.set(list);
      LOGGER.trace("Finished retrieve server chat room list.");
    }
 else {
      LOGGER.trace("Using cached list of server chat rooms.");
    }
    return Collections.unmodifiableList(list);
  }
}
