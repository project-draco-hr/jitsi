{
  this.setVerbose(false);
  this.setAutoNickChange(autoNickChange);
  try {
synchronized (this) {
      onConnectInvoked=false;
      if (serverPassword == null) {
        this.connect(serverAddress,serverPort);
      }
 else       this.connect(serverAddress,serverPort,serverPassword);
    }
  }
 catch (  IOException e) {
    throw new OperationFailedException(e.getMessage(),OperationFailedException.INTERNAL_SERVER_ERROR);
  }
catch (  NickAlreadyInUseException e) {
    throw new OperationFailedException(e.getMessage(),OperationFailedException.SUBSCRIPTION_ALREADY_EXISTS);
  }
catch (  IrcException e) {
    throw new OperationFailedException(e.getMessage(),OperationFailedException.GENERAL_ERROR);
  }
  if (onConnectInvoked) {
    RegistrationState oldState=parentProvider.getCurrentRegistrationState();
    parentProvider.setCurrentRegistrationState(RegistrationState.REGISTERED);
    parentProvider.fireRegistrationStateChanged(oldState,RegistrationState.REGISTERED,RegistrationStateChangeEvent.REASON_USER_REQUEST,null);
  }
}
