{
  final IRCApi irc=this.session.get();
  if (irc == null) {
    throw new IllegalStateException("No IRC instance available, cannot connect.");
  }
  final Result<IIRCState,Exception> result=new Result<IIRCState,Exception>();
synchronized (result) {
    irc.connect(this.params,new Callback<IIRCState>(){
      @Override public void onSuccess(      final IIRCState state){
synchronized (result) {
          LOGGER.trace("IRC connected successfully!");
          result.setDone(state);
          result.notifyAll();
        }
      }
      @Override public void onFailure(      final Exception e){
synchronized (result) {
          LOGGER.trace("IRC connection FAILED!",e);
          result.setDone(e);
          result.notifyAll();
        }
      }
    }
);
    this.provider.setCurrentRegistrationState(RegistrationState.REGISTERING);
    while (!result.isDone()) {
      LOGGER.trace("Waiting for the connection to be " + "established ...");
      result.wait();
    }
    final Exception e=result.getException();
    if (e != null) {
      throw new IOException(e);
    }
    final IIRCState connectionState=result.getValue();
    if (connectionState == null) {
      throw new IOException("Failed to connect: no connection state available.");
    }
    this.connectionState=connectionState;
  }
}
