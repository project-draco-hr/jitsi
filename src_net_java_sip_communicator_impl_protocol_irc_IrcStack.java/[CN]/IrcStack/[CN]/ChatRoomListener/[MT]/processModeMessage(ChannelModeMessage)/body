{
  String sourceNick=((IRCUser)msg.getSource()).getNick();
  ChatRoomMemberIrcImpl sourceMember=(ChatRoomMemberIrcImpl)this.chatroom.getChatRoomMember(sourceNick);
  ModeParser parser=new ModeParser(msg);
  for (  ModeEntry mode : parser.getModes()) {
switch (mode.getMode()) {
case OWNER:
      String ownerUserName=mode.getParams()[0];
    if (isMe(ownerUserName)) {
      System.out.println("Local user owner change! (no business logic yet, just discovery) " + mode.isAdded());
    }
 else {
      ChatRoomMember owner=this.chatroom.getChatRoomMember(mode.getParams()[0]);
      if (mode.isAdded()) {
        this.chatroom.fireMemberRoleEvent(owner,ChatRoomMemberRole.OWNER);
      }
 else {
        this.chatroom.fireMemberRoleEvent(owner,ChatRoomMemberRole.SILENT_MEMBER);
      }
    }
  break;
case OPERATOR:
String opUserName=mode.getParams()[0];
if (isMe(opUserName)) {
System.out.println("Local user op change! " + mode.isAdded());
}
 else {
ChatRoomMember op=this.chatroom.getChatRoomMember(opUserName);
if (mode.isAdded()) {
  this.chatroom.fireMemberRoleEvent(op,ChatRoomMemberRole.ADMINISTRATOR);
}
 else {
  this.chatroom.fireMemberRoleEvent(op,ChatRoomMemberRole.SILENT_MEMBER);
}
}
break;
case VOICE:
String voiceUserName=mode.getParams()[0];
if (isMe(voiceUserName)) {
System.out.println("Local user voice change! " + mode.isAdded());
}
 else {
ChatRoomMember voice=this.chatroom.getChatRoomMember(voiceUserName);
if (mode.isAdded()) {
this.chatroom.fireMemberRoleEvent(voice,ChatRoomMemberRole.MEMBER);
}
 else {
this.chatroom.fireMemberRoleEvent(voice,ChatRoomMemberRole.SILENT_MEMBER);
}
}
break;
case LIMIT:
MessageIrcImpl message;
if (mode.isAdded()) {
try {
message=new MessageIrcImpl("channel limit set to " + Integer.parseInt(mode.getParams()[0]),"text/plain","UTF-8",null);
}
 catch (NumberFormatException e) {
e.printStackTrace();
break;
}
}
 else {
message=new MessageIrcImpl("channel limit removed","text/plain","UTF-8",null);
}
this.chatroom.fireMessageReceivedEvent(message,sourceMember,new Date(),ChatRoomMessageReceivedEvent.SYSTEM_MESSAGE_RECEIVED);
break;
default :
System.out.println("Unsupported mode '" + (mode.isAdded() ? "+" : "-") + mode.getMode()+ "' (from modestring '"+ msg.getModeStr()+ "')");
break;
}
}
}
