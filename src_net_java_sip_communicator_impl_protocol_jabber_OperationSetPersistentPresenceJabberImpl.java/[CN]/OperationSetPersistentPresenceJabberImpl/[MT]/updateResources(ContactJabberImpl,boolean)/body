{
  if (!contact.isResolved() || (contact instanceof VolatileContactJabberImpl && ((VolatileContactJabberImpl)contact).isPrivateMessagingContact()))   return false;
  boolean eventFired=false;
  Map<String,ContactResourceJabberImpl> resources=contact.getResourcesMap();
  if (parentProvider.getConnection() == null || !parentProvider.getConnection().isConnected()) {
    if (removeUnavailable) {
      Iterator<Map.Entry<String,ContactResourceJabberImpl>> iter=resources.entrySet().iterator();
      while (iter.hasNext()) {
        Map.Entry<String,ContactResourceJabberImpl> entry=iter.next();
        iter.remove();
        contact.fireContactResourceEvent(new ContactResourceEvent(contact,entry.getValue(),ContactResourceEvent.RESOURCE_REMOVED));
        eventFired=true;
      }
    }
    return eventFired;
  }
  Iterator<Presence> it=parentProvider.getConnection().getRoster().getPresences(contact.getAddress());
  while (it.hasNext()) {
    Presence presence=it.next();
    eventFired=updateResource(contact,null,presence) || eventFired;
  }
  if (!removeUnavailable)   return eventFired;
  Iterator<String> resourceIter=resources.keySet().iterator();
  while (resourceIter.hasNext()) {
    String fullJid=resourceIter.next();
    if (!parentProvider.getConnection().getRoster().getPresenceResource(fullJid).isAvailable()) {
      eventFired=removeResource(contact,fullJid) || eventFired;
    }
  }
  return eventFired;
}
