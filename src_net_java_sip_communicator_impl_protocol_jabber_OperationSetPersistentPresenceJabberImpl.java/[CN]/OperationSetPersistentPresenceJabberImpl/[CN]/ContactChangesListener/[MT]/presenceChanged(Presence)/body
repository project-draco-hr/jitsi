{
  try {
    String userID=StringUtils.parseBareAddress(presence.getFrom());
    String resource=StringUtils.parseResource(presence.getFrom());
    TreeSet<Presence> userStats=statuses.get(userID);
    if (userStats == null) {
      userStats=new TreeSet<Presence>(new Comparator<Presence>(){
        public int compare(        Presence o1,        Presence o2){
          int res=o1.getPriority() - o2.getPriority();
          if (res == 0) {
            res=jabberStatusToPresenceStatus(o1,parentProvider).getStatus() - jabberStatusToPresenceStatus(o2,parentProvider).getStatus();
          }
          return res;
        }
      }
);
      statuses.put(userID,userStats);
    }
    logger.info("Received a status update for buddy=" + userID);
    Presence toRemove=null;
    Iterator<Presence> iter=userStats.iterator();
    while (iter.hasNext()) {
      Presence p=iter.next();
      if (StringUtils.parseResource(p.getFrom()).equals(resource))       toRemove=p;
    }
    if (toRemove != null)     userStats.remove(toRemove);
    if (!jabberStatusToPresenceStatus(presence,parentProvider).equals(parentProvider.getJabberStatusEnum().getStatus(JabberStatusEnum.OFFLINE))) {
      userStats.add(presence);
    }
    Presence currentPresence;
    if (userStats.size() == 0) {
      currentPresence=presence;
    }
 else {
      currentPresence=userStats.first();
    }
    ContactJabberImpl sourceContact=ssContactList.findContactById(userID);
    if (sourceContact == null) {
      logger.warn("No source contact found for id=" + userID);
      return;
    }
    sourceContact.setStatusMessage(currentPresence.getStatus());
    PresenceStatus oldStatus=sourceContact.getPresenceStatus();
    PresenceStatus newStatus=jabberStatusToPresenceStatus(currentPresence,parentProvider);
    if (oldStatus.equals(newStatus))     return;
    sourceContact.updatePresenceStatus(newStatus);
    ContactGroup parent=ssContactList.findContactGroup(sourceContact);
    logger.debug("Will Dispatch the contact status event.");
    fireContactPresenceStatusChangeEvent(sourceContact,parent,oldStatus,newStatus);
  }
 catch (  IllegalStateException ex) {
    logger.error("Failed changing status",ex);
  }
catch (  IllegalArgumentException ex) {
    logger.error("Failed changing status",ex);
  }
}
