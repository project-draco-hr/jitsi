{
  int k, in16;
  int A0_neg, A1_neg, S0, S1, out32, tmp32;
  S0=S[0];
  S1=S[1];
  A0_neg=-A[0];
  A1_neg=-A[1];
  for (k=0; k < len; k++) {
    in16=in[in_offset + k];
    out32=Silk_macros.SKP_SMLABB(S0,in16,B[0]);
    S0=Silk_macros.SKP_SMLABB(S1,in16,B[1]);
    S0+=(Silk_macros.SKP_SMULWB(out32,A0_neg) << 3);
    S1=(Silk_macros.SKP_SMULWB(out32,A1_neg) << 3);
    S1=Silk_macros.SKP_SMLABB(S1,in16,B[2]);
    tmp32=Silk_SigProc_FIX.SKP_RSHIFT_ROUND(out32,13) + 1;
    out[out_offset + k]=(short)Silk_SigProc_FIX.SKP_SAT16(tmp32);
  }
  S[0]=S0;
  S[1]=S1;
}
