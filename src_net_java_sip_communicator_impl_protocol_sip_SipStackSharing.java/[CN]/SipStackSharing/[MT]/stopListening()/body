{
  try {
    this.secureJainSipProvider.removeSipListener(this);
    this.stack.deleteSipProvider(this.secureJainSipProvider);
    this.secureJainSipProvider=null;
    this.clearJainSipProvider.removeSipListener(this);
    this.stack.deleteSipProvider(this.clearJainSipProvider);
    this.clearJainSipProvider=null;
    Iterator<ListeningPoint> it=this.stack.getListeningPoints();
    Vector<ListeningPoint> lpointsToRemove=new Vector<ListeningPoint>();
    while (it.hasNext()) {
      lpointsToRemove.add(it.next());
    }
    it=lpointsToRemove.iterator();
    while (it.hasNext()) {
      this.stack.deleteListeningPoint(it.next());
    }
    this.stack.stop();
    logger.trace("stopped listening");
  }
 catch (  ObjectInUseException ex) {
    logger.fatal("Failed to stop listening",ex);
  }
}
