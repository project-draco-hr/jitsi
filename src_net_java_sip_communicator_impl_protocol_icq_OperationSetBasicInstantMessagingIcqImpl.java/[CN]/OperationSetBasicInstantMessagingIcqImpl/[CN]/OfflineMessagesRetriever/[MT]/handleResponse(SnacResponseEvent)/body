{
  SnacCommand snac=e.getSnacCommand();
  logger.debug("Received a response to our offline message request: " + snac);
  if (snac instanceof OfflineMsgCmd) {
    OfflineMsgCmd offlineMsgCmd=(OfflineMsgCmd)snac;
    if (!offlineMsgCmd.isEndOfOfflineMessages()) {
      String contactUIN=String.valueOf(offlineMsgCmd.getUin());
      Contact sourceContact=opSetPersPresence.findContactByID(contactUIN);
      if (sourceContact == null) {
        logger.debug("received a message from a unknown contact: " + contactUIN);
        sourceContact=opSetPersPresence.createVolatileContact(new Screenname(contactUIN));
      }
      MessageReceivedEvent msgReceivedEvt=new MessageReceivedEvent(createMessage(offlineMsgCmd.getContents()),sourceContact,offlineMsgCmd.getDate());
      logger.debug("fire msg received for : " + offlineMsgCmd.getContents());
      fireMessageEvent(msgReceivedEvt);
    }
 else {
      logger.debug("send ack to delete offline messages");
      OfflineMsgDeleteRequest offlineMsgDeleteReq=new OfflineMsgDeleteRequest();
      SnacCommand cmd=new ToIcqCmd(Long.parseLong(icqProvider.getAimSession().getScreenname().getNormal()),offlineMsgDeleteReq.getType(),requestID,offlineMsgDeleteReq);
      icqProvider.getAimConnection().getInfoService().sendSnac(cmd);
    }
  }
 else   if (snac instanceof SnacError) {
    logger.debug("error receiving offline messages");
  }
}
