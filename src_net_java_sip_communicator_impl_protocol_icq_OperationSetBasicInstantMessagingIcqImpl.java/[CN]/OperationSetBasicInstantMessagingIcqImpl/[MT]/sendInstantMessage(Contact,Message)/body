{
  assertConnected();
  if (!(to instanceof ContactIcqImpl))   throw new IllegalArgumentException("The specified contact is not a Icq contact." + to);
  ImConversation imConversation=icqProvider.getAimConnection().getIcbmService().getImConversation(new Screenname(to.getAddress()));
  String messageContent=null;
  if (message.getContentType().equals(HTML_MIME_TYPE) && !message.getContent().startsWith(defaultHtmlStartTag)) {
    messageContent=defaultHtmlStartTag + message.getContent() + defaultHtmlEndTag;
  }
 else   messageContent=message.getContent();
  MessageDeliveredEvent msgDeliveryPendingEvt=new MessageDeliveredEvent(message,to,System.currentTimeMillis());
  OperationSetInstantMessageTransformIcqImpl messageTransform=(OperationSetInstantMessageTransformIcqImpl)icqProvider.getOperationSet(OperationSetInstantMessageTransform.class);
  for (  Map.Entry<Integer,Vector<TransformLayer>> entry : messageTransform.transformLayers.entrySet()) {
    for (Iterator<TransformLayer> iterator=entry.getValue().iterator(); iterator.hasNext(); ) {
      TransformLayer transformLayer=(TransformLayer)iterator.next();
      if (msgDeliveryPendingEvt != null)       msgDeliveryPendingEvt=transformLayer.messageDeliveryPending(msgDeliveryPendingEvt);
    }
  }
  if (msgDeliveryPendingEvt == null)   return;
  if (to.getPresenceStatus().isOnline()) {
    imConversation.sendMessage(new SimpleMessage(messageContent));
  }
 else   imConversation.sendMessage(new SimpleMessage(messageContent),true);
  MessageDeliveredEvent msgDeliveredEvt=new MessageDeliveredEvent(message,to,System.currentTimeMillis());
  for (  Map.Entry<Integer,Vector<TransformLayer>> entry : messageTransform.transformLayers.entrySet()) {
    for (Iterator<TransformLayer> iterator=entry.getValue().iterator(); iterator.hasNext(); ) {
      TransformLayer transformLayer=(TransformLayer)iterator.next();
      if (msgDeliveredEvt != null)       msgDeliveredEvt=transformLayer.messageDelivered(msgDeliveredEvt);
    }
  }
  if (msgDeliveredEvt != null)   fireMessageEvent(msgDeliveredEvt);
}
