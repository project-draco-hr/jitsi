{
  if (transportManager == null) {
    CallPeerJabberImpl peer=getPeer();
    if (peer.isInitiator()) {
synchronized (transportManagerSyncRoot) {
        try {
          transportManagerSyncRoot.wait(5000);
        }
 catch (        InterruptedException e) {
        }
      }
      if (transportManager == null) {
        throw new IllegalStateException("The initiator is expected to specify the transport" + " in their offer.");
      }
 else       return transportManager;
    }
 else {
      ProtocolProviderServiceJabberImpl protocolProvider=peer.getProtocolProvider();
      ScServiceDiscoveryManager discoveryManager=protocolProvider.getDiscoveryManager();
      DiscoverInfo peerDiscoverInfo=peer.getDiscoveryInfo();
synchronized (supportedTransportsSyncRoot) {
        if (supportedTransports != null && supportedTransports.length > 0) {
          for (          String supportedTransport : supportedTransports) {
            if (ProtocolProviderServiceJabberImpl.URN_XMPP_JINGLE_ICE_UDP_1.equals(supportedTransport)) {
              transportManager=new IceUdpTransportManager(peer);
              break;
            }
 else             if (ProtocolProviderServiceJabberImpl.URN_XMPP_JINGLE_RAW_UDP_0.equals(supportedTransport)) {
              transportManager=new RawUdpTransportManager(peer);
              break;
            }
          }
          if (transportManager == null) {
            logger.warn("Could not find a supported" + " TransportManager in" + " supportedTransports. Will try to"+ " select one based on disco#info.");
          }
        }
      }
      if (transportManager == null) {
        String[] transports=new String[]{ProtocolProviderServiceJabberImpl.URN_XMPP_JINGLE_ICE_UDP_1,ProtocolProviderServiceJabberImpl.URN_XMPP_JINGLE_RAW_UDP_0};
        if (peer.isJitsiVideobridge()) {
          CallJabberImpl call=peer.getCall();
          if (call != null) {
            String jitsiVideobridge=peer.getCall().getJitsiVideobridge();
            if ((jitsiVideobridge != null) && !protocolProvider.isFeatureSupported(jitsiVideobridge,ProtocolProviderServiceJabberImpl.URN_XMPP_JINGLE_ICE_UDP_1)) {
              for (int i=transports.length - 1; i >= 0; i--) {
                if (ProtocolProviderServiceJabberImpl.URN_XMPP_JINGLE_ICE_UDP_1.equals(transports[i])) {
                  transports[i]=null;
                }
              }
            }
          }
        }
        for (        String transport : transports) {
          if (transport == null)           continue;
          if (isFeatureSupported(discoveryManager,peerDiscoverInfo,transport)) {
            if (ProtocolProviderServiceJabberImpl.URN_XMPP_JINGLE_ICE_UDP_1.equals(transport)) {
              transportManager=new IceUdpTransportManager(peer);
            }
 else             if (ProtocolProviderServiceJabberImpl.URN_XMPP_JINGLE_RAW_UDP_0.equals(transport)) {
              transportManager=new RawUdpTransportManager(peer);
            }
            if (transportManager != null)             break;
          }
        }
        if ((transportManager == null) && logger.isDebugEnabled()) {
          logger.debug("No known Jingle transport supported by Jabber" + " call peer " + peer);
        }
      }
    }
  }
  return transportManager;
}
