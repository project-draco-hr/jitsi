{
  TransportManagerJabberImpl transportManager=getTransportManager();
  Iterable<ContentPacketExtension> sessAccept=transportManager.wrapupCandidateHarvest();
  CallPeerJabberImpl peer=getPeer();
  for (  ContentPacketExtension ourContent : sessAccept) {
    RtpDescriptionPacketExtension description=JingleUtils.getRtpDescription(ourContent);
    MediaType type=MediaType.parseString(description.getMedia());
    StreamConnector connector=transportManager.getStreamConnector(type);
    MediaDevice dev=getDefaultDevice(type);
    MediaStreamTarget target=transportManager.getStreamTarget(type);
    MediaDirection direction=JingleUtils.getDirection(ourContent,!peer.isInitiator());
    ContentPacketExtension theirContent=this.remoteContentMap.get(ourContent.getName());
    RtpDescriptionPacketExtension theirDescription=JingleUtils.getRtpDescription(theirContent);
    MediaFormat format=null;
    for (    PayloadTypePacketExtension payload : theirDescription.getPayloadTypes()) {
      format=JingleUtils.payloadTypeToMediaFormat(payload,getDynamicPayloadTypes());
      if (format != null)       break;
    }
    if (format == null) {
      ProtocolProviderServiceJabberImpl.throwOperationFailedException("No matching codec.",OperationFailedException.ILLEGAL_ARGUMENT,null,logger);
    }
    List<RTPExtension> rtpExtensions=JingleUtils.extractRTPExtensions(description,this.getRtpExtensionsRegistry());
    initStream(ourContent.getName(),connector,dev,format,target,direction,rtpExtensions);
    if (ourContent.getChildExtensionsOfType(InputEvtPacketExtension.class) != null) {
      OperationSetDesktopSharingClientJabberImpl client=(OperationSetDesktopSharingClientJabberImpl)peer.getProtocolProvider().getOperationSet(OperationSetDesktopSharingClient.class);
      if (client != null)       client.fireRemoteControlGranted();
    }
  }
  return sessAccept;
}
