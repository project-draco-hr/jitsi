{
  RtpDescriptionPacketExtension description=JingleUtils.getRtpDescription(content);
  MediaType mediaType=MediaType.parseString(description.getMedia());
  TransportManagerJabberImpl transportManager=getTransportManager();
  MediaStreamTarget target=transportManager.getStreamTarget(mediaType);
  if (target == null)   target=JingleUtils.extractDefaultTarget(content);
  if ((target == null) || (target.getDataAddress().getPort() == 0)) {
    closeStream(mediaType);
    return;
  }
  List<MediaFormat> supportedFormats=JingleUtils.extractFormats(description,getDynamicPayloadTypes());
  MediaDevice dev=getDefaultDevice(mediaType);
  if (!isDeviceActive(dev)) {
    closeStream(mediaType);
    return;
  }
  MediaDirection devDirection=(dev == null) ? MediaDirection.INACTIVE : dev.getDirection();
  devDirection=devDirection.and(getDirectionUserPreference(mediaType));
  if (supportedFormats.isEmpty()) {
    ProtocolProviderServiceJabberImpl.throwOperationFailedException("Remote party sent an invalid Jingle answer.",OperationFailedException.ILLEGAL_ARGUMENT,null,logger);
  }
  addZRTPAdvertisedEncryptions(true,description,mediaType);
  addSDESAdvertisedEncryptions(true,description,mediaType);
  StreamConnector connector=transportManager.getStreamConnector(mediaType);
  MediaDirection remoteDirection=JingleUtils.getDirection(content,getPeer().isInitiator());
  CallJabberImpl call=getPeer().getCall();
  if (call != null && call.getConference().isConferenceFocus()) {
    for (    CallPeerJabberImpl peer : call.getCallPeerList()) {
      ContentPacketExtension remoteContent=peer.getMediaHandler().getRemoteContent(mediaType.toString());
      boolean initiator=peer.isInitiator();
      if (remoteContent != null) {
        SendersEnum senders=remoteContent.getSenders();
        if (senders == null || (SendersEnum.both == senders) || (initiator && SendersEnum.initiator == senders) || (!initiator && SendersEnum.responder == senders)) {
          remoteDirection=remoteDirection.or(MediaDirection.SENDONLY);
        }
      }
    }
  }
  MediaDirection direction=devDirection.getDirectionForAnswer(remoteDirection);
  List<RTPExtension> remoteRTPExtensions=JingleUtils.extractRTPExtensions(description,getRtpExtensionsRegistry());
  List<RTPExtension> supportedExtensions=getExtensionsForType(mediaType);
  List<RTPExtension> rtpExtensions=intersectRTPExtensions(remoteRTPExtensions,supportedExtensions);
  Map<String,String> adv=supportedFormats.get(0).getAdvancedAttributes();
  if (adv != null) {
    for (    Map.Entry<String,String> f : adv.entrySet()) {
      if (f.getKey().equals("imageattr"))       supportQualityControls=true;
    }
  }
  if (mediaType.equals(MediaType.VIDEO) && modify) {
    QualityPreset sendQualityPreset=null;
    QualityPreset receiveQualityPreset=null;
    MediaStream stream=getStream(MediaType.VIDEO);
    if (stream != null && dev != null) {
      List<MediaFormat> fmts=supportedFormats;
      if (fmts.size() > 0) {
        MediaFormat fmt=fmts.get(0);
        ((VideoMediaStream)stream).updateQualityControl(fmt.getAdvancedAttributes());
      }
    }
    if (qualityControls != null) {
      receiveQualityPreset=qualityControls.getRemoteReceivePreset();
      sendQualityPreset=qualityControls.getRemoteSendMaxPreset();
      supportedFormats=(dev == null) ? null : intersectFormats(supportedFormats,getLocallySupportedFormats(dev,sendQualityPreset,receiveQualityPreset));
    }
  }
  initStream(content.getName(),connector,dev,supportedFormats.get(0),target,direction,rtpExtensions,masterStream);
}
