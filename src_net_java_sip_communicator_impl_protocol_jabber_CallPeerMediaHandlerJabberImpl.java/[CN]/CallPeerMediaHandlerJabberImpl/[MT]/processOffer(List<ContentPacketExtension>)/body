{
  List<ContentPacketExtension> answerContentList=new ArrayList<ContentPacketExtension>(offer.size());
  boolean atLeastOneValidDescription=false;
  for (  ContentPacketExtension content : offer) {
    RtpDescriptionPacketExtension description=JingleUtils.getRtpDescription(content);
    MediaType mediaType=MediaType.parseString(description.getMedia());
    List<MediaFormat> remoteFormats=JingleUtils.extractFormats(description,getDynamicPayloadTypes());
    MediaDevice dev=getDefaultDevice(mediaType);
    MediaDirection devDirection=(dev == null) ? MediaDirection.INACTIVE : dev.getDirection();
    devDirection=devDirection.and(getDirectionUserPreference(mediaType));
    MediaDirection remoteDirection=JingleUtils.getDirection(content);
    MediaDirection direction=devDirection.getDirectionForAnswer(remoteDirection);
    List<MediaFormat> mutuallySupportedFormats=intersectFormats(remoteFormats,dev.getSupportedFormats());
    List<RTPExtension> offeredRTPExtensions=JingleUtils.extractRTPExtensions(description,this.getRtpExtensionsRegistry());
    List<RTPExtension> supportedExtensions=getExtensionsForType(mediaType);
    List<RTPExtension> rtpExtensions=intersectRTPExtensions(offeredRTPExtensions,supportedExtensions);
    MediaStreamTarget target=JingleUtils.extractDefaultTarget(content);
    int targetDataPort=target.getDataAddress().getPort();
    if (mutuallySupportedFormats.isEmpty() || (devDirection == MediaDirection.INACTIVE) || (targetDataPort == 0)) {
      closeStream(mediaType);
      continue;
    }
    answerContentList.add(JingleUtils.createDescription(content.getCreator(),content.getName(),JingleUtils.getSenders(direction,!peer.isInitiator()),mutuallySupportedFormats,rtpExtensions,getDynamicPayloadTypes(),getRtpExtensionsRegistry()));
    atLeastOneValidDescription=true;
  }
  if (!atLeastOneValidDescription)   ProtocolProviderServiceJabberImpl.throwOperationFailedException("Offer contained no media " + " formats or no valid media descriptions.",OperationFailedException.ILLEGAL_ARGUMENT,null,logger);
  this.localContentList=answerContentList;
}
