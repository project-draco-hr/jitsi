{
  List<ContentPacketExtension> answer=new ArrayList<ContentPacketExtension>(offer.size());
  boolean atLeastOneValidDescription=false;
  for (  ContentPacketExtension content : offer) {
    remoteContentMap.put(content.getName(),content);
    RtpDescriptionPacketExtension description=JingleUtils.getRtpDescription(content);
    MediaType mediaType=MediaType.parseString(description.getMedia());
    List<MediaFormat> remoteFormats=JingleUtils.extractFormats(description,getDynamicPayloadTypes());
    MediaDevice dev=getDefaultDevice(mediaType);
    MediaDirection devDirection=(dev == null) ? MediaDirection.INACTIVE : dev.getDirection();
    devDirection=devDirection.and(getDirectionUserPreference(mediaType));
    MediaDirection remoteDirection=JingleUtils.getDirection(content,getPeer().isInitiator());
    MediaDirection direction=devDirection.getDirectionForAnswer(remoteDirection);
    List<MediaFormat> mutuallySupportedFormats=intersectFormats(remoteFormats,dev.getSupportedFormats());
    List<RTPExtension> offeredRTPExtensions=JingleUtils.extractRTPExtensions(description,this.getRtpExtensionsRegistry());
    List<RTPExtension> supportedExtensions=getExtensionsForType(mediaType);
    List<RTPExtension> rtpExtensions=intersectRTPExtensions(offeredRTPExtensions,supportedExtensions);
    IceUdpTransportPacketExtension transport=content.getFirstChildOfType(IceUdpTransportPacketExtension.class);
    MediaStreamTarget target=null;
    try {
      target=JingleUtils.extractDefaultTarget(content);
    }
 catch (    IllegalArgumentException e) {
      logger.warn("Fail to extract default target",e);
    }
    int targetDataPort=(target == null && transport != null) ? -1 : (target != null) ? target.getDataAddress().getPort() : 0;
    setTransportManager(transport.getNamespace());
    if (mutuallySupportedFormats.isEmpty() || (devDirection == MediaDirection.INACTIVE) || (targetDataPort == 0)) {
      closeStream(mediaType);
      continue;
    }
    ContentPacketExtension ourContent=JingleUtils.createDescription(content.getCreator(),content.getName(),JingleUtils.getSenders(direction,!getPeer().isInitiator()),mutuallySupportedFormats,rtpExtensions,getDynamicPayloadTypes(),getRtpExtensionsRegistry());
    if (getPeer().getCall().isSipZrtpAttribute()) {
      SrtpControl control=getZrtpControls().get(mediaType);
      if (control == null) {
        control=JabberActivator.getMediaService().createZrtpControl();
        getZrtpControls().put(mediaType,control);
      }
      String helloHash[]=control.getHelloHashSep();
      if (helloHash != null && helloHash[1].length() > 0) {
        EncryptionPacketExtension encryption=new EncryptionPacketExtension();
        ZrtpHashPacketExtension hash=new ZrtpHashPacketExtension();
        hash.setVersion(helloHash[0]);
        hash.setValue(helloHash[1]);
        encryption.addChildExtension(hash);
        RtpDescriptionPacketExtension rtpDescription=JingleUtils.getRtpDescription(ourContent);
        rtpDescription.setEncryption(encryption);
      }
    }
    if (content.getChildExtensionsOfType(InputEvtPacketExtension.class) != null) {
      ourContent.addChildExtension(new InputEvtPacketExtension());
    }
    answer.add(ourContent);
    localContentMap.put(content.getName(),ourContent);
    atLeastOneValidDescription=true;
  }
  if (!atLeastOneValidDescription) {
    ProtocolProviderServiceJabberImpl.throwOperationFailedException("Offer contained no media formats" + " or no valid media descriptions.",OperationFailedException.ILLEGAL_ARGUMENT,null,logger);
  }
  harvestCandidates(offer,answer,new TransportInfoSender(){
    public void sendTransportInfo(    Iterable<ContentPacketExtension> contents){
      getPeer().sendTransportInfo(contents);
    }
  }
);
  getTransportManager().startConnectivityEstablishment(offer);
}
