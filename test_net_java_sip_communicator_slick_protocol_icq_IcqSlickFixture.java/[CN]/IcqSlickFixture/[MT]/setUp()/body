{
  ServiceReference[] serRefs=null;
  String osgiFilter="(" + ProtocolProviderFactory.PROTOCOL + "="+ ProtocolNames.ICQ+ ")";
  try {
    serRefs=IcqSlickFixture.bc.getServiceReferences(ProtocolProviderFactory.class.getName(),osgiFilter);
  }
 catch (  InvalidSyntaxException ex) {
    fail(osgiFilter + " is not a valid osgi filter");
  }
  assertTrue("Failed to find an provider factory service for protocol ICQ",serRefs != null || serRefs.length > 0);
  providerFactory=(ProtocolProviderFactory)IcqSlickFixture.bc.getService(serRefs[0]);
  ourUserID=System.getProperty(IcqProtocolProviderSlick.TESTED_IMPL_USER_ID_PROP_NAME);
  ServiceReference[] icqProviderRefs=bc.getServiceReferences(ProtocolProviderService.class.getName(),"(&" + "(" + ProtocolProviderFactory.PROTOCOL + "="+ ProtocolNames.ICQ+ ")"+ "("+ ProtocolProviderFactory.USER_ID+ "="+ ourUserID+ ")"+ ")");
  assertNotNull("No Protocol Provider was found for ICQ UIN:" + ourUserID,icqProviderRefs);
  assertTrue("No Protocol Provider was found for ICQ UIN:" + ourUserID,icqProviderRefs.length > 0);
  icqServiceRef=icqProviderRefs[0];
  provider=(ProtocolProviderService)bc.getService(icqServiceRef);
}
