{
  this.setCurrentProvider(protocolProvider);
  Iterator<UIContactSource> sourcesIter=new ArrayList<UIContactSource>(srcContactList.getContactSources()).iterator();
  while (sourcesIter.hasNext()) {
    ContactSourceService contactSource=sourcesIter.next().getContactSourceService();
    if (contactSource instanceof ProtocolAwareContactSourceService) {
      ((ProtocolAwareContactSourceService)contactSource).setPreferredProtocolProvider(OperationSetBasicTelephony.class,protocolProvider);
    }
  }
  srcContactList.removeContactSource(currentProviderContactSource);
  srcContactList.removeContactSource(currentStringContactSource);
  currentProviderContactSource=new ProtocolContactSourceServiceImpl(protocolProvider,OperationSetBasicTelephony.class);
  currentStringContactSource=new StringContactSourceServiceImpl(protocolProvider,OperationSetBasicTelephony.class);
  srcContactList.addContactSource(currentProviderContactSource);
  srcContactList.addContactSource(currentStringContactSource);
  srcContactList.applyDefaultFilter();
}
