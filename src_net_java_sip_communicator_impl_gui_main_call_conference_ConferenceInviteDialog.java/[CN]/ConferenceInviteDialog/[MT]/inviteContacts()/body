{
  ProtocolProviderService selectedProvider=null;
  Map<ProtocolProviderService,List<String>> selectedProviderCallees=new HashMap<ProtocolProviderService,List<String>>();
  List<String> callees=null;
  Enumeration<MetaContact> selectedContacts=getSelectedMetaContacts();
  if (selectedContacts != null) {
    while (selectedContacts.hasMoreElements()) {
      MetaContact metaContact=selectedContacts.nextElement();
      Iterator<Contact> contactsIter=metaContact.getContacts();
      if (contactsIter.hasNext()) {
        Contact inviteContact=contactsIter.next();
        selectedProvider=inviteContact.getProtocolProvider();
        if (selectedProviderCallees.get(selectedProvider) != null) {
          callees=selectedProviderCallees.get(selectedProvider);
        }
 else {
          callees=new ArrayList<String>();
        }
        callees.add(inviteContact.getAddress());
        selectedProviderCallees.put(selectedProvider,callees);
      }
    }
  }
  Enumeration<ContactWithProvider> selectedContactWithProvider=getSelectedContactsWithProvider();
  if (selectedContactWithProvider != null) {
    while (selectedContactWithProvider.hasMoreElements()) {
      ContactWithProvider c=selectedContactWithProvider.nextElement();
      selectedProvider=c.getProvider();
      if (selectedProviderCallees.get(selectedProvider) != null) {
        callees=selectedProviderCallees.get(selectedProvider);
      }
 else {
        callees=new ArrayList<String>();
      }
      callees.add(c.getAddress());
      selectedProviderCallees.put(selectedProvider,callees);
    }
  }
  if (call != null) {
    CallManager.inviteToCrossProtocolConferenceCall(selectedProviderCallees,call);
  }
 else {
    CallManager.createCrossProtocolConferenceCall(selectedProviderCallees);
  }
}
