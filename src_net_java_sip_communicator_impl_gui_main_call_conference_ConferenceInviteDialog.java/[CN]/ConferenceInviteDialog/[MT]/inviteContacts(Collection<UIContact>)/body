{
  ProtocolProviderService selectedProvider=null;
  Map<ProtocolProviderService,List<String>> selectedProviderCallees=new HashMap<ProtocolProviderService,List<String>>();
  List<String> callees=null;
  Iterator<UIContact> contactsIter=contacts.iterator();
  while (contactsIter.hasNext()) {
    UIContact uiContact=contactsIter.next();
    Iterator<UIContactDetail> contactDetailsIter=uiContact.getContactDetailsForOperationSet(OperationSetBasicTelephony.class).iterator();
    if (contactDetailsIter.hasNext()) {
      UIContactDetail inviteDetail=contactDetailsIter.next();
      selectedProvider=inviteDetail.getPreferredProtocolProvider(OperationSetBasicTelephony.class);
      if (selectedProvider == null)       selectedProvider=(ProtocolProviderService)accountSelectorBox.getSelectedItem();
      if (selectedProvider != null && selectedProviderCallees.get(selectedProvider) != null) {
        callees=selectedProviderCallees.get(selectedProvider);
      }
 else {
        callees=new ArrayList<String>();
      }
      callees.add(inviteDetail.getAddress());
      selectedProviderCallees.put(selectedProvider,callees);
    }
  }
  if (call != null) {
    CallManager.inviteToConferenceCall(selectedProviderCallees,call);
  }
 else {
    CallManager.createConferenceCall(selectedProviderCallees);
  }
}
