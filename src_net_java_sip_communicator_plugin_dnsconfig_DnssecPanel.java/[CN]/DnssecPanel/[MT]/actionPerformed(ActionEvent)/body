{
  if (e.getSource() == cboDefault) {
    if (cboDefault.getSelectedItem() == null)     return;
    SecureResolveMode oldMode=Enum.valueOf(SecureResolveMode.class,config.getString(ConfigurableDnssecResolver.PNAME_DNSSEC_VALIDATION_MODE,SecureResolveMode.WarnIfBogus.name()));
    config.setProperty(ConfigurableDnssecResolver.PNAME_DNSSEC_VALIDATION_MODE,((SecureResolveMode)cboDefault.getSelectedItem()).name());
    for (int i=0; i < tblDomains.getModel().getRowCount(); i++) {
      SecureResolveMode m=(SecureResolveMode)data.getValueAt(i,1);
      if (m == oldMode)       data.setValueAt(cboDefault.getSelectedItem(),i,1);
    }
    tblDomains.repaint();
    return;
  }
  if (e.getSource() == chkEnabled) {
    File f;
    try {
      f=DnsConfigActivator.getFileAccessService().getPrivatePersistentFile(".usednsjava");
      if (chkEnabled.isSelected()) {
        if (!f.createNewFile() && !f.exists())         chkEnabled.setSelected(UnboundApi.isAvailable());
      }
 else {
        if (!f.delete() && f.exists())         chkEnabled.setSelected(true);
      }
      config.setProperty(DnsUtilActivator.PNAME_DNSSEC_RESOLVER_ENABLED,chkEnabled.isSelected());
    }
 catch (    Exception ex) {
      logger.error("failed to enable DNSSEC",ex);
      ErrorDialog ed=new ErrorDialog(null,R.getI18NString("plugin.dnsconfig.dnssec.ENABLE_FAILED"),R.getI18NString("plugin.dnsconfig.dnssec.ENABLE_FAILED_MSG"),ex);
      ed.showDialog();
    }
    updateState();
  }
  if (e.getSource() == chkAbsolute) {
    config.setProperty(NetworkUtils.PNAME_DNS_ALWAYS_ABSOLUTE,chkAbsolute.isSelected());
    updateState();
  }
}
