{
  this.index=index;
  this.rightLabel.setIcon(null);
  DefaultContactList contactList=(DefaultContactList)list;
  if (value instanceof MetaContact) {
    this.setPreferredSize(new Dimension(20,30));
    MetaContact metaContact=(MetaContact)value;
    String displayName=metaContact.getDisplayName();
    if (displayName == null || displayName.length() < 1) {
      displayName=GuiActivator.getResources().getI18NString("service.gui.UNKNOWN");
    }
    this.nameLabel.setText(displayName);
    if (contactList.isMetaContactActive(metaContact)) {
      statusIcon.setImage(msgReceivedImage);
    }
 else {
      statusIcon.setImage(Constants.getStatusIcon(contactList.getMetaContactStatus(metaContact)));
    }
    this.statusLabel.setIcon(statusIcon);
    this.nameLabel.setFont(this.getFont().deriveFont(Font.PLAIN));
    if (contactForegroundColor != null)     this.nameLabel.setForeground(contactForegroundColor);
    String statusMessage=getStatusMessage(metaContact);
    if (getStatusMessage(metaContact) != null) {
      statusMessageLabel.setText(statusMessage);
      centerPanel.add(statusMessageLabel);
    }
 else     centerPanel.remove(statusMessageLabel);
    this.setBorder(BorderFactory.createEmptyBorder(1,3,1,3));
    ImageIcon avatar=getAvatar(metaContact);
    if (avatar != null)     this.rightLabel.setIcon(avatar);
    this.rightLabel.setText("");
    final int listWidth=list.getWidth();
    this.setBounds(0,0,listWidth - 2,30);
    this.nameLabel.setBounds(0,0,listWidth - 28,17);
    this.rightLabel.setBounds(listWidth - 28,0,25,30);
    this.isLeaf=true;
  }
 else   if (value instanceof MetaContactGroup) {
    this.setPreferredSize(new Dimension(20,20));
    MetaContactGroup groupItem=(MetaContactGroup)value;
    this.nameLabel.setText(groupItem.getGroupName());
    this.nameLabel.setFont(this.getFont().deriveFont(Font.BOLD));
    if (groupForegroundColor != null)     this.nameLabel.setForeground(groupForegroundColor);
    centerPanel.remove(statusMessageLabel);
    this.setBorder(BorderFactory.createEmptyBorder(2,3,2,3));
    this.setBounds(0,0,list.getWidth() - 2,20);
    this.statusLabel.setIcon(contactList.isGroupClosed(groupItem) ? closedGroupIcon : openedGroupIcon);
    this.rightLabel.setIcon(null);
    this.rightLabel.setText(groupItem.countOnlineChildContacts() + "/" + groupItem.countChildContacts());
    this.isLeaf=false;
  }
 else   if (value instanceof String) {
    this.setPreferredSize(new Dimension(20,30));
    this.nameLabel.setText((String)value);
    this.nameLabel.setFont(this.getFont().deriveFont(Font.PLAIN));
  }
 else {
    this.setPreferredSize(new Dimension(20,30));
    this.nameLabel.setText(value.toString());
    this.nameLabel.setFont(this.getFont().deriveFont(Font.PLAIN));
  }
  this.isSelected=isSelected;
  return this;
}
