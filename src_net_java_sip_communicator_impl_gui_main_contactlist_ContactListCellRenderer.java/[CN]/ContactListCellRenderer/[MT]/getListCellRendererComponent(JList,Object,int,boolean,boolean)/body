{
  ContactList contactList=(ContactList)list;
  ContactListModel listModel=(ContactListModel)contactList.getModel();
  String toolTipText="<html>";
  if (value instanceof MetaContact) {
    MetaContact contactItem=(MetaContact)value;
    toolTipText+="<b>" + contactItem.getDisplayName() + "</b>";
    this.nameLabel.setText(contactItem.getDisplayName());
    this.nameLabel.setIcon(listModel.getMetaContactStatusIcon(contactItem));
    this.nameLabel.setFont(this.getFont().deriveFont(Font.PLAIN));
    this.setBorder(BorderFactory.createEmptyBorder(1,1,1,1));
    this.setBounds(0,0,list.getWidth() - 2,17);
    this.buttonsPanel.removeAll();
    Iterator i=contactItem.getContacts();
    int buttonsPanelWidth=0;
    while (i.hasNext()) {
      Contact protocolContact=(Contact)i.next();
      Image protocolStatusIcon=ImageLoader.getBytesInImage(protocolContact.getPresenceStatus().getStatusIcon());
      int providerIndex=mainFrame.getProviderIndex(protocolContact.getProtocolProvider());
      Image img;
      if (providerIndex > 0) {
        img=createIndexedImage(protocolStatusIcon,providerIndex);
      }
 else {
        img=protocolStatusIcon;
      }
      ContactProtocolButton contactProtocolButton=new ContactProtocolButton(img);
      contactProtocolButton.setProtocolContact(protocolContact);
      contactProtocolButton.setBounds(buttonsPanelWidth,16,CONTACT_PROTOCOL_BUTTON_WIDTH,img.getHeight(null));
      buttonsPanelWidth+=CONTACT_PROTOCOL_BUTTON_WIDTH;
      this.buttonsPanel.add(contactProtocolButton);
      toolTipText+="<br>" + protocolContact.getDisplayName();
    }
    this.buttonsPanel.setPreferredSize(new Dimension(buttonsPanelWidth,16));
    this.buttonsPanel.setBounds(list.getWidth() - 2 - buttonsPanelWidth,0,buttonsPanelWidth,16);
    this.nameLabel.setBounds(0,0,list.getWidth() - 2 - buttonsPanelWidth,17);
    this.add(buttonsPanel,BorderLayout.EAST);
    this.isLeaf=true;
  }
 else   if (value instanceof MetaContactGroup) {
    MetaContactGroup groupItem=(MetaContactGroup)value;
    toolTipText+=groupItem.getGroupName();
    this.nameLabel.setText(groupItem.getGroupName() + "  ( " + groupItem.countChildContacts()+ " )");
    this.nameLabel.setIcon(new ImageIcon(ImageLoader.getImage(ImageLoader.GROUPS_16x16_ICON)));
    this.nameLabel.setFont(this.getFont().deriveFont(Font.BOLD));
    this.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
    this.setBounds(0,0,list.getWidth() - 2,20);
    this.remove(buttonsPanel);
    this.isLeaf=false;
  }
  toolTipText+="</html>";
  this.setToolTipText(toolTipText);
  this.isSelected=isSelected;
  return this;
}
