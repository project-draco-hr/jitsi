{
  buttonGroup=new ButtonGroup();
  jLabelStatus=new JLabel();
  jToolBar1=new JToolBar();
  jButtonNew=new JButton();
  jButtonSave=new JButton();
  jButtonOpen=new JButton();
  jButtonCopy=new JButton();
  jButtonPaste=new JButton();
  jPanel1=new JPanel();
  toolBar=new JPanel();
  penButton=new JToggleButton();
  selectionButton=new JToggleButton();
  lineButton=new JToggleButton();
  rectangleButton=new JToggleButton();
  fillRectangleButton=new JToggleButton();
  textButton=new JToggleButton();
  imageButton=new JToggleButton();
  polygonButton=new JToggleButton();
  fillPolygonButton=new JToggleButton();
  polylineButton=new JToggleButton();
  circleButton=new JToggleButton();
  fillCircleButton=new JToggleButton();
  colorChooserButton=new JButton();
  jLabelColor=new JLabel();
  modifButton=new JToggleButton();
  jPanel2=new JPanel();
  jLabelThickness=new JLabel();
  jLabel1=new JLabel();
  jSpinnerThickness=new JSpinner();
  menuBar=new JMenuBar();
  fileMenu=new JMenu();
  newMenuItem=new JMenuItem();
  openMenuItem=new JMenuItem();
  saveMenuItem=new JMenuItem();
  sendMenuItem=new JMenuItem();
  printMenuItem=new JMenuItem();
  exitMenuItem=new JMenuItem();
  editMenu=new JMenu();
  gridMenuItem=new JCheckBoxMenuItem();
  deselectMenuItem=new JMenuItem();
  copyMenuItem=new JMenuItem();
  pasteMenuItem=new JMenuItem();
  deleteMenuItem=new javax.swing.JMenuItem();
  propertiesMenuItem=new JMenuItem();
  helpMenu=new JMenu();
  helpMenuItem=new JMenuItem();
  aboutMenuItem=new JMenuItem();
  leftPanel=new JPanel(new BorderLayout());
  setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
  setTitle(Resources.getString("whiteboardTitle"));
  if (session != null) {
    Iterator participants=session.getWhiteboardParticipants();
    while (participants.hasNext()) {
      this.setTitle(this.getTitle() + " - " + participants.next());
    }
  }
  jLabelStatus.setText(Resources.getString("draw"));
  jLabelStatus.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
  getContentPane().add(jLabelStatus,java.awt.BorderLayout.SOUTH);
  jButtonNew.setToolTipText(Resources.getString("new"));
  jButtonNew.setEnabled(false);
  jToolBar1.add(jButtonNew);
  jButtonSave.setToolTipText(Resources.getString("save"));
  jButtonSave.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      jButtonSaveActionPerformed(evt);
    }
  }
);
  jToolBar1.add(jButtonSave);
  jButtonOpen.setToolTipText(Resources.getString("open"));
  jButtonOpen.setEnabled(false);
  jToolBar1.add(jButtonOpen);
  jButtonCopy.setToolTipText(Resources.getString("copy"));
  jButtonCopy.setEnabled(false);
  jToolBar1.add(jButtonCopy);
  jButtonPaste.setToolTipText(Resources.getString("paste"));
  jButtonPaste.setEnabled(false);
  jToolBar1.add(jButtonPaste);
  getContentPane().add(jToolBar1,BorderLayout.NORTH);
  jPanel1.setLayout(new BorderLayout());
  jPanel1.setPreferredSize(new Dimension(110,350));
  toolBar.setLayout(new GridLayout(0,2,5,5));
  toolBar.setBorder(BorderFactory.createEmptyBorder(5,8,5,8));
  buttonGroup.add(selectionButton);
  selectionButton.setToolTipText(Resources.getString("select"));
  selectionButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      selectionButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(selectionButton);
  buttonGroup.add(modifButton);
  modifButton.setToolTipText(Resources.getString("modification"));
  modifButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      modifButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(modifButton);
  buttonGroup.add(penButton);
  penButton.setToolTipText(Resources.getString("pen"));
  penButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      penButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(penButton);
  buttonGroup.add(textButton);
  textButton.setToolTipText(Resources.getString("text"));
  textButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      textButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(textButton);
  buttonGroup.add(lineButton);
  lineButton.setToolTipText(Resources.getString("line"));
  lineButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      lineButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(lineButton);
  buttonGroup.add(polylineButton);
  polylineButton.setToolTipText(Resources.getString("polyline"));
  polylineButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      polylineButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(polylineButton);
  buttonGroup.add(rectangleButton);
  rectangleButton.setToolTipText(Resources.getString("rectangle"));
  rectangleButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      rectangleButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(rectangleButton);
  buttonGroup.add(fillRectangleButton);
  fillRectangleButton.setToolTipText(Resources.getString("fillRectangle"));
  fillRectangleButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      fillRectangleButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(fillRectangleButton);
  buttonGroup.add(imageButton);
  imageButton.setToolTipText(Resources.getString("image"));
  imageButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      imageButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(imageButton);
  buttonGroup.add(polygonButton);
  polygonButton.setToolTipText(Resources.getString("polygon"));
  polygonButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      polygonButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(polygonButton);
  buttonGroup.add(fillPolygonButton);
  fillPolygonButton.setToolTipText(Resources.getString("fillPolygon"));
  fillPolygonButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      fillPolygonButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(fillPolygonButton);
  buttonGroup.add(circleButton);
  circleButton.setToolTipText(Resources.getString("circle"));
  circleButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      circleButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(circleButton);
  buttonGroup.add(fillCircleButton);
  fillCircleButton.setToolTipText(Resources.getString("fillCircle"));
  fillCircleButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      fillCircleButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(fillCircleButton);
  colorChooserButton.setToolTipText(Resources.getString("color"));
  colorChooserButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      colorChooserButtonActionPerformed(evt);
    }
  }
);
  toolBar.add(colorChooserButton);
  jLabelColor.setOpaque(true);
  jLabelColor.setBackground(currentColor);
  jLabelColor.setBorder(BorderFactory.createLineBorder(Color.GRAY,3));
  toolBar.add(jLabelColor);
  jPanel1.add(toolBar,BorderLayout.NORTH);
  jPanel2.setLayout(new GridBagLayout());
  jLabelThickness.setText(Resources.getString("thickness"));
  jPanel2.add(jLabelThickness);
  jSpinnerThickness.addChangeListener(new javax.swing.event.ChangeListener(){
    public void stateChanged(    javax.swing.event.ChangeEvent evt){
      jSpinnerThicknessStateChanged(evt);
    }
  }
);
  jPanel2.add(jSpinnerThickness);
  jPanel1.add(jPanel2,BorderLayout.CENTER);
  leftPanel.add(jPanel1,BorderLayout.NORTH);
  getContentPane().add(leftPanel,BorderLayout.WEST);
  fileMenu.setText(Resources.getString("file"));
  newMenuItem.setText(Resources.getString("new"));
  newMenuItem.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      try {
        if (session != null)         session.join();
 else         sessionManager.initWhiteboard(contact);
      }
 catch (      OperationFailedException e1) {
        logger.error("Creating new session failed.",e1);
      }
    }
  }
);
  fileMenu.add(newMenuItem);
  openMenuItem.setText(Resources.getString("open"));
  openMenuItem.setEnabled(false);
  fileMenu.add(openMenuItem);
  saveMenuItem.setText(Resources.getString("save"));
  saveMenuItem.setEnabled(false);
  fileMenu.add(saveMenuItem);
  printMenuItem.setText(Resources.getString("print"));
  printMenuItem.setEnabled(false);
  fileMenu.add(printMenuItem);
  exitMenuItem.setText(Resources.getString("exit"));
  exitMenuItem.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      session.leave();
    }
  }
);
  fileMenu.add(exitMenuItem);
  menuBar.add(fileMenu);
  editMenu.setText(Resources.getString("edit"));
  gridMenuItem.setText(Resources.getString("grid"));
  gridMenuItem.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      gridMenuItemActionPerformed(evt);
    }
  }
);
  editMenu.add(gridMenuItem);
  deselectMenuItem.setText(Resources.getString("deselect"));
  deselectMenuItem.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      deselectMenuItemActionPerformed(evt);
    }
  }
);
  editMenu.add(deselectMenuItem);
  copyMenuItem.setText(Resources.getString("copy"));
  copyMenuItem.setEnabled(false);
  editMenu.add(copyMenuItem);
  pasteMenuItem.setText(Resources.getString("paste"));
  pasteMenuItem.setEnabled(false);
  editMenu.add(pasteMenuItem);
  deleteMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE,0));
  deleteMenuItem.setText(Resources.getString("delete"));
  deleteMenuItem.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      deleteMenuItemActionPerformed(evt);
    }
  }
);
  editMenu.add(deleteMenuItem);
  propertiesMenuItem.setText(Resources.getString("properties"));
  propertiesMenuItem.setEnabled(false);
  editMenu.add(propertiesMenuItem);
  menuBar.add(editMenu);
  helpMenu.setText(Resources.getString("help"));
  helpMenu.setEnabled(false);
  helpMenuItem.setText(Resources.getString("help"));
  helpMenu.add(helpMenuItem);
  aboutMenuItem.setText(Resources.getString("about"));
  helpMenu.add(aboutMenuItem);
  menuBar.add(helpMenu);
  setJMenuBar(menuBar);
  pack();
}
