{
  ConfigurationService configurationService=getConfigurationService();
  String factoryPackage=getFactoryImplPackageName(factory);
  List<String> storedAccounts=configurationService.getPropertyNamesByPrefix(factoryPackage,true);
  String accountUID=accountID.getAccountUniqueID();
  String accountNodeName=null;
  for (Iterator<String> storedAccountIter=storedAccounts.iterator(); storedAccountIter.hasNext(); ) {
    String storedAccount=storedAccountIter.next();
    String storedAccountUID=configurationService.getString(storedAccount + ".ACCOUNT_UID");
    if (storedAccountUID.equals(accountUID)) {
      accountNodeName=configurationService.getString(storedAccount);
    }
  }
  if (accountNodeName == null) {
    accountNodeName="acc" + Long.toString(System.currentTimeMillis());
    configurationService.setProperty(factoryPackage + "." + accountNodeName,accountNodeName);
    configurationService.setProperty(factoryPackage + "." + accountNodeName+ "."+ ProtocolProviderFactory.ACCOUNT_UID,accountID.getAccountUniqueID());
  }
  Map accountProperties=accountID.getAccountProperties();
  for (Iterator entryIter=accountProperties.entrySet().iterator(); entryIter.hasNext(); ) {
    Map.Entry entry=(Map.Entry)entryIter.next();
    String property=(String)entry.getKey();
    String value=(String)entry.getValue();
    if (property.equals(ProtocolProviderFactory.PASSWORD))     value=new String(Base64.encode(value.getBytes()));
    configurationService.setProperty(factoryPackage + "." + accountNodeName+ "."+ property,value);
  }
  logger.debug("Stored account for id " + accountID.getAccountUniqueID() + " for package "+ factoryPackage);
}
