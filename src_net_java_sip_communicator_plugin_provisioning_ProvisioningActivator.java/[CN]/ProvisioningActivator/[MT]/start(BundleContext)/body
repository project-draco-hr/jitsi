{
  if (logger.isDebugEnabled())   logger.debug("Provisioning discovery [STARTED]");
  ProvisioningActivator.bundleContext=bundleContext;
  String url=null;
  provisioningService=new ProvisioningServiceImpl();
  if (!getConfigurationService().getBoolean(DISABLED_PROP,false)) {
    Dictionary<String,String> properties=new Hashtable<String,String>();
    properties.put(ConfigurationForm.FORM_TYPE,ConfigurationForm.ADVANCED_TYPE);
    bundleContext.registerService(ConfigurationForm.class.getName(),new LazyConfigurationForm("net.java.sip.communicator.plugin.provisioning.ProvisioningForm",getClass().getClassLoader(),"plugin.provisioning.PLUGIN_ICON","plugin.provisioning.PROVISIONING",2000,true),properties);
  }
  String method=provisioningService.getProvisioningMethod();
  if (method == null || method.equals("NONE")) {
    return;
  }
  ServiceReference serviceReferences[]=bundleContext.getServiceReferences(ProvisioningDiscoveryService.class.getName(),null);
  if (serviceReferences != null) {
    for (    ServiceReference ref : serviceReferences) {
      ProvisioningDiscoveryService provdisc=(ProvisioningDiscoveryService)bundleContext.getService(ref);
      if (provdisc.getMethodName().equals(method)) {
        url=provdisc.discoverURL();
        break;
      }
    }
  }
  provisioningService.start(url);
  bundleContext.registerService(ProvisioningService.class.getName(),provisioningService,null);
  if (logger.isDebugEnabled())   logger.debug("Provisioning discovery [REGISTERED]");
}
