{
  Properties fileProps=new OrderedProperties();
  InputStream in=null;
  String allowPrefix=getConfigurationService().getString(PROVISIONING_ALLOW_PREFIX_PROP);
  String prefixes[]=(allowPrefix != null) ? allowPrefix.split("\\|") : null;
  try {
    in=new BufferedInputStream(new FileInputStream(file));
    fileProps.load(in);
    Iterator<Map.Entry<Object,Object>> it=fileProps.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry<Object,Object> entry=it.next();
      String key=(String)entry.getKey();
      Object value=entry.getValue();
      if (prefixes != null) {
        boolean isValid=false;
        for (        String s : prefixes) {
          if (key.startsWith(s)) {
            isValid=true;
            break;
          }
        }
        if (!isValid) {
          continue;
        }
      }
      if (value instanceof String) {
        if (((String)value).equals("${null}")) {
          getConfigurationService().removeProperty(key);
          continue;
        }
      }
      if (key.endsWith(".PASSWORD")) {
        getCredentialsStorageService().storePassword(key.substring(0,key.lastIndexOf(".")),(String)value);
      }
 else {
        getConfigurationService().setProperty(key,value);
      }
    }
    getConfigurationService().storeConfiguration();
    try {
      getConfigurationService().reloadConfiguration();
    }
 catch (    Exception e) {
      logger.error("Cannot reload configuration");
    }
  }
 catch (  IOException e) {
    logger.warn("Error during load of provisioning file");
  }
 finally {
    try {
      in.close();
      file.delete();
    }
 catch (    IOException e) {
    }
  }
}
