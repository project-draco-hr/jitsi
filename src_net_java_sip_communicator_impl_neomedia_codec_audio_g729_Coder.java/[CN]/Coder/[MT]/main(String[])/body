{
  InputStream f_speech;
  OutputStream f_serial;
  short[] sp16=new short[L_FRAME];
  short[] serial=new short[SERIAL_SIZE];
  int frame;
  System.out.printf("\n");
  System.out.printf("************  ITU G.729  8 Kbit/S SPEECH CODER  **************\n");
  System.out.printf("\n");
  System.out.printf("----------------- Floating point C simulation ----------------\n");
  System.out.printf("\n");
  System.out.printf("------------ Version 1.01 (Release 2, November 2006) --------\n");
  System.out.printf("\n");
  if (args.length != 2) {
    System.out.printf("Usage : coder  speech_file  bitstream_file \n");
    System.out.printf("\n");
    System.out.printf("Format for speech_file:\n");
    System.out.printf("  Speech is read form a binary file of 16 bits data.\n");
    System.out.printf("\n");
    System.out.printf("Format for bitstream_file:\n");
    System.out.printf("  One word (2-bytes) to indicate erasure.\n");
    System.out.printf("  One word (2 bytes) to indicate bit rate\n");
    System.out.printf("  80 words (2-bytes) containing 80 bits.\n");
    System.out.printf("\n");
    System.exit(1);
  }
  try {
    f_speech=new FileInputStream(args[0]);
  }
 catch (  IOException ex) {
    System.out.printf("Codder - Error opening file  %s !!\n",args[0]);
    System.exit(0);
    throw ex;
  }
  System.out.printf(" Input speech file     :  %s\n",args[0]);
  try {
    f_serial=new FileOutputStream(args[1]);
  }
 catch (  IOException ex) {
    System.out.printf("Coder - Error opening file  %s !!\n",args[1]);
    System.exit(0);
    throw ex;
  }
  System.out.printf(" Output bitstream file :  %s\n",args[1]);
  Coder coder=new Coder();
  frame=0;
  while (Util.fread(sp16,L_FRAME,f_speech) == L_FRAME) {
    frame++;
    System.out.printf(" Frame: %d\r",frame);
    coder.process(sp16,serial);
    Util.fwrite(serial,SERIAL_SIZE,f_serial);
  }
  f_serial.close();
  f_speech.close();
}
