{
  if (evt.getClickCount() < 2)   return;
  UIContact descriptor=evt.getSourceContact();
  if (descriptor.getDescriptor() instanceof MetaContact) {
    MetaContact metaContact=(MetaContact)descriptor.getDescriptor();
    Contact defaultContact=metaContact.getDefaultContact(OperationSetBasicInstantMessaging.class);
    if (defaultContact == null) {
      defaultContact=metaContact.getDefaultContact(OperationSetSmsMessaging.class);
      if (defaultContact == null)       return;
    }
    ProtocolProviderService defaultProvider=defaultContact.getProtocolProvider();
    OperationSetBasicInstantMessaging defaultIM=defaultProvider.getOperationSet(OperationSetBasicInstantMessaging.class);
    ProtocolProviderService protoContactProvider;
    OperationSetBasicInstantMessaging protoContactIM;
    boolean isOfflineMessagingSupported=defaultIM != null && !defaultIM.isOfflineMessagingSupported();
    if (defaultContact.getPresenceStatus().getStatus() < 1 && (!isOfflineMessagingSupported || !defaultProvider.isRegistered())) {
      Iterator<Contact> protoContacts=metaContact.getContacts();
      while (protoContacts.hasNext()) {
        Contact contact=protoContacts.next();
        protoContactProvider=contact.getProtocolProvider();
        protoContactIM=protoContactProvider.getOperationSet(OperationSetBasicInstantMessaging.class);
        if (protoContactIM != null && protoContactIM.isOfflineMessagingSupported() && protoContactProvider.isRegistered()) {
          defaultContact=contact;
        }
      }
    }
    ContactEventHandler contactHandler=mainFrame.getContactHandler(defaultContact.getProtocolProvider());
    contactHandler.contactClicked(defaultContact,evt.getClickCount());
  }
 else   if (descriptor.getDescriptor() instanceof SourceContact) {
    SourceContact contact=(SourceContact)descriptor.getDescriptor();
    List<ContactDetail> imDetails=contact.getContactDetails(OperationSetBasicInstantMessaging.class);
    List<ContactDetail> mucDetails=contact.getContactDetails(OperationSetMultiUserChat.class);
    if (imDetails != null && imDetails.size() > 0) {
      ProtocolProviderService pps=imDetails.get(0).getPreferredProtocolProvider(OperationSetBasicInstantMessaging.class);
      if (pps != null)       GuiActivator.getUIService().getChatWindowManager().startChat(contact.getContactAddress(),pps);
 else       GuiActivator.getUIService().getChatWindowManager().startChat(contact.getContactAddress());
    }
 else     if (mucDetails != null && mucDetails.size() > 0) {
      ChatRoomWrapper room=GuiActivator.getMUCService().findChatRoomWrapperFromSourceContact(contact);
      if (room == null) {
        ProtocolProviderService pps=mucDetails.get(0).getPreferredProtocolProvider(OperationSetMultiUserChat.class);
        room=GuiActivator.getMUCService().findChatRoomWrapperFromChatRoomID(contact.getContactAddress(),pps);
        if (room == null) {
          GuiActivator.getMUCService().createChatRoom(contact.getContactAddress(),pps,new ArrayList<String>(),"",false,false,false);
        }
      }
      if (room != null)       GuiActivator.getMUCService().openChatRoom(room);
    }
 else {
      List<ContactDetail> smsDetails=contact.getContactDetails(OperationSetSmsMessaging.class);
      if (smsDetails != null && smsDetails.size() > 0) {
        GuiActivator.getUIService().getChatWindowManager().startChat(contact.getContactAddress(),true);
      }
    }
  }
}
