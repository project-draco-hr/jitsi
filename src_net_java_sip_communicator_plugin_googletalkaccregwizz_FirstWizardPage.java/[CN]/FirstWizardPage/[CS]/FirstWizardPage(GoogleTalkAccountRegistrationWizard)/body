{
  super(new BorderLayout());
  this.wizard=wizard;
  mainPanel.setLayout(new BoxLayout(mainPanel,BoxLayout.Y_AXIS));
  this.mainPanel.setOpaque(false);
  this.userIDPassPanel.setOpaque(false);
  this.userIDField.getDocument().addDocumentListener(new DocumentListener(){
    public void insertUpdate(    DocumentEvent evt){
      setNextButtonAccordingToUserIDAndResource();
      setServerFieldAccordingToUserID();
    }
    public void removeUpdate(    DocumentEvent evt){
      setNextButtonAccordingToUserIDAndResource();
      setServerFieldAccordingToUserID();
    }
    public void changedUpdate(    DocumentEvent evt){
    }
  }
);
  this.rememberPassBox.setSelected(true);
  this.userIDExampleLabel.setForeground(Color.GRAY);
  this.userIDExampleLabel.setFont(userIDExampleLabel.getFont().deriveFont(8));
  this.userIDExampleLabel.setBorder(BorderFactory.createEmptyBorder(0,0,8,0));
  JPanel emptyPanel=new TransparentPanel();
  emptyPanel.setMaximumSize(new Dimension(40,35));
  JPanel labelsPanel=new TransparentPanel();
  labelsPanel.setLayout(new BoxLayout(labelsPanel,BoxLayout.Y_AXIS));
  labelsPanel.add(userIDLabel);
  labelsPanel.add(emptyPanel);
  labelsPanel.add(passLabel);
  JPanel valuesPanel=new TransparentPanel();
  valuesPanel.setLayout(new BoxLayout(valuesPanel,BoxLayout.Y_AXIS));
  valuesPanel.add(userIDField);
  valuesPanel.add(userIDExampleLabel);
  valuesPanel.add(passField);
  userIDPassPanel.add(labelsPanel,BorderLayout.WEST);
  userIDPassPanel.add(valuesPanel,BorderLayout.CENTER);
  userIDPassPanel.add(rememberPassBox,BorderLayout.SOUTH);
  userIDPassPanel.setBorder(BorderFactory.createTitledBorder(Resources.getString("plugin.jabberaccregwizz.USERNAME_AND_PASSWORD")));
  mainPanel.add(userIDPassPanel);
  portField.getDocument().addDocumentListener(new DocumentListener(){
    public void changedUpdate(    DocumentEvent evt){
    }
    public void insertUpdate(    DocumentEvent evt){
      setNextButtonAccordingToPortAndPriority();
    }
    public void removeUpdate(    DocumentEvent evt){
      setNextButtonAccordingToPortAndPriority();
    }
  }
);
  priorityField.getDocument().addDocumentListener(new DocumentListener(){
    public void changedUpdate(    DocumentEvent evt){
    }
    public void insertUpdate(    DocumentEvent evt){
      setNextButtonAccordingToPortAndPriority();
    }
    public void removeUpdate(    DocumentEvent evt){
      setNextButtonAccordingToPortAndPriority();
    }
  }
);
  labelsAdvOpPanel.add(serverLabel);
  labelsAdvOpPanel.add(portLabel);
  labelsAdvOpPanel.add(resourceLabel);
  labelsAdvOpPanel.add(priorityLabel);
  valuesAdvOpPanel.add(serverField);
  valuesAdvOpPanel.add(portField);
  valuesAdvOpPanel.add(resourceField);
  valuesAdvOpPanel.add(priorityField);
  JPanel checkBoxesPanel=new TransparentPanel(new GridLayout(0,1,10,10));
  checkBoxesPanel.add(sendKeepAliveBox);
  advancedOpPanel.add(checkBoxesPanel,BorderLayout.NORTH);
  advancedOpPanel.add(labelsAdvOpPanel,BorderLayout.WEST);
  advancedOpPanel.add(valuesAdvOpPanel,BorderLayout.CENTER);
  advancedOpPanel.setBorder(BorderFactory.createTitledBorder(Resources.getString("plugin.jabberaccregwizz.ADVANCED_OPTIONS")));
  mainPanel.add(advancedOpPanel);
  registerButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      logger.debug("Reg OK");
      FirstWizardPage.this.wizard.webSignup();
      logger.debug("Reg End");
    }
  }
);
  buttonPanel.add(registerButton);
  registerArea.setEditable(false);
  registerArea.setOpaque(false);
  registerArea.setLineWrap(true);
  registerArea.setWrapStyleWord(true);
  registerPanel.add(registerArea);
  registerPanel.add(buttonPanel);
  registerPanel.setBorder(BorderFactory.createTitledBorder(Resources.getString("plugin.googletalkaccregwizz.NEW_ACCOUNT_TITLE")));
  mainPanel.add(registerPanel);
  this.add(mainPanel,BorderLayout.NORTH);
  this.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
}
