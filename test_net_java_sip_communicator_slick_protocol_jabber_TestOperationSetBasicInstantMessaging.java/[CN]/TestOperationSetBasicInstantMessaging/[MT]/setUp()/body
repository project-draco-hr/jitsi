{
  super.setUp();
  fixture.setUp();
  Map supportedOperationSets1=fixture.provider1.getSupportedOperationSets();
  if (supportedOperationSets1 == null || supportedOperationSets1.size() < 1)   throw new NullPointerException("No OperationSet implementations are supported by " + "this implementation. ");
  opSetBasicIM1=(OperationSetBasicInstantMessaging)supportedOperationSets1.get(OperationSetBasicInstantMessaging.class.getName());
  if (opSetBasicIM1 == null) {
    throw new NullPointerException("No implementation for basic IM was found");
  }
  opSetPresence1=(OperationSetPresence)supportedOperationSets1.get(OperationSetPresence.class.getName());
  if (opSetPresence1 == null) {
    throw new NullPointerException("An implementation of the service must provide an " + "implementation of at least one of the PresenceOperationSets");
  }
  Map supportedOperationSets2=fixture.provider2.getSupportedOperationSets();
  if (supportedOperationSets2 == null || supportedOperationSets2.size() < 1)   throw new NullPointerException("No OperationSet implementations are supported by " + "this implementation. ");
  opSetBasicIM2=(OperationSetBasicInstantMessaging)supportedOperationSets2.get(OperationSetBasicInstantMessaging.class.getName());
  if (opSetBasicIM2 == null) {
    throw new NullPointerException("No implementation for basic IM was found");
  }
  opSetPresence2=(OperationSetPresence)supportedOperationSets2.get(OperationSetPresence.class.getName());
  if (opSetPresence2 == null) {
    throw new NullPointerException("An implementation of the service must provide an " + "implementation of at least one of the PresenceOperationSets");
  }
}
