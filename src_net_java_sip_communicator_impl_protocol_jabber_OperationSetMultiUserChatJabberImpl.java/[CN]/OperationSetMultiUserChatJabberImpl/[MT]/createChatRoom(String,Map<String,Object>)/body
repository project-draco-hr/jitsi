{
  assertSupportedAndConnected();
  ChatRoom room=null;
  if (roomName == null)   roomName="chatroom-" + StringUtils.randomString(4);
 else   room=findRoom(roomName);
  if (room == null) {
    if (logger.isInfoEnabled())     logger.info("Find room returns null.");
    if (getXmppConnection().getHost().toLowerCase().contains("google")) {
      roomName="private-chat-" + UUID.randomUUID().toString() + "@groupchat.google.com";
    }
    MultiUserChat muc=null;
    try {
      muc=new MultiUserChat(getXmppConnection(),getCanonicalRoomName(roomName));
      muc.create(JabberActivator.getGlobalDisplayDetailsService().getDisplayName(jabberProvider));
    }
 catch (    XMPPException ex) {
      logger.error("Failed to create chat room.",ex);
      throw new OperationFailedException("Failed to create chat room",ex.getXMPPError().getCode(),ex.getCause());
    }
    boolean isPrivate=false;
    if (roomProperties != null) {
      Object isPrivateObject=roomProperties.get("isPrivate");
      if (isPrivateObject != null) {
        isPrivate=isPrivateObject.equals(true);
      }
    }
    try {
      Form form;
      if (isPrivate) {
        Form initForm=muc.getConfigurationForm();
        form=initForm.createAnswerForm();
        Iterator<FormField> fieldIterator=initForm.getFields();
        while (fieldIterator.hasNext()) {
          FormField initField=fieldIterator.next();
          if (initField == null || initField.getVariable() == null || initField.getType() == FormField.TYPE_FIXED || initField.getType() == FormField.TYPE_HIDDEN)           continue;
          FormField submitField=form.getField(initField.getVariable());
          if (submitField == null)           continue;
          Iterator<String> value=initField.getValues();
          while (value.hasNext())           submitField.addValue(value.next());
        }
        String[] fields={"muc#roomconfig_membersonly","muc#roomconfig_allowinvites","muc#roomconfig_publicroom"};
        Boolean[] values={true,true,false};
        for (int i=0; i < fields.length; i++) {
          FormField field=new FormField(fields[i]);
          field.setType("boolean");
          form.addField(field);
          form.setAnswer(fields[i],values[i]);
        }
      }
 else {
        form=new Form(Form.TYPE_SUBMIT);
      }
      muc.sendConfigurationForm(form);
    }
 catch (    XMPPException e) {
      logger.error("Failed to send config form.",e);
    }
    room=createLocalChatRoomInstance(muc);
    room.setLocalUserRole(ChatRoomMemberRole.OWNER);
  }
  return room;
}
