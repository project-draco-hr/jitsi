{
  if (IceProcessingState.COMPLETED.equals(iceAgent.getState())) {
    return true;
  }
  if (IceProcessingState.RUNNING.equals(iceAgent.getState())) {
    if (logger.isInfoEnabled()) {
      logger.info("Update Google ICE remote candidates");
    }
    if (remote == null) {
      return false;
    }
    for (    GTalkCandidatePacketExtension candidate : remote) {
      String name=candidate.getName();
      int numComponent=0;
      if (name.equals("rtp")) {
        numComponent=Component.RTP;
      }
 else       if (name.equals("rtcp")) {
        name="rtp";
        numComponent=Component.RTCP;
      }
 else       if (name.equals("video_rtp")) {
        numComponent=Component.RTP;
      }
 else       if (name.equals("video_rtcp")) {
        name="video_rtp";
        numComponent=Component.RTCP;
      }
      IceMediaStream stream=iceAgent.getStream(name);
      if (stream == null) {
        continue;
      }
      String ufrag=candidate.getUsername();
      if (candidate.getGeneration() != iceAgent.getGeneration())       continue;
      if (!candidate.getProtocol().equalsIgnoreCase(Transport.UDP.toString()))       continue;
      Component component=stream.getComponent(numComponent);
      RemoteCandidate remoteCandidate=new RemoteCandidate(new TransportAddress(candidate.getAddress(),candidate.getPort(),Transport.parse(candidate.getProtocol())),component,org.ice4j.ice.CandidateType.parse(candidate.getType().toString()),"0",(long)(candidate.getPreference() * 1000),ufrag);
      component.addUpdateRemoteCandidate(remoteCandidate);
    }
    for (    IceMediaStream stream : iceAgent.getStreams()) {
      for (      Component component : stream.getComponents()) {
        component.updateRemoteCandidate();
      }
    }
    return false;
  }
  int generation=iceAgent.getGeneration();
  boolean startConnectivityEstablishment=false;
  if (remote == null) {
    return false;
  }
  for (  GTalkCandidatePacketExtension candidate : remote) {
    String name=candidate.getName();
    int numComponent=0;
    if (name.equals("rtp")) {
      numComponent=Component.RTP;
    }
 else     if (name.equals("rtcp")) {
      name="rtp";
      numComponent=Component.RTCP;
    }
 else     if (name.equals("video_rtp")) {
      numComponent=Component.RTP;
    }
 else     if (name.equals("video_rtcp")) {
      name="video_rtp";
      numComponent=Component.RTCP;
    }
    IceMediaStream stream=null;
synchronized (wrapupSyncRoot) {
      stream=iceAgent.getStream(name);
    }
    if (stream == null) {
      continue;
    }
    String ufrag=candidate.getUsername();
    if (candidate.getGeneration() != generation)     continue;
    if (!candidate.getProtocol().equalsIgnoreCase(Transport.UDP.toString()))     continue;
    Component component=stream.getComponent(numComponent);
    RemoteCandidate remoteCandidate=new RemoteCandidate(new TransportAddress(candidate.getAddress(),candidate.getPort(),Transport.parse(candidate.getProtocol())),component,org.ice4j.ice.CandidateType.parse(candidate.getType().toString()),"0",(long)(candidate.getPreference() * 1000),ufrag);
    component.addRemoteCandidate(remoteCandidate);
    startConnectivityEstablishment=true;
  }
  if (startConnectivityEstablishment) {
    for (    IceMediaStream stream : iceAgent.getStreams()) {
      for (      Component component : stream.getComponents()) {
        if (component.getRemoteCandidateCount() < 1) {
          startConnectivityEstablishment=false;
          break;
        }
      }
      if (!startConnectivityEstablishment)       break;
    }
    if (startConnectivityEstablishment) {
      iceAgent.startConnectivityEstablishment();
      return true;
    }
  }
  return false;
}
