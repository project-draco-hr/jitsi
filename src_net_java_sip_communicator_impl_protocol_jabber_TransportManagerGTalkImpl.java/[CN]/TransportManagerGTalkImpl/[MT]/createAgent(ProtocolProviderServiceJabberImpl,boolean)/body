{
  Agent agent=new Agent(CompatibilityMode.GTALK);
  List<StunServerDescriptor> servers=null;
  boolean atLeastOneStunServer=false;
  JabberAccountIDImpl accID=(JabberAccountIDImpl)provider.getAccountID();
  agent.setControlling(controlling);
  servers=requestJingleInfo(provider);
  for (  StunServerDescriptor desc : servers) {
    Transport transport;
    if (desc.getProtocol().equals("ssltcp")) {
      transport=Transport.TCP;
    }
 else {
      transport=Transport.parse(desc.getProtocol());
    }
    TransportAddress addr=new TransportAddress(desc.getAddress(),desc.getPort(),transport);
    if (addr.getAddress() == null) {
      logger.info("Unresolved address for " + addr);
      continue;
    }
    StunCandidateHarvester harvester=null;
    if (desc.isTurnSupported()) {
      logger.info("Google TURN descriptor");
      if (desc.isOldTurn()) {
        logger.info("new Google TURN harvester");
        if (desc.getProtocol().equals("ssltcp")) {
          harvester=new GoogleTurnSSLCandidateHarvester(addr,new String(desc.getUsername()),new String(desc.getPassword()));
        }
 else         harvester=new GoogleTurnCandidateHarvester(addr,new String(desc.getUsername()),new String(desc.getPassword()));
      }
    }
 else {
      if (atLeastOneStunServer)       continue;
      harvester=new StunCandidateHarvester(addr);
      atLeastOneStunServer=true;
      logger.info("Found Google STUN server " + harvester);
    }
    if (harvester != null) {
      agent.addCandidateHarvester(harvester);
    }
  }
  if (!atLeastOneStunServer) {
    if (accID.isUseDefaultStunServer()) {
      TransportAddress addr=new TransportAddress(DEFAULT_STUN_SERVER_ADDRESS,DEFAULT_STUN_SERVER_PORT,Transport.UDP);
      StunCandidateHarvester harvester=new StunCandidateHarvester(addr);
      if (harvester != null) {
        agent.addCandidateHarvester(harvester);
      }
    }
  }
  if (accID.isJingleNodesRelayEnabled()) {
    SmackServiceNode serviceNode=provider.getJingleNodesServiceNode();
    if (serviceNode != null) {
      JingleNodesHarvester harvester=new JingleNodesHarvester(serviceNode);
      if (harvester != null) {
        agent.addCandidateHarvester(harvester);
      }
    }
  }
  if (accID.isUPNPEnabled()) {
    UPNPHarvester harvester=new UPNPHarvester();
    if (harvester != null) {
      agent.addCandidateHarvester(harvester);
    }
  }
  return agent;
}
