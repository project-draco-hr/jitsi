{
  int cycleLen, cyclesPerBatch, up2=0, down2=0;
  S.memZero();
  if (Silk_resampler_structs.RESAMPLER_SUPPORT_ABOVE_48KHZ != 0) {
    if (Fs_Hz_in < 8000 || Fs_Hz_in > 192000 || Fs_Hz_out < 8000 || Fs_Hz_out > 192000) {
      assert(false);
      return -1;
    }
  }
 else {
    if (Fs_Hz_in < 8000 || Fs_Hz_in > 48000 || Fs_Hz_out < 8000 || Fs_Hz_out > 48000) {
      assert(false);
      return -1;
    }
  }
  if (Silk_resampler_structs.RESAMPLER_SUPPORT_ABOVE_48KHZ != 0) {
    if (Fs_Hz_in > 96000) {
      S.nPreDownsamplers=2;
      S.down_pre_function="SKP_Silk_resampler_private_down4";
      S.downPreCB=new DownPreImplDown4();
    }
 else     if (Fs_Hz_in > 48000) {
      S.nPreDownsamplers=1;
      S.down_pre_function="SKP_Silk_resampler_down2";
      S.downPreCB=new DownPreImplDown2();
    }
 else {
      S.nPreDownsamplers=0;
      S.down_pre_function=null;
      S.downPreCB=null;
    }
    if (Fs_Hz_out > 96000) {
      S.nPostUpsamplers=2;
      S.up_post_function="SKP_Silk_resampler_private_up4";
      S.upPostCB=new UpPostImplUp4();
    }
 else     if (Fs_Hz_out > 48000) {
      S.nPostUpsamplers=1;
      S.up_post_function="SKP_Silk_resampler_up2";
      S.upPostCB=new UpPostImplUp2();
    }
 else {
      S.nPostUpsamplers=0;
      S.up_post_function=null;
      S.upPostCB=null;
    }
    if (S.nPreDownsamplers + S.nPostUpsamplers > 0) {
      S.ratio_Q16=((Fs_Hz_out << 13) / Fs_Hz_in) << 3;
      while (Silk_macros.SKP_SMULWW(S.ratio_Q16,Fs_Hz_in) < Fs_Hz_out)       S.ratio_Q16++;
      S.batchSizePrePost=Fs_Hz_in / 100;
      Fs_Hz_in=Fs_Hz_in >> S.nPreDownsamplers;
      Fs_Hz_out=Fs_Hz_out >> S.nPostUpsamplers;
    }
  }
  S.batchSize=Fs_Hz_in / 100;
  if ((S.batchSize * 100 != Fs_Hz_in) || (Fs_Hz_in % 100 != 0)) {
    cycleLen=Fs_Hz_in / gcd(Fs_Hz_in,Fs_Hz_out);
    cyclesPerBatch=Silk_resampler_private.RESAMPLER_MAX_BATCH_SIZE_IN / cycleLen;
    if (cyclesPerBatch == 0) {
      S.batchSize=Silk_resampler_private.RESAMPLER_MAX_BATCH_SIZE_IN;
      assert(false);
    }
 else {
      S.batchSize=cyclesPerBatch * cycleLen;
    }
  }
  if (Fs_Hz_out > Fs_Hz_in) {
    if (Fs_Hz_out == Fs_Hz_in * 2) {
      S.resampler_function="SKP_Silk_resampler_private_up2_HQ_wrapper";
      S.resamplerCB=new ResamplerImplWrapper();
    }
 else {
      S.resampler_function="SKP_Silk_resampler_private_IIR_FIR";
      S.resamplerCB=new ResamplerImplIIRFIR();
      up2=1;
      if (Fs_Hz_in > 24000) {
        S.up2_function="SKP_Silk_resampler_up2";
        S.up2CB=new Up2ImplUp2();
      }
 else {
        S.up2_function="SKP_Silk_resampler_private_up2_HQ";
        S.up2CB=new Up2ImplHQ();
      }
    }
  }
 else   if (Fs_Hz_out < Fs_Hz_in) {
    if (Fs_Hz_out * 4 == Fs_Hz_in * 3) {
      S.FIR_Fracs=3;
      S.Coefs=Silk_resampler_rom.SKP_Silk_Resampler_3_4_COEFS;
      S.resampler_function="SKP_Silk_resampler_private_down_FIR";
      S.resamplerCB=new ResamplerImplDownFIR();
    }
 else     if (Fs_Hz_out * 3 == Fs_Hz_in * 2) {
      S.FIR_Fracs=2;
      S.Coefs=Silk_resampler_rom.SKP_Silk_Resampler_2_3_COEFS;
      S.resampler_function="SKP_Silk_resampler_private_down_FIR";
      S.resamplerCB=new ResamplerImplDownFIR();
    }
 else     if (Fs_Hz_out * 2 == Fs_Hz_in) {
      S.FIR_Fracs=1;
      S.Coefs=Silk_resampler_rom.SKP_Silk_Resampler_1_2_COEFS;
      S.resampler_function="SKP_Silk_resampler_private_down_FIR";
      S.resamplerCB=new ResamplerImplDownFIR();
    }
 else     if (Fs_Hz_out * 8 == Fs_Hz_in * 3) {
      S.FIR_Fracs=3;
      S.Coefs=Silk_resampler_rom.SKP_Silk_Resampler_3_8_COEFS;
      S.resampler_function="SKP_Silk_resampler_private_down_FIR";
      S.resamplerCB=new ResamplerImplDownFIR();
    }
 else     if (Fs_Hz_out * 3 == Fs_Hz_in) {
      S.FIR_Fracs=1;
      S.Coefs=Silk_resampler_rom.SKP_Silk_Resampler_1_3_COEFS;
      S.resampler_function="SKP_Silk_resampler_private_down_FIR";
      S.resamplerCB=new ResamplerImplDownFIR();
    }
 else     if (Fs_Hz_out * 4 == Fs_Hz_in) {
      S.FIR_Fracs=1;
      down2=1;
      S.Coefs=Silk_resampler_rom.SKP_Silk_Resampler_1_2_COEFS;
      S.resampler_function="SKP_Silk_resampler_private_down_FIR";
      S.resamplerCB=new ResamplerImplDownFIR();
    }
 else     if (Fs_Hz_out * 6 == Fs_Hz_in) {
      S.FIR_Fracs=1;
      down2=1;
      S.Coefs=Silk_resampler_rom.SKP_Silk_Resampler_1_3_COEFS;
      S.resampler_function="SKP_Silk_resampler_private_down_FIR";
      S.resamplerCB=new ResamplerImplDownFIR();
    }
 else     if (Fs_Hz_out * 441 == Fs_Hz_in * 80) {
      S.Coefs=Silk_resampler_rom.SKP_Silk_Resampler_80_441_ARMA4_COEFS;
      S.resampler_function="SKP_Silk_resampler_private_IIR_FIR";
      S.resamplerCB=new ResamplerImplIIRFIR();
    }
 else     if (Fs_Hz_out * 441 == Fs_Hz_in * 120) {
      S.Coefs=Silk_resampler_rom.SKP_Silk_Resampler_120_441_ARMA4_COEFS;
      S.resampler_function="SKP_Silk_resampler_private_IIR_FIR";
      S.resamplerCB=new ResamplerImplIIRFIR();
    }
 else     if (Fs_Hz_out * 441 == Fs_Hz_in * 160) {
      S.Coefs=Silk_resampler_rom.SKP_Silk_Resampler_160_441_ARMA4_COEFS;
      S.resampler_function="SKP_Silk_resampler_private_IIR_FIR";
      S.resamplerCB=new ResamplerImplIIRFIR();
    }
 else     if (Fs_Hz_out * 441 == Fs_Hz_in * 240) {
      S.Coefs=Silk_resampler_rom.SKP_Silk_Resampler_240_441_ARMA4_COEFS;
      S.resampler_function="SKP_Silk_resampler_private_IIR_FIR";
      S.resamplerCB=new ResamplerImplIIRFIR();
    }
 else     if (Fs_Hz_out * 441 == Fs_Hz_in * 320) {
      S.Coefs=Silk_resampler_rom.SKP_Silk_Resampler_320_441_ARMA4_COEFS;
      S.resampler_function="SKP_Silk_resampler_private_IIR_FIR";
      S.resamplerCB=new ResamplerImplIIRFIR();
    }
 else {
      S.resampler_function="SKP_Silk_resampler_private_IIR_FIR";
      S.resamplerCB=new ResamplerImplIIRFIR();
      up2=1;
      if (Fs_Hz_in > 24000) {
        S.up2_function="SKP_Silk_resampler_up2";
        S.up2CB=new Up2ImplUp2();
      }
 else {
        S.up2_function="SKP_Silk_resampler_private_up2_HQ";
        S.up2CB=new Up2ImplHQ();
      }
    }
  }
 else {
    S.resampler_function="SKP_Silk_resampler_private_copy";
    S.resamplerCB=new ResamplerImplCopy();
  }
  S.input2x=up2 | down2;
  S.invRatio_Q16=((Fs_Hz_in << 14 + up2 - down2) / Fs_Hz_out) << 2;
  while (Silk_macros.SKP_SMULWW(S.invRatio_Q16,Fs_Hz_out << down2) < (Fs_Hz_in << up2)) {
    S.invRatio_Q16++;
  }
  S.magic_number=123456789;
  return 0;
}
