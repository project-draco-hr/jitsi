{
  dialButton.setEnabled(enable);
  holdButton.setEnabled(enable);
  recordButton.setEnabled(enable);
  localLevel.setEnabled(enable);
  remoteLevel.setEnabled(enable);
  mergeButton.setEnabled(enable);
  List<Call> calls=callConference.getCalls();
  boolean enableConferenceButton=false;
  boolean enableTransferCallButton=!calls.isEmpty();
  boolean enableVideoButtons=false;
  for (  Call call : calls) {
    ProtocolProviderService protocolProvider=call.getProtocolProvider();
    if (!enableConferenceButton && (protocolProvider.getOperationSet(OperationSetTelephonyConferencing.class) != null)) {
      enableConferenceButton=true;
    }
    if (enableTransferCallButton && (protocolProvider.getOperationSet(OperationSetAdvancedTelephony.class) == null)) {
      enableTransferCallButton=false;
    }
    if (!enableVideoButtons && (protocolProvider.getOperationSet(OperationSetVideoTelephony.class) != null)) {
      enableVideoButtons=true;
    }
  }
  if (enableConferenceButton && (conferenceButton != null))   conferenceButton.setEnabled(enable);
  if (videoButton != null)   videoButton.setEnabled(enable);
  if (!isLastConference) {
    List<CallPeer> callPeers=callConference.getCallPeers();
    if (callPeers.size() > 0) {
      CallPeer callPeer=callPeers.get(0);
      CallPeerState callPeerState=callPeer.getState();
      enableButtonsWhileOnHold(callPeerState == CallPeerState.ON_HOLD_LOCALLY || callPeerState == CallPeerState.ON_HOLD_MUTUALLY || callPeerState == CallPeerState.ON_HOLD_REMOTELY);
    }
    if (enableTransferCallButton && (transferCallButton != null))     transferCallButton.setEnabled(enable);
    if (enableVideoButtons) {
      if (fullScreenButton != null)       fullScreenButton.setEnabled(enable);
      if (desktopSharingButton != null)       desktopSharingButton.setEnabled(enable);
    }
  }
}
