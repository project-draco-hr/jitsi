{
  JButton button=(JButton)evt.getSource();
  String buttonName=button.getName();
  if (buttonName.equals(MERGE_BUTTON)) {
    CallManager.mergeExistingCalls(callConference,CallManager.getInProgressCalls());
  }
 else   if (buttonName.equals(DIAL_BUTTON)) {
    if (dialpadDialog == null)     dialpadDialog=this.getDialpadDialog();
    if (!dialpadDialog.isVisible()) {
      dialpadDialog.pack();
      Point location=new Point(button.getX(),button.getY() + button.getHeight());
      SwingUtilities.convertPointToScreen(location,button.getParent());
      dialpadDialog.setLocation((int)location.getX() + 2,(int)location.getY() + 2);
      dialpadDialog.addWindowFocusListener(dialpadDialog);
      dialpadDialog.setVisible(true);
    }
 else {
      dialpadDialog.removeWindowFocusListener(dialpadDialog);
      dialpadDialog.setVisible(false);
    }
  }
 else   if (buttonName.equals(CONFERENCE_BUTTON)) {
    ConferenceInviteDialog inviteDialog;
    if (callConference.isJitsiVideobridge()) {
      inviteDialog=new ConferenceInviteDialog(callConference,callConference.getCalls().get(0).getProtocolProvider(),true);
    }
 else     inviteDialog=new ConferenceInviteDialog(callConference);
    inviteDialog.setVisible(true);
  }
 else   if (buttonName.equals(CHAT_BUTTON)) {
    List<Contact> imCapableCallPeers=getIMCapableCallPeers(1);
    if (imCapableCallPeers.size() == 1) {
      Contact contact=imCapableCallPeers.get(0);
      MetaContact metaContact=GuiActivator.getContactListService().findMetaContactByContact(contact);
      GuiActivator.getUIService().getChatWindowManager().startChat(metaContact);
    }
  }
 else   if (buttonName.equals(INFO_BUTTON)) {
    if (callInfoFrame == null) {
      callInfoFrame=new CallInfoFrame(callConference);
      addCallTitleListener(callInfoFrame);
    }
    callInfoFrame.setVisible(callInfoFrame.hasCallInfo() && !callInfoFrame.isVisible());
  }
 else   if (buttonName.equals(CRM_BUTTON)) {
    String command=GuiActivator.getConfigurationService().getString("net.java.sip.communicator.impl.gui.main.call.CRM_COMMAND");
    if (command == null) {
      return;
    }
    List<CallPeer> callPeers=callConference.getCallPeers();
    if (callPeers.isEmpty()) {
      logger.info("No CallPeer for CRM application found.");
      return;
    }
    command=String.format(command,callPeers.get(0).getAddress());
    try {
      logger.info("Launching CRM application: " + command);
      Runtime.getRuntime().exec(command);
    }
 catch (    IOException e) {
      logger.error("Unable launch CRM application",e);
    }
  }
}
