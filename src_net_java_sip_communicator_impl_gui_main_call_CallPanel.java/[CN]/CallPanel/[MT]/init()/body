{
  hangupButton=new SIPCommButton(ImageLoader.getImage(ImageLoader.HANGUP_BUTTON_BG));
  holdButton=new HoldButton(call);
  recordButton=new RecordButton(call);
  videoButton=new LocalVideoButton(call);
  showHideVideoButton=new ShowHideVideoButton(call);
  resizeVideoButton=new ResizeVideoButton(call);
  showHideVideoButton.setPeerRenderer(((CallRenderer)callPanel).getCallPeerRenderer(call.getCallPeers().next()));
  videoButton.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      boolean isVideoSelected=videoButton.isSelected();
      if (isVideoSelected)       settingsPanel.add(showHideVideoButton,GuiUtils.getComponentIndex(videoButton,settingsPanel) + 1);
 else       settingsPanel.remove(showHideVideoButton);
      settingsPanel.revalidate();
      settingsPanel.repaint();
      showHideVideoButton.setEnabled(isVideoSelected);
      showHideVideoButton.setSelected(isVideoSelected);
    }
  }
);
  desktopSharingButton=new DesktopSharingButton(call);
  transferCallButton=new TransferCallButton(call);
  fullScreenButton=new FullScreenButton(this);
  localLevel=new InputVolumeControlButton(call,ImageLoader.MICROPHONE,ImageLoader.MUTE_BUTTON,false,true,false);
  remoteLevel=new OutputVolumeControlButton(ImageLoader.VOLUME_CONTROL_BUTTON,false,true);
  dialButton.setName(DIAL_BUTTON);
  dialButton.setToolTipText(GuiActivator.getResources().getI18NString("service.gui.DIALPAD"));
  dialButton.addActionListener(this);
  conferenceButton.setName(CONFERENCE_BUTTON);
  conferenceButton.setToolTipText(GuiActivator.getResources().getI18NString("service.gui.CREATE_CONFERENCE_CALL"));
  conferenceButton.addActionListener(this);
  hangupButton.setName(HANGUP_BUTTON);
  hangupButton.setToolTipText(GuiActivator.getResources().getI18NString("service.gui.HANG_UP"));
  hangupButton.addActionListener(this);
  dialButton.setEnabled(false);
  conferenceButton.setEnabled(false);
  holdButton.setEnabled(false);
  recordButton.setEnabled(false);
  settingsPanel.add(dialButton);
  settingsPanel.add(conferenceButton);
  settingsPanel.add(holdButton);
  settingsPanel.add(recordButton);
  if (!isLastConference) {
    transferCallButton.setEnabled(false);
    desktopSharingButton.setEnabled(false);
    videoButton.setEnabled(false);
    showHideVideoButton.setEnabled(false);
    resizeVideoButton.setEnabled(false);
    fullScreenButton.setEnabled(false);
    addOneToOneSpecificComponents();
  }
 else {
    localLevel.setEnabled(false);
    remoteLevel.setEnabled(false);
    addConferenceSpecificComponents();
  }
  dtmfHandler=new DTMFHandler(this);
  JComponent bottomBar=createBottomBar();
  add(callPanel,BorderLayout.CENTER);
  add(bottomBar,BorderLayout.SOUTH);
}
