{
  super(new BorderLayout());
  this.callConference=callConference;
  this.callWindow=callWindow;
  settingsPanel=CallPeerRendererUtils.createButtonBar(false,null);
  Call call=this.callConference.getCalls().get(0);
  holdButton=new HoldButton(call);
  recordButton=new RecordButton(call);
  videoButton=new LocalVideoButton(call);
  showHideVideoButton=new ShowHideVideoButton(call);
  desktopSharingButton=new DesktopSharingButton(call);
  transferCallButton=new TransferCallButton(call);
  fullScreenButton=new FullScreenButton(this,false);
  chatButton=new CallToolBarButton(ImageLoader.getImage(ImageLoader.CHAT_BUTTON_SMALL_WHITE),CHAT_BUTTON,GuiActivator.getResources().getI18NString("service.gui.CHAT"));
  localLevel=new InputVolumeControlButton(call,ImageLoader.MICROPHONE,ImageLoader.MUTE_BUTTON,false,true,false);
  remoteLevel=new OutputVolumeControlButton(ImageLoader.VOLUME_CONTROL_BUTTON,false,true).getComponent();
  this.callDurationTimer=new Timer(1000,new CallTimerListener());
  this.callDurationTimer.setRepeats(true);
  this.setCallTitle(0);
  this.isLastConference=isConference();
  if (isLastConference) {
    enableConferenceInterface(CallManager.isVideoStreaming(callConference));
  }
 else {
    List<CallPeer> callPeers=callConference.getCallPeers();
    CallPeer callPeer=null;
    if (!callPeers.isEmpty()) {
      callPeer=callPeers.get(0);
      this.callPanel=new OneToOneCallPanel(this,callPeer);
    }
  }
  callConference.addCallChangeListener(this);
  callConference.addPropertyChangeListener(callConferencePropertyChangeListener);
  for (  CallPeer callPeer : callConference.getCallPeers())   callPeer.addCallPeerConferenceListener(this);
  initToolBar();
  initPluginComponents();
}
