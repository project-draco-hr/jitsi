{
  Vector<String> renderers=PlugInManager.getPlugInList(null,null,PlugInManager.RENDERER);
  boolean commit=false;
  for (  String customRenderer : CUSTOM_RENDERERS) {
    if ((renderers == null) || !renderers.contains(customRenderer)) {
      try {
        Renderer customRendererInstance=(Renderer)Class.forName(customRenderer).newInstance();
        PlugInManager.addPlugIn(customRenderer,customRendererInstance.getSupportedInputFormats(),null,PlugInManager.RENDERER);
        commit=true;
      }
 catch (      Throwable t) {
        logger.error("Failed to register custom Renderer " + customRenderer + " with JMF.");
      }
    }
  }
  int pluginType=PlugInManager.RENDERER;
  Vector<String> plugins=PlugInManager.getPlugInList(null,null,pluginType);
  if (plugins != null) {
    int pluginCount=plugins.size();
    int pluginBeginIndex=0;
    String preferred="net.java.sip.communicator.impl.neomedia.";
    for (int pluginIndex=pluginCount - 1; pluginIndex >= pluginBeginIndex; ) {
      String plugin=plugins.get(pluginIndex);
      if (plugin.startsWith(preferred)) {
        plugins.remove(pluginIndex);
        plugins.add(0,plugin);
        pluginBeginIndex++;
        commit=true;
      }
 else       pluginIndex--;
    }
    PlugInManager.setPlugInList(plugins,pluginType);
    if (logger.isTraceEnabled())     logger.trace("Reordered plug-in list:" + plugins);
  }
  if (commit) {
    try {
      PlugInManager.commit();
    }
 catch (    IOException ioex) {
      logger.warn("Failed to commit changes to the JMF plug-in list.");
    }
  }
}
