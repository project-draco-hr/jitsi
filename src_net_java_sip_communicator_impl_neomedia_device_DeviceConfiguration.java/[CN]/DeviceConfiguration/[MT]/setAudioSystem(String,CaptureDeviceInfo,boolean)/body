{
  ConfigurationService config=NeomediaActivator.getConfigurationService();
  audioSystem=name;
  if (name.equals(AUDIO_SYSTEM_NONE)) {
    setAudioCaptureDevice(null,save);
    setAudioNotifyDevice(null,save);
    setAudioPlaybackDevice(null,save);
  }
 else   if (name.equals(AUDIO_SYSTEM_JAVASOUND)) {
    setAudioNotifyDevice(null,save);
    setAudioPlaybackDevice(null,save);
    if (captureDevice != null)     setAudioCaptureDevice(captureDevice,save);
 else {
      CaptureDeviceInfo[] audioCaptureDevices=getAvailableAudioCaptureDevices();
      for (      CaptureDeviceInfo captureDeviceInfo : audioCaptureDevices) {
        if (captureDeviceInfo.getLocator().getProtocol().equals("javasound")) {
          setAudioCaptureDevice(captureDeviceInfo,save);
          break;
        }
      }
    }
    if (audioCaptureDevice != null) {
      removePortAudioRenderer();
      initJavaSoundRenderer();
    }
  }
 else   if (name.equals(AUDIO_SYSTEM_PORTAUDIO)) {
    String audioNotifyDevName=config.getString(PROP_AUDIO_NOTIFY_DEVICE);
    String audioPlaybackDevName=config.getString(PROP_AUDIO_PLAYBACK_DEVICE);
    if (logger.isDebugEnabled()) {
      logger.debug("Portaudio: Found stored notify device: [" + audioNotifyDevName + "]");
      logger.debug("Portaudio: Found stored playback device: [" + audioPlaybackDevName + "]");
    }
    setAudioPlaybackDevice(PortAudioAuto.defaultPlaybackDevice,save);
    setAudioNotifyDevice(PortAudioAuto.defaultPlaybackDevice,save);
    if (captureDevice != null) {
      this.audioCaptureDevice=captureDevice;
    }
 else     setAudioCaptureDevice(PortAudioAuto.defaultCaptureDevice,save);
    if (audioNotifyDevName != null) {
      for (      CaptureDeviceInfo captureDeviceInfo : PortAudioAuto.playbackDevices) {
        if (audioNotifyDevName.equals(captureDeviceInfo.getName())) {
          setAudioNotifyDevice(captureDeviceInfo,save);
          break;
        }
      }
    }
    if (audioPlaybackDevName != null) {
      for (      CaptureDeviceInfo captureDeviceInfo : PortAudioAuto.playbackDevices) {
        if (audioPlaybackDevName.equals(captureDeviceInfo.getName())) {
          setAudioPlaybackDevice(captureDeviceInfo,save);
          break;
        }
      }
    }
    return;
  }
 else {
    logger.error("Unknown audio system! Name:" + name);
    audioSystem=null;
  }
  if (save) {
    config.setProperty(PROP_AUDIO_DEVICE_IS_DISABLED,audioCaptureDevice == null);
  }
}
