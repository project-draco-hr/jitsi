{
  Collection<ServiceReference<PluginComponentFactory>> serRefs;
  String osgiFilter="(" + net.java.sip.communicator.service.gui.Container.CONTAINER_ID + "="+ net.java.sip.communicator.service.gui.Container.CONTAINER_CHAT_WRITE_PANEL.getID()+ ")";
  try {
    serRefs=GuiActivator.bundleContext.getServiceReferences(PluginComponentFactory.class,osgiFilter);
  }
 catch (  InvalidSyntaxException ex) {
    serRefs=null;
    logger.error("Could not obtain plugin reference.",ex);
  }
  if ((serRefs != null) && !serRefs.isEmpty()) {
    for (    ServiceReference<PluginComponentFactory> serRef : serRefs) {
      PluginComponentFactory factory=GuiActivator.bundleContext.getService(serRef);
      PluginComponent component=factory.getPluginComponentInstance(this);
      ChatSession chatSession=chatPanel.getChatSession();
      if (chatSession != null) {
        ChatTransport currentTransport=chatSession.getCurrentChatTransport();
        Object currentDescriptor=currentTransport.getDescriptor();
        if (currentDescriptor instanceof Contact) {
          Contact contact=(Contact)currentDescriptor;
          component.setCurrentContact(contact,currentTransport.getResourceName());
        }
      }
      Object c=component.getComponent();
      if (c == null)       continue;
      GridBagConstraints constraints=new GridBagConstraints();
      constraints.anchor=GridBagConstraints.NORTHEAST;
      constraints.fill=GridBagConstraints.NONE;
      constraints.gridy=0;
      constraints.gridheight=1;
      constraints.weightx=0f;
      constraints.weighty=0f;
      constraints.insets=new Insets(0,3,0,0);
      centerPanel.add((Component)c,constraints);
    }
  }
  GuiActivator.getUIService().addPluginComponentListener(this);
  this.centerPanel.repaint();
}
