{
  this.peerAddress=address;
  this.call=owningCall;
  this.peerID=String.valueOf(System.currentTimeMillis()) + String.valueOf(hashCode());
  final Random random=new Random();
  Timer timer=new Timer(false);
  timer.scheduleAtFixedRate(new TimerTask(){
    @Override public void run(){
      fireStreamSoundLevelEvent(random.nextInt(255));
    }
  }
,500,100);
  if (owningCall.getCallPeerCount() > 1) {
    this.setConferenceFocus(true);
    final ConferenceMemberGibberishImpl member1=new ConferenceMemberGibberishImpl(this);
    member1.setDisplayName("Dragancho");
    this.addConferenceMember(member1);
    final ConferenceMemberGibberishImpl member2=new ConferenceMemberGibberishImpl(this);
    member2.setDisplayName("Ivancho");
    this.addConferenceMember(member2);
    Timer timer1=new Timer(false);
    timer1.scheduleAtFixedRate(new TimerTask(){
      @Override public void run(){
        fireConferenceMembersSoundLevelEvent(new HashMap<ConferenceMember,Integer>(){
{
            put(member1,new Integer(random.nextInt(255)));
            put(member2,new Integer(random.nextInt(255)));
          }
        }
);
      }
    }
,500,100);
  }
}
