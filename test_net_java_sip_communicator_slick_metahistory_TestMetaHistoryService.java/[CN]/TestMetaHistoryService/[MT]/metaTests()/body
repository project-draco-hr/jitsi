{
  Collection rs=metaHistoryService.findByStartDate(new String[]{MessageHistoryService.class.getName(),FileHistoryService.class.getName(),CallHistoryService.class.getName()},testMetaContact,controlDate1);
  assertEquals("Records must be 12",12,rs.size());
  assertEquals("Filetransfers must be 4",4,getFileRecords(rs).size());
  assertEquals("CallRecords must be 4",4,getCalls(rs).size());
  assertEquals("MessageRecords must be 4",4,getMessages(rs).size());
  rs=metaHistoryService.findByEndDate(new String[]{MessageHistoryService.class.getName(),FileHistoryService.class.getName(),CallHistoryService.class.getName()},testMetaContact,controlDate1);
  assertTrue("Records must be atleast",rs.size() >= 6);
  rs=metaHistoryService.findByPeriod(new String[]{MessageHistoryService.class.getName(),FileHistoryService.class.getName(),CallHistoryService.class.getName()},testMetaContact,controlDate1,controlDate2);
  assertEquals("Records must be 6",6,rs.size());
  assertEquals("Filetransfers must be 2",2,getFileRecords(rs).size());
  assertEquals("CallRecords must be 2",2,getCalls(rs).size());
  assertEquals("MessageRecords must be 2",2,getMessages(rs).size());
  rs=metaHistoryService.findByPeriod(new String[]{MessageHistoryService.class.getName(),FileHistoryService.class.getName(),CallHistoryService.class.getName()},testMetaContact,controlDate1,controlDate2,new String[]{"t4","participant_address_4","word4"});
  assertEquals("Records must be 1",1,rs.size());
  assertEquals("Filetransfers must be 0",0,getFileRecords(rs).size());
  assertEquals("CallRecords must be 0",0,getCalls(rs).size());
  assertEquals("MessageRecords must be 1",1,getMessages(rs).size());
  rs=metaHistoryService.findByPeriod(new String[]{MessageHistoryService.class.getName(),FileHistoryService.class.getName(),CallHistoryService.class.getName()},testMetaContact,controlDate1,controlDate2,new String[]{"T4","participant_address_4","word4"},true);
  assertEquals("Records must be 0",0,rs.size());
  rs=metaHistoryService.findByKeyword(new String[]{MessageHistoryService.class.getName(),FileHistoryService.class.getName(),CallHistoryService.class.getName()},testMetaContact,"T1");
  assertTrue("Records must be atleast 2",rs.size() >= 2);
  rs=metaHistoryService.findByKeyword(new String[]{MessageHistoryService.class.getName(),FileHistoryService.class.getName(),CallHistoryService.class.getName()},testMetaContact,"Word6",true);
  assertEquals("Records must be 0",0,rs.size());
  rs=metaHistoryService.findByKeywords(new String[]{MessageHistoryService.class.getName(),FileHistoryService.class.getName(),CallHistoryService.class.getName()},testMetaContact,new String[]{"t4","participant_address_4","word4"});
  assertTrue("Records must be atleast 1",rs.size() >= 1);
  rs=metaHistoryService.findByKeywords(new String[]{MessageHistoryService.class.getName(),FileHistoryService.class.getName(),CallHistoryService.class.getName()},testMetaContact,new String[]{"T4","participant_address_4","word4"},true);
  assertEquals("Records must be 0",0,rs.size());
  rs=metaHistoryService.findLast(new String[]{MessageHistoryService.class.getName(),FileHistoryService.class.getName(),CallHistoryService.class.getName()},testMetaContact,4);
  assertEquals("Records must be 4",4,rs.size());
  assertEquals("Filetransfers must be 2",2,getFileRecords(rs).size());
  assertEquals("CallRecords must be 0",0,getCalls(rs).size());
  assertEquals("MessageRecords must be 2",2,getMessages(rs).size());
  rs=metaHistoryService.findFirstMessagesAfter(new String[]{MessageHistoryService.class.getName(),FileHistoryService.class.getName(),CallHistoryService.class.getName()},testMetaContact,controlDate1,2);
  assertEquals("Records must be 2",2,rs.size());
  assertEquals("Filetransfers must be 0",0,getFileRecords(rs).size());
  assertEquals("CallRecords must be 2",2,getCalls(rs).size());
  assertEquals("MessageRecords must be 0",0,getMessages(rs).size());
  rs=metaHistoryService.findLastMessagesBefore(new String[]{MessageHistoryService.class.getName(),FileHistoryService.class.getName(),CallHistoryService.class.getName()},testMetaContact,controlDate1,2);
  assertEquals("Records must be 2",2,rs.size());
  assertEquals("Filetransfers must be 0",0,getFileRecords(rs).size());
  assertEquals("CallRecords must be 0",0,getCalls(rs).size());
  assertEquals("MessageRecords must be 2",2,getMessages(rs).size());
}
