{
  CoinIQ coinIQ=(CoinIQ)packet;
  String errorMessage=null;
  IQ.Type type=coinIQ.getType();
  if (type == IQ.Type.SET) {
    IQ ack=IQ.createResultIQ(coinIQ);
    parentProvider.getConnection().sendPacket(ack);
  }
 else   if (type == IQ.Type.ERROR) {
    XMPPError error=coinIQ.getError();
    if (error != null) {
      String msg=error.getMessage();
      errorMessage=((msg != null) ? (msg + " ") : "") + "Error code: " + error.getCode();
    }
    logger.error("Received error in COIN packet. " + errorMessage);
  }
  String sid=coinIQ.getSID();
  if (sid != null) {
    CallPeerJabberImpl callPeer=getBasicTelephony().getActiveCallsRepository().findCallPeer(sid);
    if (callPeer != null) {
      if (type == IQ.Type.ERROR) {
        callPeer.fireConferenceMemberErrorEvent(errorMessage);
        return;
      }
      if (logger.isDebugEnabled())       logger.debug("Processing COIN from " + coinIQ.getFrom() + " (version="+ coinIQ.getVersion()+ ")");
      handleCoin(callPeer,coinIQ);
    }
  }
}
