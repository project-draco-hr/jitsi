{
  this.dialPadPanel.setOpaque(false);
  this.setBorder(BorderFactory.createEmptyBorder(10,0,10,0));
  int width=GuiActivator.getResources().getSettingsInt("impl.gui.DIAL_PAD_WIDTH");
  int height=GuiActivator.getResources().getSettingsInt("impl.gui.DIAL_PAD_HEIGHT");
  this.dialPadPanel.setPreferredSize(new Dimension(width,height));
  Image bgImage=ImageLoader.getImage(ImageLoader.DIAL_BUTTON_BG);
  for (int i=0; i < availableTones.length; i++) {
    DialButtonInfo info=availableTones[i];
    if (info.imageID == null)     continue;
    dialPadPanel.add(createDialButton(bgImage,info.imageID,info.keyChar));
  }
  TransparentPanel centerPanel=new TransparentPanel();
  centerPanel.add(dialPadPanel,BorderLayout.CENTER);
  TransparentPanel southPanel=new TransparentPanel(new GridLayout(1,4));
  deleteButton.setName(DELETE);
  deleteButton.addMouseListener(this);
  southPanel.add(deleteButton);
  backButton.setName(BACK);
  backButton.addMouseListener(this);
  southPanel.add(backButton);
  southPanel.add(Box.createHorizontalStrut(10));
  callButton.setName(CALL);
  callButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String searchText=searchField.getText();
      if (searchText == null || searchText.isEmpty())       return;
      List<ProtocolProviderService> telephonyProviders=CallManager.getTelephonyProviders();
      if (telephonyProviders.size() == 1) {
        CallManager.createCall(telephonyProviders.get(0),searchText);
      }
 else       if (telephonyProviders.size() > 1) {
        ChooseCallAccountPopupMenu chooseAccountDialog=new ChooseCallAccountPopupMenu(callContact,searchText,telephonyProviders);
        chooseAccountDialog.showPopupMenu();
      }
    }
  }
);
  southPanel.add(callButton);
  this.add(centerPanel,BorderLayout.CENTER);
  this.add(southPanel,BorderLayout.SOUTH);
}
