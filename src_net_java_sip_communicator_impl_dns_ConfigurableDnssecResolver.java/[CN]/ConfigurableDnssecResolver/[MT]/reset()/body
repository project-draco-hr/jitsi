{
  String forwarders=DnsUtilActivator.getConfigurationService().getString(DnsUtilActivator.PNAME_DNSSEC_NAMESERVERS);
  if (!StringUtils.isNullOrEmpty(forwarders,true)) {
    if (logger.isTraceEnabled()) {
      logger.trace("Setting DNSSEC forwarders to: " + forwarders);
    }
synchronized (Lookup.class) {
      Lookup.refreshDefault();
      String[] fwds=forwarders.split(",");
      Resolver[] rs=headResolver.getResolvers();
      for (      Resolver r : rs) {
        headResolver.deleteResolver(r);
      }
      for (      String fwd : fwds) {
        try {
          SimpleResolver sr=new SimpleResolver(fwd);
          sr.setEDNS(0,0,ExtendedFlags.DO,null);
          sr.setIgnoreTruncation(false);
          headResolver.addResolver(sr);
        }
 catch (        UnknownHostException e) {
          logger.error("Invalid forwarder, ignoring",e);
        }
      }
      Lookup.setDefaultResolver(this);
    }
  }
  StringBuilder sb=new StringBuilder();
  for (int i=1; ; i++) {
    String anchor=DnsUtilActivator.getResources().getSettingsString("net.java.sip.communicator.util.dns.DS_ROOT." + i);
    if (anchor == null) {
      break;
    }
    sb.append(anchor);
    sb.append('\n');
  }
  try {
    super.loadTrustAnchors(new ByteArrayInputStream(sb.toString().getBytes("ASCII")));
  }
 catch (  IOException e) {
    logger.error("Could not load the trust anchors",e);
  }
  if (logger.isTraceEnabled())   logger.trace("Loaded trust anchors " + sb.toString());
}
