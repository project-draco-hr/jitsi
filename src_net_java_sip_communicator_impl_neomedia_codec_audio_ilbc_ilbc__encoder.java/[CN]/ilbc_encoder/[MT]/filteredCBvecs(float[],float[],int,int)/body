{
  int i, j, k;
  int pp, pp1;
  float tempbuff2[];
  int pos;
  tempbuff2=new float[ilbc_constants.CB_MEML + ilbc_constants.CB_FILTERLEN];
  for (i=0; i < ilbc_constants.CB_HALFFILTERLEN; i++)   tempbuff2[i]=0.0f;
  System.arraycopy(mem,mem_idx,tempbuff2,ilbc_constants.CB_HALFFILTERLEN - 1,lMem);
  for (i=lMem + ilbc_constants.CB_HALFFILTERLEN - 1; i < lMem + ilbc_constants.CB_FILTERLEN; i++)   tempbuff2[i]=0.0f;
  pos=0;
  for (i=0; i < lMem; i++)   cbvectors[i]=0;
  for (k=0; k < lMem; k++) {
    pp=k;
    pp1=ilbc_constants.CB_FILTERLEN - 1;
    for (j=0; j < ilbc_constants.CB_FILTERLEN; j++) {
      cbvectors[pos]+=tempbuff2[pp] * ilbc_constants.cbfiltersTbl[pp1];
      pp++;
      pp1--;
    }
    pos++;
  }
}
