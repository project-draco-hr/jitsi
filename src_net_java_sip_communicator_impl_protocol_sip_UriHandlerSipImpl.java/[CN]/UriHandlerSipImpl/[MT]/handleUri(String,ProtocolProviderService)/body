{
  if (uri != null)   uri=uri.replace("sip://","sip:");
  OperationSetBasicTelephony<?> telephonyOpSet=provider.getOperationSet(OperationSetBasicTelephony.class);
  OperationSetVideoTelephony videoTelephonyOpSet=provider.getOperationSet(OperationSetVideoTelephony.class);
  boolean videoCall=false;
  if (videoTelephonyOpSet != null && uri.contains("?")) {
    String params=uri.substring(uri.indexOf('?') + 1);
    uri=uri.substring(0,uri.indexOf('?'));
    StringTokenizer paramTokens=new StringTokenizer(params,"&");
    while (paramTokens.hasMoreTokens()) {
      String tok=paramTokens.nextToken();
      String[] keyValue=tok.split("\\=");
      if (keyValue.length == 2 && keyValue[0].equalsIgnoreCase("video") && keyValue[1].equalsIgnoreCase("true"))       videoCall=true;
    }
  }
  try {
    if (videoCall)     videoTelephonyOpSet.createVideoCall(uri);
 else     telephonyOpSet.createCall(uri);
  }
 catch (  OperationFailedException exc) {
    boolean handled=false;
    if (exc.getErrorCode() == OperationFailedException.PROVIDER_NOT_REGISTERED) {
      handled=promptForRegistration(uri,provider);
    }
    if (!handled) {
      showErrorMessage("Failed to create a call to " + uri,exc);
    }
  }
catch (  ParseException exc) {
    showErrorMessage(uri + " does not appear to be a valid SIP address",exc);
  }
}
