{
  logger.trace("MESSAGE RECEIVED from contact: " + evt.getSourceContact().getAddress());
  Contact protocolContact=evt.getSourceContact();
  Date date=evt.getTimestamp();
  Message message=evt.getSourceMessage();
  int eventType=evt.getEventType();
  MetaContact metaContact=mainFrame.getContactList().findMetaContactByContact(protocolContact);
  if (metaContact != null) {
    ContactListModel clistModel=(ContactListModel)contactList.getModel();
    clistModel.addActiveContact(metaContact);
    contactList.refreshContact(metaContact);
    ChatPanel chatPanel=chatWindowManager.getContactChat(metaContact,protocolContact,message.getMessageUID());
    String messageType=null;
    if (eventType == MessageReceivedEvent.CONVERSATION_MESSAGE_RECEIVED) {
      messageType=Constants.INCOMING_MESSAGE;
    }
 else     if (eventType == MessageReceivedEvent.SYSTEM_MESSAGE_RECEIVED) {
      messageType=Constants.SYSTEM_MESSAGE;
    }
    chatPanel.processMessage(protocolContact.getDisplayName(),date,messageType,message.getContent(),message.getContentType());
    chatWindowManager.openChat(chatPanel,false);
    String title=Messages.getI18NString("messageReceived").getText() + " " + evt.getSourceContact().getDisplayName();
    NotificationManager.fireNotification(NotificationManager.INCOMING_MESSAGE,title,message.getContent());
    chatPanel.treatReceivedMessage(protocolContact);
  }
 else {
    logger.trace("MetaContact not found for protocol contact: " + protocolContact + ".");
  }
}
