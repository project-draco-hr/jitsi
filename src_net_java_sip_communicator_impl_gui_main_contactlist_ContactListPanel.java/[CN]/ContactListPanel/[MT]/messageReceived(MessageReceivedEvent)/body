{
  logger.trace("MESSAGE RECEIVED from contact: " + evt.getSourceContact().getAddress());
  Contact protocolContact=evt.getSourceContact();
  Date date=evt.getTimestamp();
  Message message=evt.getSourceMessage();
  MetaContact metaContact=mainFrame.getContactList().findMetaContactByContact(protocolContact);
  ChatPanel chatPanel;
  if (!Constants.TABBED_CHAT_WINDOW) {
    if (chatWindowManager.containsContactChat(metaContact)) {
      chatPanel=chatWindowManager.getContactChat(metaContact);
      chatPanel.processMessage(protocolContact.getDisplayName(),date,Constants.INCOMING_MESSAGE,message.getContent());
    }
 else {
      chatPanel=chatWindowManager.createChat(metaContact,protocolContact);
      chatPanel.processMessage(protocolContact.getDisplayName(),date,Constants.INCOMING_MESSAGE,message.getContent());
    }
  }
 else {
    if (!chatWindowManager.containsContactChat(metaContact)) {
      logger.trace("MESSAGE RECEIVED: create new chat for contact: " + evt.getSourceContact().getAddress());
      chatPanel=chatWindowManager.createChat(metaContact,protocolContact);
      logger.trace("MESSAGE RECEIVED: process message in chat for contact: " + evt.getSourceContact().getAddress());
      chatPanel.processMessage(protocolContact.getDisplayName(),date,Constants.INCOMING_MESSAGE,message.getContent());
    }
 else {
      logger.trace("MESSAGE RECEIVED: get existing chat for contact: " + evt.getSourceContact().getAddress());
      chatPanel=chatWindowManager.getContactChat(metaContact);
      logger.trace("MESSAGE RECEIVED: process message in chat for contact: " + evt.getSourceContact().getAddress());
      chatPanel.processMessage(protocolContact.getDisplayName(),date,Constants.INCOMING_MESSAGE,message.getContent());
    }
  }
  chatWindowManager.openChat(metaContact,false);
  GuiActivator.getAudioNotifier().createAudio(Sounds.INCOMING_MESSAGE).play();
  if (!chatPanel.getProtocolContact().getProtocolProvider().equals(protocolContact.getProtocolProvider())) {
    chatPanel.setProtocolContact(protocolContact);
  }
}
