{
  int k;
  for (k=0; k < Silk_define.NB_SUBFR; k++) {
    ind[k]=Silk_macros.SKP_SMULWB(SCALE_Q16,Silk_lin2log.SKP_Silk_lin2log(gain_Q16[k]) - OFFSET);
    if (ind[k] < prev_ind[0]) {
      ind[k]++;
    }
    if (k == 0 && conditional == 0) {
      ind[k]=Silk_SigProc_FIX.SKP_LIMIT_int(ind[k],0,Silk_define.N_LEVELS_QGAIN - 1);
      ind[k]=Math.max(ind[k],prev_ind[0] + Silk_define.MIN_DELTA_GAIN_QUANT);
      prev_ind[0]=ind[k];
    }
 else {
      ind[k]=Silk_SigProc_FIX.SKP_LIMIT_int(ind[k] - prev_ind[0],Silk_define.MIN_DELTA_GAIN_QUANT,Silk_define.MAX_DELTA_GAIN_QUANT);
      prev_ind[0]+=ind[k];
      ind[k]-=Silk_define.MIN_DELTA_GAIN_QUANT;
    }
    gain_Q16[k]=Silk_log2lin.SKP_Silk_log2lin(Math.min(Silk_macros.SKP_SMULWB(INV_SCALE_Q16,prev_ind[0]) + OFFSET,3967));
  }
}
