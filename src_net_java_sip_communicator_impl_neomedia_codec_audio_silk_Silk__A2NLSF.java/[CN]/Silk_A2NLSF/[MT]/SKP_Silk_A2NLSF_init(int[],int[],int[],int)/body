{
  int k;
  P[dd]=1 << QPoly;
  Q[dd]=1 << QPoly;
  for (k=0; k < dd; k++) {
    if (QPoly < 16) {
      P[k]=Silk_SigProc_FIX.SKP_RSHIFT_ROUND(-a_Q16[dd - k - 1] - a_Q16[dd + k],16 - QPoly);
      Q[k]=Silk_SigProc_FIX.SKP_RSHIFT_ROUND(-a_Q16[dd - k - 1] + a_Q16[dd + k],16 - QPoly);
    }
 else     if (QPoly == 16) {
      P[k]=-a_Q16[dd - k - 1] - a_Q16[dd + k];
      Q[k]=-a_Q16[dd - k - 1] + a_Q16[dd + k];
    }
 else {
      P[k]=(-a_Q16[dd - k - 1] - a_Q16[dd + k]) << (QPoly - 16);
      Q[k]=(-a_Q16[dd - k - 1] + a_Q16[dd + k]) << (QPoly - 16);
    }
  }
  for (k=dd; k > 0; k--) {
    P[k - 1]-=P[k];
    Q[k - 1]+=Q[k];
  }
  SKP_Silk_A2NLSF_trans_poly(P,dd);
  SKP_Silk_A2NLSF_trans_poly(Q,dd);
}
