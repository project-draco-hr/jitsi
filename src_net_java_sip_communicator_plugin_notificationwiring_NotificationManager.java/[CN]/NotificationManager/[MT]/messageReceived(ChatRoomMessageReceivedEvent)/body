{
  try {
    ChatRoom sourceChatRoom=evt.getSourceChatRoom();
    ChatRoomMember sourceMember=evt.getSourceChatRoomMember();
    boolean fireChatNotification;
    final Message sourceMsg=evt.getMessage();
    String messageContent=sourceMsg.getContent();
    if (sourceChatRoom.isSystem() || isPrivate(sourceChatRoom) || (messageContent == null))     fireChatNotification=true;
 else {
      String nickname=sourceChatRoom.getUserNickname();
      int atIx=-1;
      if (nickname != null)       atIx=nickname.indexOf("@");
      fireChatNotification=(nickname == null) || messageContent.toLowerCase().contains(nickname.toLowerCase()) || ((atIx == -1) ? false : messageContent.toLowerCase().contains(nickname.substring(0,atIx).toLowerCase()));
    }
    if (fireChatNotification) {
      String title=NotificationWiringActivator.getResources().getI18NString("service.gui.MSG_RECEIVED",new String[]{sourceMember.getName()});
      final String htmlContent;
      if (HTML_CONTENT_TYPE.equals(sourceMsg.getContentType())) {
        htmlContent=messageContent;
      }
 else {
        htmlContent=StringEscapeUtils.escapeHtml4(messageContent);
      }
      fireChatNotification(sourceChatRoom,INCOMING_MESSAGE,title,htmlContent,sourceMsg.getMessageUID());
    }
  }
 catch (  Throwable t) {
    logger.error("Error notifying for chat room message received",t);
  }
}
