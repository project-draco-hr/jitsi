{
  try {
    CallPeer peer=ev.getSourceCallPeer();
    Call call=peer.getCall();
    CallPeerState newState=(CallPeerState)ev.getNewValue();
    CallPeerState oldState=(CallPeerState)ev.getOldValue();
    if ((newState == CallPeerState.INITIATING_CALL) || (newState == CallPeerState.CONNECTING)) {
      final WeakReference<CallPeer> weakPeer=new WeakReference<CallPeer>(peer);
      if (shouldPlayDialingSound(weakPeer)) {
        NotificationData notification=fireNotification(DIALING,new Callable<Boolean>(){
          public Boolean call(){
            return shouldPlayDialingSound(weakPeer);
          }
        }
);
        if (notification != null)         callNotifications.put(call,notification);
      }
    }
 else {
      NotificationData notification=callNotifications.get(call);
      if (notification != null)       stopSound(notification);
    }
    if (newState == CallPeerState.ALERTING_REMOTE_SIDE && oldState != CallPeerState.CONNECTING_WITH_EARLY_MEDIA) {
      final WeakReference<CallPeer> weakPeer=new WeakReference<CallPeer>(peer);
      NotificationData notification=fireNotification(OUTGOING_CALL,new Callable<Boolean>(){
        public Boolean call(){
          CallPeer peer=weakPeer.get();
          return (peer != null) && CallPeerState.ALERTING_REMOTE_SIDE.equals(peer.getState());
        }
      }
);
      if (notification != null)       callNotifications.put(call,notification);
    }
 else     if (newState == CallPeerState.BUSY) {
      if (!isConference(call)) {
        final WeakReference<CallPeer> weakPeer=new WeakReference<CallPeer>(peer);
        NotificationData notification=fireNotification(BUSY_CALL,new Callable<Boolean>(){
          public Boolean call(){
            CallPeer peer=weakPeer.get();
            return (peer != null) && CallPeerState.BUSY.equals(peer.getState());
          }
        }
);
        if (notification != null)         callNotifications.put(call,notification);
      }
    }
 else     if ((newState == CallPeerState.DISCONNECTED) || (newState == CallPeerState.FAILED)) {
      fireNotification(HANG_UP);
    }
  }
 catch (  Throwable t) {
    if (t instanceof ThreadDeath)     throw (ThreadDeath)t;
 else {
      logger.error("An error occurred while trying to notify" + " about a change in the state of a call peer.",t);
    }
  }
}
