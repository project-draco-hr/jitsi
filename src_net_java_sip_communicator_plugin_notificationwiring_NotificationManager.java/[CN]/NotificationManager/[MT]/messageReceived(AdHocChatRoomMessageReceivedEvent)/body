{
  try {
    AdHocChatRoom sourceChatRoom=evt.getSourceChatRoom();
    Contact sourceParticipant=evt.getSourceChatRoomParticipant();
    boolean fireChatNotification;
    String nickname=sourceChatRoom.getName();
    String messageContent=evt.getMessage().getContent();
    fireChatNotification=(nickname == null) || messageContent.toLowerCase().contains(nickname.toLowerCase());
    if (fireChatNotification) {
      String title=NotificationWiringActivator.getResources().getI18NString("service.gui.MSG_RECEIVED",new String[]{sourceParticipant.getDisplayName()});
      final String htmlContent;
      if (HTML_CONTENT_TYPE.equals(evt.getMessage().getContentType())) {
        htmlContent=messageContent;
      }
 else {
        htmlContent=StringEscapeUtils.escapeHtml4(messageContent);
      }
      fireChatNotification(sourceChatRoom,INCOMING_MESSAGE,title,htmlContent,evt.getMessage().getMessageUID());
    }
  }
 catch (  Throwable t) {
    logger.error("Error notifying for adhoc message received",t);
  }
}
