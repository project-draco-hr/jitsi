{
  Contact contact=(Contact)contactSelectorBox.getMenu().getSelectedObject();
  OperationSetBasicInstantMessaging im=(OperationSetBasicInstantMessaging)contact.getProtocolProvider().getOperationSet(OperationSetBasicInstantMessaging.class);
  OperationSetTypingNotifications tn=(OperationSetTypingNotifications)contact.getProtocolProvider().getOperationSet(OperationSetTypingNotifications.class);
  String htmlText=getTextFromWriteArea("text/html");
  String plainText=getTextFromWriteArea(OperationSetBasicInstantMessaging.DEFAULT_MIME_TYPE);
  Message msg;
  if (im.isContentTypeSupported("text/html") && (htmlText.indexOf("<b") > -1 || htmlText.indexOf("<i") > -1 || htmlText.indexOf("<u") > -1 || htmlText.indexOf("<font") > -1)) {
    msg=im.createMessage(htmlText,"text/html","utf-8","");
  }
 else {
    msg=im.createMessage(plainText);
  }
  this.refreshWriteArea();
  if (tn != null) {
    getChatWritePanel().stopTypingTimer();
  }
  try {
    im.sendInstantMessage(contact,msg);
  }
 catch (  IllegalStateException ex) {
    logger.error("Failed to send message.",ex);
    this.refreshWriteArea();
    this.processMessage(contact.getDisplayName(),new Date(System.currentTimeMillis()),Constants.OUTGOING_MESSAGE,msg.getContent(),msg.getContentType());
    this.processMessage(contact.getDisplayName(),new Date(System.currentTimeMillis()),Constants.ERROR_MESSAGE,Messages.getI18NString("msgSendConnectionProblem").getText(),"text");
  }
catch (  Exception ex) {
    logger.error("Failed to send message.",ex);
    this.refreshWriteArea();
    this.processMessage(contact.getDisplayName(),new Date(System.currentTimeMillis()),Constants.OUTGOING_MESSAGE,msg.getContent(),msg.getContentType());
    this.processMessage(contact.getDisplayName(),new Date(System.currentTimeMillis()),Constants.ERROR_MESSAGE,Messages.getI18NString("msgDeliveryUnknownError",new String[]{ex.getMessage()}).getText(),"text");
  }
}
