{
  OperationSetSmsMessaging smsOpSet=null;
  Contact contact=null;
  Iterator contacts=metaContact.getContacts();
  while (contacts.hasNext()) {
    contact=(Contact)contacts.next();
    smsOpSet=(OperationSetSmsMessaging)contact.getProtocolProvider().getOperationSet(OperationSetSmsMessaging.class);
    if (smsOpSet != null)     break;
  }
  if (smsOpSet != null) {
    Message message=smsOpSet.createMessage(text);
    try {
      smsOpSet.sendSmsMessage(contact,message);
    }
 catch (    IllegalStateException ex) {
      logger.error("Failed to send SMS.",ex);
      this.refreshWriteArea();
      this.processMessage(contact.getDisplayName(),new Date(System.currentTimeMillis()),Constants.OUTGOING_MESSAGE,message.getContent(),message.getContentType());
      this.processMessage(contact.getDisplayName(),new Date(System.currentTimeMillis()),Constants.ERROR_MESSAGE,Messages.getI18NString("msgSendConnectionProblem").getText(),"text");
    }
catch (    Exception ex) {
      logger.error("Failed to send SMS.",ex);
      this.refreshWriteArea();
      this.processMessage(contact.getDisplayName(),new Date(System.currentTimeMillis()),Constants.OUTGOING_MESSAGE,message.getContent(),message.getContentType());
      this.processMessage(contact.getDisplayName(),new Date(System.currentTimeMillis()),Constants.ERROR_MESSAGE,Messages.getI18NString("msgDeliveryInternalError").getText(),"text");
    }
    return;
  }
  Iterator protocolProviders=chatWindow.getMainFrame().getProtocolProviders();
  while (protocolProviders.hasNext()) {
    ProtocolProviderService protocolProvider=(ProtocolProviderService)protocolProviders.next();
    smsOpSet=(OperationSetSmsMessaging)protocolProvider.getOperationSet(OperationSetSmsMessaging.class);
    if (smsOpSet != null)     break;
  }
  if (smsOpSet == null) {
    logger.error("Failed to send SMS.");
    this.refreshWriteArea();
    this.processMessage(metaContact.getDisplayName(),new Date(System.currentTimeMillis()),Constants.OUTGOING_MESSAGE,text,"plain/text");
    this.processMessage(metaContact.getDisplayName(),new Date(System.currentTimeMillis()),Constants.ERROR_MESSAGE,Messages.getI18NString("sendSmsNotSupported").getText(),"plain/text");
    return;
  }
  Message message=smsOpSet.createMessage(text);
  SendSmsDialog smsDialog=new SendSmsDialog(this,message,null);
  smsDialog.setPreferredSize(new Dimension(400,200));
  smsDialog.setVisible(true);
}
