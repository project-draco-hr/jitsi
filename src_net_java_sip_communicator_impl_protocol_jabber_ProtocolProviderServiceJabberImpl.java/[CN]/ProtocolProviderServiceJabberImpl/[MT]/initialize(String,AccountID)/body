{
synchronized (initializationLock) {
    this.accountID=accountID;
    String protocolIconPath=accountID.getAccountPropertyString(ProtocolProviderFactory.PROTOCOL_ICON_PATH);
    if (protocolIconPath == null) {
      protocolIconPath="resources/images/protocol/jabber";
    }
    jabberIcon=new ProtocolIconJabberImpl(protocolIconPath);
    jabberStatusEnum=JabberStatusEnum.getJabberStatusEnum(protocolIconPath);
    supportedFeatures.add("http://jabber.org/protocol/disco#info");
    String keepAliveStrValue=accountID.getAccountPropertyString("SEND_KEEP_ALIVE");
    String resourcePriority=accountID.getAccountPropertyString(ProtocolProviderFactory.RESOURCE_PRIORITY);
    OperationSetPersistentPresenceJabberImpl persistentPresence=new OperationSetPersistentPresenceJabberImpl(this);
    if (resourcePriority != null) {
      persistentPresence.setResourcePriority(Integer.parseInt(resourcePriority));
      supportedFeatures.add("http://www.xmpp.org/extensions/xep-0168.html#ns");
    }
    supportedOperationSets.put(OperationSetPersistentPresence.class.getName(),persistentPresence);
    supportedOperationSets.put(OperationSetPresence.class.getName(),persistentPresence);
    OperationSetBasicInstantMessagingJabberImpl basicInstantMessaging=new OperationSetBasicInstantMessagingJabberImpl(this);
    if (keepAliveStrValue != null)     basicInstantMessaging.setKeepAliveEnabled(Boolean.parseBoolean(keepAliveStrValue));
    supportedOperationSets.put(OperationSetBasicInstantMessaging.class.getName(),basicInstantMessaging);
    supportedFeatures.add("http://jabber.org/protocol/xhtml-im");
    OperationSetWhiteboardingJabberImpl whiteboard=new OperationSetWhiteboardingJabberImpl(this);
    supportedOperationSets.put(OperationSetWhiteboarding.class.getName(),whiteboard);
    OperationSetTypingNotifications typingNotifications=new OperationSetTypingNotificationsJabberImpl(this);
    supportedOperationSets.put(OperationSetTypingNotifications.class.getName(),typingNotifications);
    supportedFeatures.add("http://jabber.org/protocol/chatstates");
    OperationSetMultiUserChat multiUserChat=new OperationSetMultiUserChatJabberImpl(this);
    supportedOperationSets.put(OperationSetMultiUserChat.class.getName(),multiUserChat);
    InfoRetreiver infoRetreiver=new InfoRetreiver(this,screenname);
    OperationSetServerStoredContactInfo contactInfo=new OperationSetServerStoredContactInfoJabberImpl(infoRetreiver);
    supportedOperationSets.put(OperationSetServerStoredContactInfo.class.getName(),contactInfo);
    OperationSetServerStoredAccountInfo accountInfo=new OperationSetServerStoredAccountInfoJabberImpl(this,infoRetreiver,screenname);
    supportedOperationSets.put(OperationSetServerStoredAccountInfo.class.getName(),accountInfo);
    supportedFeatures.add("http://jabber.org/protocol/muc");
    if (JabberActivator.getMediaService() != null) {
      OperationSetBasicTelephony opSetBasicTelephony=new OperationSetBasicTelephonyJabberImpl(this);
      supportedOperationSets.put(OperationSetBasicTelephony.class.getName(),opSetBasicTelephony);
      supportedFeatures.add("http://www.xmpp.org/extensions/xep-0166.html#ns");
      supportedFeatures.add("http://www.xmpp.org/extensions/xep-0167.html#ns");
    }
    isInitialized=true;
  }
}
