{
  if (authority == null)   throw new IllegalArgumentException("The register method needs a valid non-null authority impl " + " in order to be able and retrieve passwords.");
synchronized (initializationLock) {
    new Thread(){
      public void run(){
        String password=JabberActivator.getProtocolProviderFactory().loadPassword(getAccountID());
        if (password == null) {
          UserCredentials credentials=new UserCredentials();
          credentials.setUserName(getAccountID().getUserID());
          credentials=authority.obtainCredentials(ProtocolNames.JABBER,credentials);
          password=new String(credentials.getPassword());
          if (credentials.isPasswordPersistent()) {
            JabberActivator.getProtocolProviderFactory().storePassword(getAccountID(),password);
          }
        }
        try {
          String userID=StringUtils.parseName(getAccountID().getUserID());
          String serviceName=StringUtils.parseServer(getAccountID().getUserID());
          String serverAddress=(String)getAccountID().getAccountProperties().get(ProtocolProviderFactory.SERVER_ADDRESS);
          String serverPort=(String)getAccountID().getAccountProperties().get(ProtocolProviderFactory.SERVER_PORT);
          connection=new XMPPConnection(serverAddress,Integer.parseInt(serverPort),serviceName);
          connection.addConnectionListener(new JabberConnectionListener());
          connection.login(userID,password,"sip-comm");
          if (connection.isAuthenticated()) {
            currentConnectionState=RegistrationState.REGISTERED;
            connection.getRoster().setSubscriptionMode(Roster.SUBSCRIPTION_ACCEPT_ALL);
            fireRegistrationStateChanged(RegistrationState.UNREGISTERED,RegistrationState.REGISTERED,RegistrationStateChangeEvent.REASON_NOT_SPECIFIED,null);
          }
        }
 catch (        XMPPException ex) {
          logger.error("Error registering",ex);
          int reason=RegistrationStateChangeEvent.REASON_NOT_SPECIFIED;
          if (ex.getWrappedThrowable() instanceof UnknownHostException)           reason=RegistrationStateChangeEvent.REASON_SERVER_NOT_FOUND;
          fireRegistrationStateChanged(RegistrationState.UNREGISTERED,RegistrationState.CONNECTION_FAILED,reason,null);
        }
      }
    }
.start();
  }
}
