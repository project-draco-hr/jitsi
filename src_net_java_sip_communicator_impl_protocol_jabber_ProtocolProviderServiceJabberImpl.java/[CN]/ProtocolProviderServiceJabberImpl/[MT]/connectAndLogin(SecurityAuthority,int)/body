{
synchronized (connectAndLoginLock) {
    inConnectAndLogin=true;
  }
synchronized (initializationLock) {
    String serviceName=StringUtils.parseServer(getAccountID().getUserID());
    String password=loadPassword(authority,reasonCode);
    if (password == null)     return;
    loadResource();
    loadProxy();
    Roster.setDefaultSubscriptionMode(Roster.SubscriptionMode.manual);
    boolean isServerOverriden=getAccountID().getAccountPropertyBoolean(ProtocolProviderFactory.IS_SERVER_OVERRIDDEN,false);
    if (!isServerOverriden) {
      SRVRecord srvRecords[]=null;
      try {
        srvRecords=NetworkUtils.getSRVRecords("xmpp-client","tcp",serviceName);
      }
 catch (      ParseException e) {
        logger.error("SRV record not resolved",e);
      }
      if (srvRecords != null) {
        for (        SRVRecord srv : srvRecords) {
          InetSocketAddress[] addrs=null;
          try {
            addrs=NetworkUtils.getAandAAAARecords(srv.getTarget(),srv.getPort());
          }
 catch (          ParseException e) {
            logger.error("Invalid SRV record target",e);
          }
          if (addrs == null)           continue;
          for (          InetSocketAddress isa : addrs) {
            try {
              ConnectState state=connectAndLogin(isa,password,serviceName);
              if (state == ConnectState.ABORT_CONNECTING || state == ConnectState.STOP_TRYING)               return;
            }
 catch (            XMPPException ex) {
              disconnectAndCleanConnection();
              if (isAuthenticationFailed(ex))               throw ex;
            }
          }
        }
      }
    }
    String serverAddressUserSetting=getAccountID().getAccountPropertyString(ProtocolProviderFactory.SERVER_ADDRESS);
    int serverPort=getAccountID().getAccountPropertyInt(ProtocolProviderFactory.SERVER_PORT,5222);
    InetSocketAddress[] addrs=null;
    try {
      addrs=NetworkUtils.getAandAAAARecords(serverAddressUserSetting,serverPort);
    }
 catch (    ParseException e) {
      logger.error("Domain not resolved",e);
    }
    if (addrs == null)     throw new XMPPException("No server address found");
    for (    InetSocketAddress isa : addrs) {
      try {
        ConnectState state=connectAndLogin(isa,password,serviceName);
        if (state == ConnectState.ABORT_CONNECTING || state == ConnectState.STOP_TRYING)         return;
      }
 catch (      XMPPException ex) {
        disconnectAndCleanConnection();
        if (isAuthenticationFailed(ex))         throw ex;
      }
    }
  }
synchronized (connectAndLoginLock) {
    if (eventDuringLogin != null) {
      if (eventDuringLogin.getNewState().equals(RegistrationState.CONNECTION_FAILED) || eventDuringLogin.getNewState().equals(RegistrationState.UNREGISTERED))       disconnectAndCleanConnection();
      fireRegistrationStateChanged(eventDuringLogin.getOldState(),eventDuringLogin.getNewState(),eventDuringLogin.getReasonCode(),eventDuringLogin.getReason());
      eventDuringLogin=null;
      inConnectAndLogin=false;
      return;
    }
    inConnectAndLogin=false;
  }
}
