{
  if (requestEvent.getDialog() != callPeer.getDialog()) {
    if (callPeer.getCall() instanceof DesktopSharingCallSipImpl) {
      Header dssidHeader=requestEvent.getRequest().getHeader(DesktopSharingCallSipImpl.DSSID_HEADER);
      if (dssidHeader != null) {
        String dssid=dssidHeader.toString().replaceAll(dssidHeader.getName() + ":","").trim();
        if (!dssid.equals(((DesktopSharingCallSipImpl)callPeer.getCall()).getDesktopSharingSessionID()))         return;
      }
 else       return;
    }
 else     return;
  }
  if (rawContent != null) {
    Document document=null;
    Throwable exception=null;
    try {
      document=DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(rawContent));
    }
 catch (    IOException ioe) {
      exception=ioe;
    }
catch (    ParserConfigurationException pce) {
      exception=pce;
    }
catch (    SAXException saxe) {
      exception=saxe;
    }
    if (exception != null) {
      logger.error("Failed to parse remote-info XML",exception);
    }
 else {
      Element root=document.getDocumentElement();
      List<ComponentEvent> events=null;
      Point p=getOrigin();
      if (size == null) {
        size=(((VideoMediaFormat)callPeer.getCall().getDefaultDevice(MediaType.VIDEO).getFormat()).getSize());
      }
      events=DesktopSharingProtocolSipImpl.parse(root,size,p);
      for (      ComponentEvent evt : events) {
        if (evt instanceof MouseEvent)         processMouseEvent((MouseEvent)evt);
 else         if (evt instanceof KeyEvent)         processKeyboardEvent((KeyEvent)evt);
      }
    }
  }
}
