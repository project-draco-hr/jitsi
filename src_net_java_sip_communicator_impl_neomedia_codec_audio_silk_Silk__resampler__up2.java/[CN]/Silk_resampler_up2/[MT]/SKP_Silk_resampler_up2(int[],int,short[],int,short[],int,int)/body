{
  int k;
  int in32, out32, Y, X;
  assert(Silk_resampler_rom.SKP_Silk_resampler_up2_lq_0 > 0);
  assert(Silk_resampler_rom.SKP_Silk_resampler_up2_lq_1 < 0);
  for (k=0; k < len; k++) {
    in32=in[in_offset + k] << 10;
    Y=in32 - S[S_offset + 0];
    X=Silk_macros.SKP_SMULWB(Y,Silk_resampler_rom.SKP_Silk_resampler_up2_lq_0);
    out32=S[S_offset + 0] + X;
    S[S_offset + 0]=in32 + X;
    out[out_offset + 2 * k]=(short)Silk_SigProc_FIX.SKP_SAT16(Silk_SigProc_FIX.SKP_RSHIFT_ROUND(out32,10));
    Y=in32 - S[S_offset + 1];
    X=Silk_macros.SKP_SMLAWB(Y,Y,Silk_resampler_rom.SKP_Silk_resampler_up2_lq_1);
    out32=S[S_offset + 1] + X;
    S[S_offset + 1]=in32 + X;
    out[out_offset + 2 * k + 1]=(short)Silk_SigProc_FIX.SKP_SAT16(Silk_SigProc_FIX.SKP_RSHIFT_ROUND(out32,10));
  }
}
