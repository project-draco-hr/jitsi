{
  this.accountLabel=new JLabel(GuiActivator.getResources().getI18NString("service.gui.SELECT_ACCOUNT") + ": ");
  this.accountCombo=new JComboBox();
  this.groupLabel=new JLabel(GuiActivator.getResources().getI18NString("service.gui.SELECT_GROUP") + ": ");
  this.contactAddressLabel=new JLabel(GuiActivator.getResources().getI18NString("service.gui.CONTACT_NAME") + ": ");
  this.displayNameLabel=new JLabel(GuiActivator.getResources().getI18NString("service.gui.DISPLAY_NAME") + ": ");
  this.contactAddressField=new JTextField();
  this.displayNameField=new JTextField();
  this.addButton=new JButton(GuiActivator.getResources().getI18NString("service.gui.ADD"));
  this.cancelButton=new JButton(GuiActivator.getResources().getI18NString("service.gui.CANCEL"));
  this.imageLabel=new JLabel();
  this.groupCombo=createGroupCombo(this);
  if (metaContact != null) {
    groupCombo.setEnabled(false);
    groupCombo.setSelectedItem(metaContact.getParentMetaContactGroup());
  }
  TransparentPanel labelsPanel=new TransparentPanel(new GridLayout(0,1,5,5));
  TransparentPanel fieldsPanel=new TransparentPanel(new GridLayout(0,1,5,5));
  initAccountCombo();
  accountCombo.setRenderer(new AccountComboRenderer());
  if (accountCombo.getItemCount() > 2 || (accountCombo.getItemCount() == 2 && !ConfigurationUtils.isHideAccountSelectionWhenPossibleEnabled())) {
    labelsPanel.add(accountLabel);
    fieldsPanel.add(accountCombo);
  }
  labelsPanel.add(groupLabel);
  fieldsPanel.add(groupCombo);
  labelsPanel.add(contactAddressLabel);
  fieldsPanel.add(contactAddressField);
  labelsPanel.add(displayNameLabel);
  fieldsPanel.add(displayNameField);
  contactAddressField.getDocument().addDocumentListener(new DocumentListener(){
    public void changedUpdate(    DocumentEvent e){
    }
    public void insertUpdate(    DocumentEvent e){
      updateAddButtonState(false);
    }
    public void removeUpdate(    DocumentEvent e){
      updateAddButtonState(false);
    }
  }
);
  TransparentPanel dataPanel=new TransparentPanel(new BorderLayout());
  dataPanel.add(labelsPanel,BorderLayout.WEST);
  dataPanel.add(fieldsPanel);
  TransparentPanel mainPanel=new TransparentPanel(new BorderLayout(20,10));
  mainPanel.setBorder(BorderFactory.createEmptyBorder(20,20,20,20));
  mainPanel.add(imageLabel,BorderLayout.WEST);
  mainPanel.add(dataPanel,BorderLayout.CENTER);
  mainPanel.add(createButtonsPanel(),BorderLayout.SOUTH);
  this.getContentPane().add(mainPanel,BorderLayout.CENTER);
  if (ConfigurationUtils.isHideAccountSelectionWhenPossibleEnabled())   this.setPreferredSize(new Dimension(450,205));
 else   this.setPreferredSize(new Dimension(450,250));
  this.setResizable(false);
  this.addWindowFocusListener(this);
  loadSkin();
  this.initialized=true;
}
