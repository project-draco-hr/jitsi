{
  CallPeerConferenceListener[] listeners;
synchronized (callPeerConferenceListeners) {
    listeners=callPeerConferenceListeners.toArray(new CallPeerConferenceListener[callPeerConferenceListeners.size()]);
  }
  int eventID=conferenceEvent.getEventID();
  if (logger.isDebugEnabled()) {
    String eventIDString;
switch (eventID) {
case CallPeerConferenceEvent.CONFERENCE_FOCUS_CHANGED:
      eventIDString="CONFERENCE_FOCUS_CHANGED";
    break;
case CallPeerConferenceEvent.CONFERENCE_MEMBER_ADDED:
  eventIDString="CONFERENCE_MEMBER_ADDED";
break;
case CallPeerConferenceEvent.CONFERENCE_MEMBER_REMOVED:
eventIDString="CONFERENCE_MEMBER_REMOVED";
break;
case CallPeerConferenceEvent.CONFERENCE_MEMBER_ERROR_RECEIVED:
eventIDString="CONFERENCE_MEMBER_ERROR_RECEIVED";
break;
default :
eventIDString="UNKNOWN";
break;
}
logger.debug("Firing CallPeerConferenceEvent with ID " + eventIDString + " to "+ listeners.length+ " listeners");
}
for (CallPeerConferenceListener listener : listeners) switch (eventID) {
case CallPeerConferenceEvent.CONFERENCE_FOCUS_CHANGED:
listener.conferenceFocusChanged(conferenceEvent);
break;
case CallPeerConferenceEvent.CONFERENCE_MEMBER_ADDED:
listener.conferenceMemberAdded(conferenceEvent);
break;
case CallPeerConferenceEvent.CONFERENCE_MEMBER_REMOVED:
listener.conferenceMemberRemoved(conferenceEvent);
break;
case CallPeerConferenceEvent.CONFERENCE_MEMBER_ERROR_RECEIVED:
listener.conferenceMemberErrorReceived(conferenceEvent);
break;
}
}
