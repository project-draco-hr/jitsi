{
  MouseRolloverHandler mouseHandler=new MouseRolloverHandler();
  this.addMouseListener(mouseHandler);
  this.addMouseMotionListener(mouseHandler);
  getPopupMenu().addComponentListener(new ComponentAdapter(){
    @Override public void componentResized(    ComponentEvent evt){
      final Window parentWindow;
      Component parent=SIPCommMenu.this.getParent();
      if (parent instanceof JPopupMenu)       parentWindow=SwingUtilities.getWindowAncestor(((JPopupMenu)parent).getInvoker());
 else       parentWindow=SwingUtilities.getWindowAncestor(SIPCommMenu.this);
      if (!parentWindow.isActive()) {
        getPopupMenu().setVisible(false);
      }
      parentWindow.addWindowListener(new WindowAdapter(){
        @Override public void windowDeactivated(        WindowEvent e){
          JPopupMenu popupMenu=getPopupMenu();
          if (popupMenu != null && popupMenu.isVisible())           popupMenu.setVisible(false);
        }
        /** 
 * Invoked when a window has been closed.
 * Remove the listener as we do not need it any more.
 */
        @Override public void windowClosed(        WindowEvent e){
          parentWindow.removeWindowListener(this);
        }
      }
);
    }
  }
);
}
