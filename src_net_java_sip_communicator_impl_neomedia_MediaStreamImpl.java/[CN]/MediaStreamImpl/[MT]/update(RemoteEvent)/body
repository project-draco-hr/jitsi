{
  if (!logger.isInfoEnabled())   return;
  if (remoteEvent instanceof SenderReportEvent) {
    numberOfReceivedSenderReports++;
    SenderReport report=((SenderReportEvent)remoteEvent).getReport();
    Feedback feedback=null;
    long remoteJitter=-1;
    if (report.getFeedbackReports().size() > 0) {
      feedback=(Feedback)report.getFeedbackReports().get(0);
      remoteJitter=feedback.getJitter();
      if (remoteJitter < minRemoteInterArrivalJitter || minRemoteInterArrivalJitter == -1)       minRemoteInterArrivalJitter=remoteJitter;
      if (maxRemoteInterArrivalJitter < remoteJitter)       maxRemoteInterArrivalJitter=remoteJitter;
    }
    if (numberOfReceivedSenderReports % 4 != 1)     return;
    StringBuilder buff=new StringBuilder(StatisticsEngine.RTP_STAT_PREFIX);
    MediaFormat format=getFormat();
    buff.append("Received a report for ").append((format == null) ? "" : format.getMediaType().toString()).append(" stream SSRC:").append(getLocalSourceID()).append(" [packet count:").append(report.getSenderPacketCount()).append(", bytes:").append(report.getSenderByteCount());
    if (feedback != null) {
      buff.append(", interarrival jitter:").append(remoteJitter).append(", lost packets:").append(feedback.getNumLost()).append(", time since previous report:").append((int)(feedback.getDLSR() / 65.536)).append("ms");
    }
    buff.append(" ]");
    logger.info(buff);
  }
}
