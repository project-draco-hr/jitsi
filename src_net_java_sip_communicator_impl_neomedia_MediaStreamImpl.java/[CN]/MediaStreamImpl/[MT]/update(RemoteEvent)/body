{
  if (!logger.isTraceEnabled())   return;
  if (remoteEvent instanceof SenderReportEvent) {
    numberOfReceivedSenderReports++;
    SenderReport report=((SenderReportEvent)remoteEvent).getReport();
    if (report.getFeedbackReports().size() > 0) {
      Feedback feedback=(Feedback)report.getFeedbackReports().get(0);
      long remoteJitter=feedback.getJitter();
      if (remoteJitter < minRemoteInterArrivalJitter || minRemoteInterArrivalJitter == -1)       minRemoteInterArrivalJitter=remoteJitter;
      if (maxRemoteInterArrivalJitter < remoteJitter)       maxRemoteInterArrivalJitter=remoteJitter;
      if (numberOfReceivedSenderReports % 4 != 1)       return;
      StringBuilder buff=new StringBuilder(StatisticsEngine.RTP_STAT_PREFIX);
      buff.append("Received a report for ").append(getFormat().getMediaType().toString()).append(" stream SSRC:").append(getLocalSourceID()).append(" [packet count:").append(report.getSenderPacketCount()).append(", bytes:").append(report.getSenderByteCount()).append(", interarrival jitter:").append(remoteJitter).append(", lost packets:").append(feedback.getNumLost()).append(", time since previous report:").append((int)(feedback.getDLSR() / 65.536)).append("ms ]");
      logger.info(buff);
    }
  }
}
