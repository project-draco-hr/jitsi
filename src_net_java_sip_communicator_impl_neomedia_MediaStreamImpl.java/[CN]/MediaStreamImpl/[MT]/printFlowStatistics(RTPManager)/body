{
  try {
    GlobalTransmissionStats s=rtpManager.getGlobalTransmissionStats();
    StringBuilder buff=new StringBuilder(StatisticsEngine.RTP_STAT_PREFIX);
    buff.append("call stats for outgoing ").append(getFormat().getMediaType()).append(" stream SSRC:").append(getLocalSourceID()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("bytes sent: ").append(s.getBytesSent()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("RTP sent: ").append(s.getRTPSent()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("remote reported min interarrival jitter : ").append(minRemoteInterArrivalJitter).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("remote reported max interarrival jitter : ").append(maxRemoteInterArrivalJitter).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("local collisions: ").append(s.getLocalColls()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("remote collisions: ").append(s.getRemoteColls()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("RTCP sent: ").append(s.getRTCPSent()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("transmit failed: ").append(s.getTransmitFailed());
    logger.info(buff);
    GlobalReceptionStats rs=rtpManager.getGlobalReceptionStats();
    buff=new StringBuilder(StatisticsEngine.RTP_STAT_PREFIX);
    buff.append("call stats for incoming ").append(getFormat().getMediaType()).append(" stream SSRC:").append(getRemoteSourceID()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("packets received: ").append(rs.getPacketsRecd()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("bytes received: ").append(rs.getBytesRecd()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("packets lost: ").append(statisticsEngine.getLost()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("min interarrival jitter : ").append(statisticsEngine.getMinInterArrivalJitter()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("max interarrival jitter : ").append(statisticsEngine.getMaxInterArrivalJitter()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("RTCPs received: ").append(rs.getRTCPRecd()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("bad RTCP packets: ").append(rs.getBadRTCPPkts()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("bad RTP packets: ").append(rs.getBadRTPkts()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("local collisions: ").append(rs.getLocalColls()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("malformed BYEs: ").append(rs.getMalformedBye()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("malformed RRs: ").append(rs.getMalformedRR()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("malformed SDESs: ").append(rs.getMalformedSDES()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("malformed SRs: ").append(rs.getMalformedSR()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("packets looped: ").append(rs.getPacketsLooped()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("remote collisions: ").append(rs.getRemoteColls()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("SRRs received: ").append(rs.getSRRecd()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("transmit failed: ").append(rs.getTransmitFailed()).append("\n").append(StatisticsEngine.RTP_STAT_PREFIX).append("unknown types: ").append(rs.getUnknownTypes());
    logger.info(buff);
  }
 catch (  Throwable t) {
    logger.error("Error writing statistics",t);
  }
}
