{
  List<ReceiveStream> receiveStreams;
  try {
    receiveStreams=rtpManager.getReceiveStreams();
  }
 catch (  Exception ex) {
    if (logger.isTraceEnabled())     logger.trace("Failed to retrieve receive streams",ex);
    receiveStreams=null;
  }
  if (receiveStreams != null) {
    if (receiveStreams.size() == 0) {
      if (receiveStream != null) {
        try {
          if (logger.isTraceEnabled())           logger.trace("Stopping receive stream with hashcode " + receiveStream.hashCode());
          DataSource receiveStreamDataSource=receiveStream.getDataSource();
          if (receiveStreamDataSource != null)           receiveStreamDataSource.stop();
        }
 catch (        IOException ioex) {
          logger.warn("Failed to stop stream " + receiveStream,ioex);
        }
      }
    }
 else {
      for (      ReceiveStream receiveStream : receiveStreams) {
        try {
          if (logger.isTraceEnabled())           logger.trace("Stopping receive stream with hashcode " + receiveStream.hashCode());
          DataSource receiveStreamDataSource=receiveStream.getDataSource();
          if (receiveStreamDataSource != null)           receiveStreamDataSource.stop();
        }
 catch (        IOException ioex) {
          logger.warn("Failed to stop stream " + receiveStream,ioex);
        }
      }
    }
  }
}
