{
  List<ReceiveStream> receiveStreams;
  try {
    receiveStreams=rtpManager.getReceiveStreams();
  }
 catch (  Exception ex) {
    if (logger.isTraceEnabled())     logger.trace("Failed to retrieve receive streams",ex);
    receiveStreams=null;
  }
  if (receiveStreams != null) {
    if (receiveStreams.isEmpty() && (this.receiveStreams != null))     receiveStreams=this.receiveStreams;
    for (    ReceiveStream receiveStream : receiveStreams) {
      try {
        if (logger.isTraceEnabled())         logger.trace("Stopping receive stream with hashcode " + receiveStream.hashCode());
        DataSource receiveStreamDataSource=receiveStream.getDataSource();
        if (receiveStreamDataSource != null)         receiveStreamDataSource.stop();
      }
 catch (      IOException ioex) {
        logger.warn("Failed to stop receive stream " + receiveStream,ioex);
      }
    }
  }
}
