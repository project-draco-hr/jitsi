{
  if (direction == null)   throw new NullPointerException("direction");
  if (rtpManager == null)   return;
  if ((MediaDirection.SENDRECV.equals(direction) || MediaDirection.SENDONLY.equals(direction)) && (MediaDirection.SENDRECV.equals(startedDirection) || MediaDirection.SENDONLY.equals(startedDirection))) {
    stopSendStreams(false);
    if (deviceSession != null)     deviceSession.stop(MediaDirection.SENDONLY);
    if (MediaDirection.SENDRECV.equals(startedDirection))     startedDirection=MediaDirection.RECVONLY;
 else     if (MediaDirection.SENDONLY.equals(startedDirection))     startedDirection=null;
  }
  if ((MediaDirection.SENDRECV.equals(direction) || MediaDirection.RECVONLY.equals(direction)) && (MediaDirection.SENDRECV.equals(startedDirection) || MediaDirection.RECVONLY.equals(startedDirection))) {
    Iterable<ReceiveStream> receiveStreams;
    try {
      receiveStreams=rtpManager.getReceiveStreams();
    }
 catch (    Exception e) {
      logger.trace("Failed to retrieve receive streams",e);
      receiveStreams=null;
    }
    if (receiveStreams != null)     for (    ReceiveStream receiveStream : receiveStreams)     try {
      DataSource receiveStreamDataSource=receiveStream.getDataSource();
      if (receiveStreamDataSource != null)       receiveStreamDataSource.stop();
    }
 catch (    IOException ioe) {
      logger.warn("Failed to stop stream " + receiveStream,ioe);
    }
    if (deviceSession != null)     deviceSession.stop(MediaDirection.RECVONLY);
    if (MediaDirection.SENDRECV.equals(startedDirection))     startedDirection=MediaDirection.SENDONLY;
 else     if (MediaDirection.RECVONLY.equals(startedDirection))     startedDirection=null;
  }
}
