{
  final String msg=message.toLowerCase();
  final int end=msg.indexOf(' ');
  final String command;
  if (end == -1) {
    command=msg.substring(START_OF_COMMAND_INDEX);
  }
 else {
    command=message.substring(START_OF_COMMAND_INDEX,end);
  }
  final Command cmd=this.commandFactory.createCommand(command);
  try {
    cmd.execute(source,msg);
  }
 catch (  IllegalArgumentException e) {
    final String error=e.getMessage();
    final String help=cmd.help();
    throw new BadCommandInvocationException(msg,error + "\n" + help,e);
  }
catch (  IllegalStateException e) {
    final String error=e.getMessage();
    final String help=cmd.help();
    throw new BadCommandInvocationException(msg,error + "\n" + help,e);
  }
catch (  RuntimeException e) {
    LOGGER.error("Failed to execute command '" + command + "': "+ e.getMessage(),e);
  }
}
