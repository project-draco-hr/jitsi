{
  Map<String,OperationSet> supportedOperationSets1=provider1.getSupportedOperationSets();
  if (supportedOperationSets1 == null || supportedOperationSets1.size() < 1)   throw new NullPointerException("No OperationSet implementations are supported by " + "this Gibberish implementation. ");
  OperationSetPersistentPresence opSetPersPresence1=(OperationSetPersistentPresence)supportedOperationSets1.get(OperationSetPersistentPresence.class.getName());
  if (opSetPersPresence1 == null)   throw new NullPointerException("An implementation of the Gibberish service must provide an " + "implementation of at least the one of the Presence " + "Operation Sets");
  Map<String,OperationSet> supportedOperationSets2=provider2.getSupportedOperationSets();
  if (supportedOperationSets2 == null || supportedOperationSets2.size() < 1)   throw new NullPointerException("No OperationSet implementations are supported by " + "this Gibberish implementation. ");
  OperationSetPersistentPresence opSetPersPresence2=(OperationSetPersistentPresence)supportedOperationSets2.get(OperationSetPersistentPresence.class.getName());
  if (opSetPersPresence2 == null)   throw new NullPointerException("An implementation of the Gibberish service must provide an " + "implementation of at least the one of the Presence " + "Operation Sets");
  ContactGroup rootGroup1=opSetPersPresence1.getServerStoredContactListRoot();
  Vector groupsToRemove=new Vector();
  Iterator iter=rootGroup1.subgroups();
  while (iter.hasNext()) {
    groupsToRemove.add(iter.next());
  }
  iter=groupsToRemove.iterator();
  while (iter.hasNext()) {
    ContactGroup item=(ContactGroup)iter.next();
    opSetPersPresence1.removeServerStoredContactGroup(item);
  }
  Vector contactsToRemove=new Vector();
  iter=rootGroup1.contacts();
  while (iter.hasNext()) {
    contactsToRemove.add(iter.next());
  }
  iter=contactsToRemove.iterator();
  while (iter.hasNext()) {
    opSetPersPresence1.unsubscribe((Contact)iter.next());
  }
  ContactGroup rootGroup2=opSetPersPresence2.getServerStoredContactListRoot();
  groupsToRemove=new Vector();
  iter=rootGroup2.subgroups();
  while (iter.hasNext()) {
    groupsToRemove.add(iter.next());
  }
  iter=groupsToRemove.iterator();
  while (iter.hasNext()) {
    ContactGroup item=(ContactGroup)iter.next();
    opSetPersPresence2.removeServerStoredContactGroup(item);
  }
  contactsToRemove=new Vector();
  iter=rootGroup2.contacts();
  while (iter.hasNext()) {
    contactsToRemove.add(iter.next());
  }
  iter=contactsToRemove.iterator();
  while (iter.hasNext()) {
    opSetPersPresence2.unsubscribe((Contact)iter.next());
  }
}
