{
  if (peer.getState().equals(CallPeerState.DISCONNECTED) || peer.getState().equals(CallPeerState.FAILED)) {
    logger.debug("Ignoring a request to hangup a call peer " + "that is already DISCONNECTED");
    return;
  }
  CallPeerSipImpl callPeer=(CallPeerSipImpl)peer;
  CallPeerState peerState=callPeer.getState();
  if (peerState.equals(CallPeerState.CONNECTED) || CallPeerState.isOnHold(peerState)) {
    sayBye(callPeer);
    callPeer.setState(CallPeerState.DISCONNECTED);
  }
 else   if (callPeer.getState().equals(CallPeerState.CONNECTING) || callPeer.getState().equals(CallPeerState.CONNECTING_WITH_EARLY_MEDIA) || callPeer.getState().equals(CallPeerState.ALERTING_REMOTE_SIDE)) {
    if (callPeer.getFirstTransaction() != null) {
      sayCancel(callPeer);
    }
    callPeer.setState(CallPeerState.DISCONNECTED);
  }
 else   if (peerState.equals(CallPeerState.INCOMING_CALL)) {
    callPeer.setState(CallPeerState.DISCONNECTED);
    sayBusyHere(callPeer);
  }
 else   if (peerState.equals(CallPeerState.BUSY)) {
    callPeer.setState(CallPeerState.DISCONNECTED);
  }
 else   if (peerState.equals(CallPeerState.FAILED)) {
    callPeer.setState(CallPeerState.DISCONNECTED);
  }
 else {
    callPeer.setState(CallPeerState.DISCONNECTED);
    logger.error("Could not determine call peer state!");
  }
}
