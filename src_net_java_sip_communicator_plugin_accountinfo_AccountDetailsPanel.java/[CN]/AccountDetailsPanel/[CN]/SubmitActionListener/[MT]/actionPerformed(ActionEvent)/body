{
  if (accountInfoOpSet.isDetailClassSupported(ImageDetail.class)) {
    if (globalIcon.isSelected()) {
      GlobalDisplayDetailsService serv=AccountInfoActivator.getGlobalDisplayDetailsService();
      byte[] newIcon=serv.getGlobalDisplayAvatar();
      ImageDetail newDetail=null;
      if (newIcon != null)       newDetail=new ImageDetail("avatar",serv.getGlobalDisplayAvatar());
      if (avatarDetail != null || newDetail != null)       changeDetail(avatarDetail,newDetail);
    }
  }
  if (accountInfoOpSet.isDetailClassSupported(DisplayNameDetail.class)) {
    String text=detailToTextField.get(DisplayNameDetail.class).getText();
    DisplayNameDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new DisplayNameDetail(text);
    if (displayNameDetail != null || newDetail != null)     changeDetail(displayNameDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(FirstNameDetail.class)) {
    String text=detailToTextField.get(FirstNameDetail.class).getText();
    FirstNameDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new FirstNameDetail(text);
    if (firstNameDetail != null || newDetail != null)     changeDetail(firstNameDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(MiddleNameDetail.class)) {
    String text=detailToTextField.get(MiddleNameDetail.class).getText();
    MiddleNameDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new MiddleNameDetail(text);
    if (middleNameDetail != null || newDetail != null)     changeDetail(middleNameDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(LastNameDetail.class)) {
    String text=detailToTextField.get(LastNameDetail.class).getText();
    LastNameDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new LastNameDetail(text);
    if (lastNameDetail != null || newDetail != null)     changeDetail(lastNameDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(NicknameDetail.class)) {
    String text=detailToTextField.get(NicknameDetail.class).getText();
    NicknameDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new NicknameDetail(text);
    if (nicknameDetail != null || newDetail != null)     changeDetail(nicknameDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(URLDetail.class)) {
    String text=detailToTextField.get(URLDetail.class).getText();
    URL url=null;
    if (!StringUtils.isNullOrEmpty(text,true))     try {
      url=new URL(text);
    }
 catch (    MalformedURLException e1) {
      logger.debug("Failed to update URL detail due to " + "malformed URL.");
    }
    URLDetail newDetail=null;
    if (url != null)     newDetail=new URLDetail("URL",url);
    if (urlDetail != null || newDetail != null)     changeDetail(urlDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(GenderDetail.class)) {
    String text=detailToTextField.get(GenderDetail.class).getText();
    GenderDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new GenderDetail(text);
    if (genderDetail != null || newDetail != null)     changeDetail(genderDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(BirthDateDetail.class)) {
    BirthDateDetail newDetail=null;
    if (birthDayCalendar.getDate() != null) {
      newDetail=new BirthDateDetail(birthDayCalendar.getCalendar());
    }
    if (birthDateDetail != null || newDetail != null)     changeDetail(birthDateDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(AddressDetail.class)) {
    String text=detailToTextField.get(AddressDetail.class).getText();
    AddressDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new AddressDetail(text);
    if (streetAddressDetail != null || newDetail != null)     changeDetail(streetAddressDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(CityDetail.class)) {
    String text=detailToTextField.get(CityDetail.class).getText();
    CityDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new CityDetail(text);
    if (cityDetail != null || newDetail != null)     changeDetail(cityDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(ProvinceDetail.class)) {
    String text=detailToTextField.get(ProvinceDetail.class).getText();
    ProvinceDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new ProvinceDetail(text);
    if (regionDetail != null || newDetail != null)     changeDetail(regionDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(PostalCodeDetail.class)) {
    String text=detailToTextField.get(PostalCodeDetail.class).getText();
    PostalCodeDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new PostalCodeDetail(text);
    if (postalCodeDetail != null || newDetail != null)     changeDetail(postalCodeDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(CountryDetail.class)) {
    String text=detailToTextField.get(CountryDetail.class).getText();
    CountryDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new CountryDetail(text);
    if (countryDetail != null || newDetail != null)     changeDetail(countryDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(EmailAddressDetail.class)) {
    String text=detailToTextField.get(EmailAddressDetail.class).getText();
    EmailAddressDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new EmailAddressDetail(text);
    if (emailDetail != null || newDetail != null)     changeDetail(emailDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(WorkEmailAddressDetail.class)) {
    String text=detailToTextField.get(WorkEmailAddressDetail.class).getText();
    WorkEmailAddressDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new WorkEmailAddressDetail(text);
    if (workEmailDetail != null || newDetail != null)     changeDetail(workEmailDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(PhoneNumberDetail.class)) {
    String text=detailToTextField.get(PhoneNumberDetail.class).getText();
    PhoneNumberDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new PhoneNumberDetail(text);
    if (phoneDetail != null || newDetail != null)     changeDetail(phoneDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(WorkPhoneDetail.class)) {
    String text=detailToTextField.get(WorkPhoneDetail.class).getText();
    WorkPhoneDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new WorkPhoneDetail(text);
    if (workPhoneDetail != null || newDetail != null)     changeDetail(workPhoneDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(MobilePhoneDetail.class)) {
    String text=detailToTextField.get(MobilePhoneDetail.class).getText();
    MobilePhoneDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new MobilePhoneDetail(text);
    if (mobilePhoneDetail != null || newDetail != null)     changeDetail(mobilePhoneDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(WorkOrganizationNameDetail.class)) {
    String text=detailToTextField.get(WorkOrganizationNameDetail.class).getText();
    WorkOrganizationNameDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new WorkOrganizationNameDetail(text);
    if (organizationDetail != null || newDetail != null)     changeDetail(organizationDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(JobTitleDetail.class)) {
    String text=detailToTextField.get(JobTitleDetail.class).getText();
    JobTitleDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new JobTitleDetail(text);
    if (jobTitleDetail != null || newDetail != null)     changeDetail(jobTitleDetail,newDetail);
  }
  if (accountInfoOpSet.isDetailClassSupported(AboutMeDetail.class)) {
    String text=aboutMeArea.getText();
    AboutMeDetail newDetail=null;
    if (!StringUtils.isNullOrEmpty(text,true))     newDetail=new AboutMeDetail(text);
    if (aboutMeDetail != null || newDetail != null)     changeDetail(aboutMeDetail,newDetail);
  }
  try {
    dialog.close(false);
    accountInfoOpSet.save();
  }
 catch (  OperationFailedException e1) {
    logger.debug("Failed to update account details.",e1);
  }
}
