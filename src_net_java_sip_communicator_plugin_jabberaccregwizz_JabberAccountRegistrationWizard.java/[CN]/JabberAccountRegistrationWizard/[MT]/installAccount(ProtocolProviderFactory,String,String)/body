{
  if (logger.isTraceEnabled()) {
    logger.trace("Preparing to install account for user " + userName);
  }
  Hashtable<String,String> accountProperties=new Hashtable<String,String>();
  accountProperties.put(ProtocolProviderFactory.ACCOUNT_ICON_PATH,"resources/images/protocol/jabber/logo32x32.png");
  if (registration.isRememberPassword()) {
    accountProperties.put(ProtocolProviderFactory.PASSWORD,passwd);
  }
  accountProperties.put("SEND_KEEP_ALIVE",String.valueOf(registration.isSendKeepAlive()));
  accountProperties.put("GMAIL_NOTIFICATIONS_ENABLED",String.valueOf(registration.isGmailNotificationEnabled()));
  String serverName=null;
  if (registration.getServerAddress() != null) {
    serverName=registration.getServerAddress();
    if (userName.indexOf(serverName) < 0)     accountProperties.put(ProtocolProviderFactory.IS_SERVER_OVERRIDDEN,Boolean.toString(true));
  }
 else {
    serverName=getServerFromUserName(userName);
  }
  accountProperties.put(ProtocolProviderFactory.SERVER_ADDRESS,serverName);
  accountProperties.put(ProtocolProviderFactory.SERVER_PORT,String.valueOf(registration.getPort()));
  accountProperties.put(ProtocolProviderFactory.RESOURCE,registration.getResource());
  accountProperties.put(ProtocolProviderFactory.RESOURCE_PRIORITY,String.valueOf(registration.getPriority()));
  accountProperties.put(ProtocolProviderFactory.IS_USE_ICE,String.valueOf(registration.isUseIce()));
  accountProperties.put(ProtocolProviderFactory.AUTO_DISCOVER_STUN,String.valueOf(registration.isAutoDiscoverStun()));
  List<StunServerDescriptor> stunServers=registration.getAdditionalStunServers();
  int serverIndex=-1;
  for (  StunServerDescriptor stunServer : stunServers) {
    serverIndex++;
    stunServer.storeDescriptor(accountProperties,ProtocolProviderFactory.STUN_PREFIX + serverIndex);
  }
  if (isModification) {
    providerFactory.modifyAccount(protocolProvider,accountProperties);
    this.isModification=false;
    return protocolProvider;
  }
  try {
    if (logger.isTraceEnabled()) {
      logger.trace("Will install account for user " + userName + " with the following properties."+ accountProperties);
    }
    AccountID accountID=providerFactory.installAccount(userName,accountProperties);
    ServiceReference serRef=providerFactory.getProviderForAccount(accountID);
    protocolProvider=(ProtocolProviderService)JabberAccRegWizzActivator.bundleContext.getService(serRef);
  }
 catch (  IllegalArgumentException exc) {
    logger.warn(exc.getMessage());
    throw new OperationFailedException("Username or password is null.",OperationFailedException.ILLEGAL_ARGUMENT);
  }
catch (  IllegalStateException exc) {
    logger.warn(exc.getMessage());
    throw new OperationFailedException("Account already exists.",OperationFailedException.IDENTIFICATION_CONFLICT);
  }
catch (  Exception exc) {
    logger.warn(exc.getMessage());
    throw new OperationFailedException("Failed to add account",OperationFailedException.GENERAL_ERROR);
  }
  return protocolProvider;
}
