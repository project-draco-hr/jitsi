{
  configService=ServiceUtils.getService(bundleContext,ConfigurationService.class);
  if (configService.getBoolean(OTR_DISABLED_PROP,false)) {
    configService=null;
    return;
  }
  resourceService=ResourceManagementServiceUtils.getService(bundleContext);
  if (resourceService == null) {
    configService=null;
    return;
  }
  uiService=(UIService)dependentService;
  scOtrEngine=new ScOtrEngineImpl();
  otrTransformLayer=new OtrTransformLayer();
  bundleContext.addServiceListener(this);
  ServiceReference[] protocolProviderRefs=null;
  try {
    protocolProviderRefs=bundleContext.getServiceReferences(ProtocolProviderService.class.getName(),null);
  }
 catch (  InvalidSyntaxException ex) {
    logger.error("Error while retrieving service refs",ex);
    return;
  }
  if (protocolProviderRefs != null && protocolProviderRefs.length > 0) {
    if (logger.isDebugEnabled())     logger.debug("Found " + protocolProviderRefs.length + " already installed providers.");
    for (    ServiceReference protocolProviderRef : protocolProviderRefs) {
      ProtocolProviderService provider=(ProtocolProviderService)bundleContext.getService(protocolProviderRef);
      this.handleProviderAdded(provider);
    }
  }
  Hashtable<String,String> containerFilter=new Hashtable<String,String>();
  containerFilter.put(Container.CONTAINER_ID,Container.CONTAINER_CONTACT_RIGHT_BUTTON_MENU.getID());
  bundleContext.registerService(PluginComponent.class.getName(),new OtrMetaContactMenu(Container.CONTAINER_CONTACT_RIGHT_BUTTON_MENU),containerFilter);
  containerFilter.put(Container.CONTAINER_ID,Container.CONTAINER_CHAT_MENU_BAR.getID());
  bundleContext.registerService(PluginComponent.class.getName(),new OtrMetaContactMenu(Container.CONTAINER_CHAT_MENU_BAR),containerFilter);
  containerFilter.put(Container.CONTAINER_ID,Container.CONTAINER_CHAT_TOOL_BAR.getID());
  bundleContext.registerService(PluginComponent.class.getName(),new OtrMetaContactButton(Container.CONTAINER_CHAT_TOOL_BAR),containerFilter);
  if (!configService.getBoolean(OTR_CHAT_CONFIG_DISABLED_PROP,false)) {
    Dictionary<String,String> properties=new Hashtable<String,String>();
    properties.put(ConfigurationForm.FORM_TYPE,ConfigurationForm.SECURITY_TYPE);
    bundleContext.registerService(ConfigurationForm.class.getName(),new LazyConfigurationForm("net.java.sip.communicator.plugin.otr.OtrConfigurationPanel",getClass().getClassLoader(),"plugin.otr.configform.ICON","service.gui.CHAT",1),properties);
  }
}
