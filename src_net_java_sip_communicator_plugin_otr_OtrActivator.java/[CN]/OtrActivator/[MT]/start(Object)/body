{
  configService=ServiceUtils.getService(bundleContext,ConfigurationService.class);
  if (configService.getBoolean(OTR_DISABLED_PROP,false)) {
    configService=null;
    return;
  }
  resourceService=ResourceManagementServiceUtils.getService(bundleContext);
  if (resourceService == null) {
    configService=null;
    return;
  }
  uiService=(UIService)dependentService;
  scOtrEngine=new ScOtrEngineImpl();
  otrContactManager=new OtrContactManager();
  otrTransformLayer=new OtrTransformLayer();
  bundleContext.addServiceListener(this);
  bundleContext.addServiceListener(scOtrEngine);
  bundleContext.addServiceListener(otrContactManager);
  ServiceReference[] protocolProviderRefs=ServiceUtils.getServiceReferences(bundleContext,ProtocolProviderService.class);
  if (protocolProviderRefs != null && protocolProviderRefs.length > 0) {
    if (logger.isDebugEnabled()) {
      logger.debug("Found " + protocolProviderRefs.length + " already installed providers.");
    }
    for (    ServiceReference protocolProviderRef : protocolProviderRefs) {
      ProtocolProviderService provider=(ProtocolProviderService)bundleContext.getService(protocolProviderRef);
      this.handleProviderAdded(provider);
    }
  }
  if (!OSUtils.IS_ANDROID) {
    Hashtable<String,String> containerFilter=new Hashtable<String,String>();
    containerFilter.put(Container.CONTAINER_ID,Container.CONTAINER_CONTACT_RIGHT_BUTTON_MENU.getID());
    bundleContext.registerService(PluginComponentFactory.class.getName(),new OtrPluginComponentFactory(Container.CONTAINER_CONTACT_RIGHT_BUTTON_MENU),containerFilter);
    containerFilter.put(Container.CONTAINER_ID,Container.CONTAINER_CHAT_MENU_BAR.getID());
    bundleContext.registerService(PluginComponentFactory.class.getName(),new OtrPluginComponentFactory(Container.CONTAINER_CHAT_MENU_BAR),containerFilter);
    containerFilter.put(Container.CONTAINER_ID,Container.CONTAINER_CHAT_TOOL_BAR.getID());
    bundleContext.registerService(PluginComponentFactory.class.getName(),new OtrPluginComponentFactory(Container.CONTAINER_CHAT_TOOL_BAR),containerFilter);
    bundleContext.registerService(OtrActionHandler.class.getName(),new SwingOtrActionHandler(),null);
    containerFilter.put(Container.CONTAINER_ID,Container.CONTAINER_CHAT_WRITE_PANEL.getID());
    bundleContext.registerService(PluginComponentFactory.class.getName(),new PluginComponentFactory(Container.CONTAINER_CHAT_WRITE_PANEL){
      @Override protected PluginComponent getPluginInstance(){
        return new OTRv3OutgoingSessionSwitcher(getContainer(),this);
      }
    }
,containerFilter);
  }
  if (!configService.getBoolean(OTR_CHAT_CONFIG_DISABLED_PROP,false) && !OSUtils.IS_ANDROID) {
    Dictionary<String,String> properties=new Hashtable<String,String>();
    properties.put(ConfigurationForm.FORM_TYPE,ConfigurationForm.SECURITY_TYPE);
    bundleContext.registerService(ConfigurationForm.class.getName(),new LazyConfigurationForm("net.java.sip.communicator.plugin.otr.authdialog." + "OtrConfigurationPanel",getClass().getClassLoader(),"plugin.otr.configform.ICON","service.gui.CHAT",1),properties);
  }
}
