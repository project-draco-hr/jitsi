{
  CallPeerJabberImpl peer=getCallPeer();
  CallJabberImpl call=peer.getCall();
  List<ContentPacketExtension> cpes=(theirOffer == null) ? ourAnswer : theirOffer;
  if (call.getConference().isJitsiVideobridge()) {
    Map<ContentPacketExtension,ContentPacketExtension> contentMap=new LinkedHashMap<ContentPacketExtension,ContentPacketExtension>();
    for (    ContentPacketExtension cpe : cpes) {
      RtpDescriptionPacketExtension rdpe=cpe.getFirstChildOfType(RtpDescriptionPacketExtension.class);
      MediaType mediaType=MediaType.parseString(rdpe.getMedia());
      if ((colibri == null) || (colibri.getContent(mediaType.toString()) == null)) {
        ContentPacketExtension local, remote;
        if (cpes == ourAnswer) {
          local=cpe;
          remote=(theirOffer == null) ? null : findContentByName(theirOffer,cpe.getName());
        }
 else {
          local=findContentByName(ourAnswer,cpe.getName());
          remote=cpe;
        }
        contentMap.put(local,remote);
      }
    }
    if (!contentMap.isEmpty()) {
      if (colibri == null)       colibri=new ColibriConferenceIQ();
      for (      Map.Entry<ContentPacketExtension,ContentPacketExtension> e : contentMap.entrySet()) {
        ContentPacketExtension cpe=e.getValue();
        if (cpe == null)         cpe=e.getKey();
        RtpDescriptionPacketExtension rdpe=cpe.getFirstChildOfType(RtpDescriptionPacketExtension.class);
        colibri.getOrCreateContent(rdpe.getMedia());
      }
      ColibriConferenceIQ conferenceResult=call.createColibriChannels(peer,contentMap);
      if (conferenceResult != null) {
        String videoBridgeID=colibri.getID();
        String conferenceResultID=conferenceResult.getID();
        if (videoBridgeID == null)         colibri.setID(conferenceResultID);
 else         if (!videoBridgeID.equals(conferenceResultID))         throw new IllegalStateException("conference.id");
        for (        ColibriConferenceIQ.Content contentResult : conferenceResult.getContents()) {
          ColibriConferenceIQ.Content content=colibri.getOrCreateContent(contentResult.getName());
          for (          ColibriConferenceIQ.Channel channelResult : contentResult.getChannels()) {
            if (content.getChannel(channelResult.getID()) == null) {
              content.addChannel(channelResult);
            }
          }
        }
      }
 else {
        ProtocolProviderServiceJabberImpl.throwOperationFailedException("Failed to allocate colibri channel.",OperationFailedException.GENERAL_ERROR,null,Logger.getLogger(RawUdpTransportManager.class));
      }
    }
  }
  for (  ContentPacketExtension cpe : cpes) {
    RtpDescriptionPacketExtension rtpDesc=cpe.getFirstChildOfType(RtpDescriptionPacketExtension.class);
    MediaType mediaType=MediaType.parseString(rtpDesc.getMedia());
    StreamConnector connector=getStreamConnector(mediaType);
    RawUdpTransportPacketExtension ourTransport=createTransport(mediaType,connector);
    ContentPacketExtension ourCpe=findContentByName(ourAnswer,cpe.getName());
    if (ourCpe != null)     ourCpe.addChildExtension(ourTransport);
  }
  this.local=ourAnswer;
}
