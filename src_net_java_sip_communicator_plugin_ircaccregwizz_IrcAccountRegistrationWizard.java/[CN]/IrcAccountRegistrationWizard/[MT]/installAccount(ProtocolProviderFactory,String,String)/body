{
  Hashtable<String,String> accountProperties=new Hashtable<String,String>();
  accountProperties.put(ProtocolProviderFactory.SERVER_ADDRESS,registration.getServer());
  accountProperties.put(ProtocolProviderFactory.ACCOUNT_ICON_PATH,"resources/images/protocol/irc/irc32x32.png");
  if (password != null && !password.equals("")) {
    accountProperties.put(ProtocolProviderFactory.PASSWORD,registration.getPassword());
  }
  if (!registration.getPort().equals("")) {
    accountProperties.put(ProtocolProviderFactory.SERVER_PORT,registration.getPort());
  }
  accountProperties.put(ProtocolProviderFactory.AUTO_CHANGE_USER_NAME,Boolean.toString(registration.isAutoChangeNick()));
  accountProperties.put(IrcAccountRegistrationWizard.RESOLVE_DNS_THROUGH_PROXY,Boolean.toString(registration.isResolveDnsThroughProxy()));
  accountProperties.put(ProtocolProviderFactory.NO_PASSWORD_REQUIRED,Boolean.toString(!registration.isRequiredPassword()));
  accountProperties.put(ProtocolProviderFactory.DEFAULT_ENCRYPTION,Boolean.toString(registration.isSecureConnection()).toString());
  accountProperties.put(CONTACT_PRESENCE_TASK,Boolean.toString(registration.isContactPresenceTaskEnabled()));
  accountProperties.put(CHAT_ROOM_PRESENCE_TASK,Boolean.toString(registration.isChatRoomPresenceTaskEnabled()));
  accountProperties.put(SASL_ENABLED,Boolean.toString(registration.isSaslEnabled()));
  accountProperties.put(SASL_USERNAME,registration.getSaslUser());
  accountProperties.put(SASL_ROLE,registration.getSaslRole());
  if (isModification()) {
    providerFactory.modifyAccount(this.protocolProvider,accountProperties);
    setModification(false);
    return this.protocolProvider;
  }
  try {
    AccountID accountID=providerFactory.installAccount(user,accountProperties);
    ServiceReference<ProtocolProviderService> serRef=providerFactory.getProviderForAccount(accountID);
    protocolProvider=(ProtocolProviderService)IrcAccRegWizzActivator.bundleContext.getService(serRef);
  }
 catch (  IllegalStateException exc) {
    logger.warn(exc.getMessage());
    throw new OperationFailedException("Account already exists.",OperationFailedException.IDENTIFICATION_CONFLICT);
  }
catch (  Exception exc) {
    logger.warn(exc.getMessage());
    throw new OperationFailedException("Failed to add account",OperationFailedException.GENERAL_ERROR);
  }
  return protocolProvider;
}
