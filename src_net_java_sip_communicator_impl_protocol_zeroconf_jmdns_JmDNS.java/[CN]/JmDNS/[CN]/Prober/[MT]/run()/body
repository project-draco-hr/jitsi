{
synchronized (ioLock) {
    DNSOutgoing out=null;
    try {
      if (state == taskState && task == this) {
        if (out == null) {
          out=new DNSOutgoing(DNSConstants.FLAGS_QR_QUERY);
        }
        out.addQuestion(new DNSQuestion(localHost.getName(),DNSConstants.TYPE_ANY,DNSConstants.CLASS_IN));
        DNSRecord answer=localHost.getDNS4AddressRecord();
        if (answer != null) {
          out.addAuthorativeAnswer(answer);
        }
        answer=localHost.getDNS6AddressRecord();
        if (answer != null) {
          out.addAuthorativeAnswer(answer);
        }
        advanceState();
      }
      List list;
synchronized (JmDNS.this) {
        list=new LinkedList(services.values());
      }
      for (Iterator i=list.iterator(); i.hasNext(); ) {
        ServiceInfo info=(ServiceInfo)i.next();
synchronized (info) {
          if (info.getState() == taskState && info.task == this) {
            info.advanceState();
            logger.fine("run() JmDNS probing " + info.getQualifiedName() + " state "+ info.getState());
            if (out == null) {
              out=new DNSOutgoing(DNSConstants.FLAGS_QR_QUERY);
              out.addQuestion(new DNSQuestion(info.getQualifiedName(),DNSConstants.TYPE_ANY,DNSConstants.CLASS_IN));
            }
            out.addAuthorativeAnswer(new DNSRecord.Service(info.getQualifiedName(),DNSConstants.TYPE_SRV,DNSConstants.CLASS_IN,DNSConstants.DNS_TTL,info.priority,info.weight,info.port,localHost.getName()));
          }
        }
      }
      if (out != null) {
        logger.finer("run() JmDNS probing #" + taskState);
        send(out);
      }
 else {
        cancel();
        return;
      }
    }
 catch (    Throwable e) {
      logger.log(Level.WARNING,"run() exception ",e);
      recover();
    }
    taskState=taskState.advance();
    if (!taskState.isProbing()) {
      cancel();
      new Announcer().start();
    }
  }
}
