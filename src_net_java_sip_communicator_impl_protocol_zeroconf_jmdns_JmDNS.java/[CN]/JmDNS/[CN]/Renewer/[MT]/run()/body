{
  DNSOutgoing out=null;
  try {
    if (state == taskState) {
      if (out == null) {
        out=new DNSOutgoing(DNSConstants.FLAGS_QR_RESPONSE | DNSConstants.FLAGS_AA);
      }
      DNSRecord answer=localHost.getDNS4AddressRecord();
      if (answer != null) {
        out.addAnswer(answer,0);
      }
      answer=localHost.getDNS6AddressRecord();
      if (answer != null) {
        out.addAnswer(answer,0);
      }
      advanceState();
    }
    List<ServiceInfo> list;
synchronized (JmDNS.this) {
      list=new ArrayList<ServiceInfo>(services.values());
    }
    for (Iterator<ServiceInfo> i=list.iterator(); i.hasNext(); ) {
      ServiceInfo info=i.next();
synchronized (info) {
        if (info.getState() == taskState && info.task == this) {
          info.advanceState();
          if (logger.isDebugEnabled())           logger.debug("run() JmDNS announced " + info.getQualifiedName() + " state "+ info.getState());
          if (out == null) {
            out=new DNSOutgoing(DNSConstants.FLAGS_QR_RESPONSE | DNSConstants.FLAGS_AA);
          }
          out.addAnswer(new DNSRecord.Pointer(info.type,DNSConstants.TYPE_PTR,DNSConstants.CLASS_IN,DNSConstants.DNS_TTL,info.getQualifiedName()),0);
          out.addAnswer(new DNSRecord.Service(info.getQualifiedName(),DNSConstants.TYPE_SRV,DNSConstants.CLASS_IN,DNSConstants.DNS_TTL,info.priority,info.weight,info.port,localHost.getName()),0);
          out.addAnswer(new DNSRecord.Text(info.getQualifiedName(),DNSConstants.TYPE_TXT,DNSConstants.CLASS_IN,DNSConstants.DNS_TTL,info.text),0);
        }
      }
    }
    if (out != null) {
      if (logger.isDebugEnabled())       logger.debug("run() JmDNS announced");
      send(out);
    }
 else {
      cancel();
    }
  }
 catch (  Throwable e) {
    logger.warn("run() exception ",e);
    recover();
  }
  taskState=taskState.advance();
  if (!taskState.isAnnounced()) {
    cancel();
  }
}
