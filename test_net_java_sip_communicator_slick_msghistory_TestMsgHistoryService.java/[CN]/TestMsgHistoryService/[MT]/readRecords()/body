{
  Collection<EventObject> rs=msgHistoryService.findByKeyword(testMetaContact,"test");
  assertTrue("Nothing found findByKeyword ",!rs.isEmpty());
  List<String> msgs=getMessages(rs);
  assertTrue("Messages too few - findByKeyword",msgs.size() >= 3);
  rs=msgHistoryService.findByKeyword(testMetaContact,"Test",false);
  assertTrue("Nothing found findByKeyword caseINsensitive search",!rs.isEmpty());
  msgs=getMessages(rs);
  assertTrue("Messages too few - findByKeyword",msgs.size() >= 3);
  rs=msgHistoryService.findByKeyword(testMetaContact,"Test",true);
  assertFalse("Something found by findByKeyword casesensitive search",!rs.isEmpty());
  rs=msgHistoryService.findByEndDate(testMetaContact,controlDate2);
  assertTrue("Nothing found findByEndDate",!rs.isEmpty());
  msgs=getMessages(rs);
  assertTrue("Messages too few - findByEndDate",msgs.size() >= 3);
  rs=msgHistoryService.findByKeywords(testMetaContact,new String[]{"test","word2"});
  assertTrue("Nothing found findByKeywords",!rs.isEmpty());
  msgs=getMessages(rs);
  assertTrue("Messages too few - findByKeywords",msgs.size() >= 1);
  rs=msgHistoryService.findByKeywords(testMetaContact,new String[]{"test1","word2"});
  assertFalse("Something found findByKeywords",!rs.isEmpty());
  rs=msgHistoryService.findByPeriod(testMetaContact,controlDate1,controlDate2);
  assertFalse("Nothing found findByPeriod",rs.isEmpty());
  msgs=getMessages(rs);
  assertEquals("Messages must be 2",2,msgs.size());
  assertTrue("Message no found",msgs.contains(messagesToSend[1].getContent()));
  assertTrue("Message no found",msgs.contains(messagesToSend[2].getContent()));
  rs=msgHistoryService.findByPeriod(testMetaContact,controlDate1,controlDate2,new String[]{"word2"});
  assertTrue("Nothing found findByPeriod",!rs.isEmpty());
  msgs=getMessages(rs);
  assertEquals("Messages must be 1",1,msgs.size());
  assertTrue("Message no found",msgs.contains(messagesToSend[1].getContent()));
  rs=msgHistoryService.findByStartDate(testMetaContact,controlDate2);
  assertTrue("Nothing found findByStartDate",!rs.isEmpty());
  msgs=getMessages(rs);
  assertEquals("Messages must be 2",2,msgs.size());
  assertTrue("Message no found",msgs.contains(messagesToSend[3].getContent()));
  assertTrue("Message no found",msgs.contains(messagesToSend[4].getContent()));
  rs=msgHistoryService.findLast(testMetaContact,3);
  assertTrue("Nothing found 8",!rs.isEmpty());
  msgs=getMessages(rs);
  assertEquals("Messages must be 3",3,msgs.size());
  assertTrue("Message no found",msgs.contains(messagesToSend[2].getContent()));
  assertTrue("Message no found",msgs.contains(messagesToSend[3].getContent()));
  assertTrue("Message no found",msgs.contains(messagesToSend[4].getContent()));
  rs=msgHistoryService.findFirstMessagesAfter(testMetaContact,controlDate1,3);
  assertTrue("Nothing found 9",!rs.isEmpty());
  msgs=getMessages(rs);
  assertEquals("Messages must be 3",3,msgs.size());
  assertTrue("Message no found",msgs.contains(messagesToSend[1].getContent()));
  assertTrue("Message no found",msgs.contains(messagesToSend[2].getContent()));
  assertTrue("Message no found",msgs.contains(messagesToSend[3].getContent()));
  rs=msgHistoryService.findLastMessagesBefore(testMetaContact,controlDate2,3);
  assertTrue("Nothing found 10",!rs.isEmpty());
  msgs=getMessages(rs);
  assertEquals("Messages must be 3",3,msgs.size());
  assertTrue("Message no found",msgs.contains(messagesToSend[0].getContent()));
  assertTrue("Message no found",msgs.contains(messagesToSend[1].getContent()));
  assertTrue("Message no found",msgs.contains(messagesToSend[2].getContent()));
}
