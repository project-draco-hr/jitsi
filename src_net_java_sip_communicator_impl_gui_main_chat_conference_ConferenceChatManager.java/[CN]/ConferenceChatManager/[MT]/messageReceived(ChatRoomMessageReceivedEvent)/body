{
  ChatRoom sourceChatRoom=(ChatRoom)evt.getSource();
  ChatRoomMember sourceMember=evt.getSourceChatRoomMember();
  String messageType=null;
switch (evt.getEventType()) {
case ChatRoomMessageReceivedEvent.CONVERSATION_MESSAGE_RECEIVED:
    messageType=Chat.INCOMING_MESSAGE;
  break;
case ChatRoomMessageReceivedEvent.SYSTEM_MESSAGE_RECEIVED:
messageType=Chat.SYSTEM_MESSAGE;
break;
case ChatRoomMessageReceivedEvent.ACTION_MESSAGE_RECEIVED:
messageType=Chat.ACTION_MESSAGE;
break;
}
logger.info("MESSAGE RECEIVED from " + sourceMember.getContactAddress());
logger.trace("MESSAGE RECEIVED from contact: " + sourceMember.getContactAddress());
Message message=evt.getMessage();
ChatPanel chatPanel=null;
ChatWindowManager chatWindowManager=GuiActivator.getUIService().getChatWindowManager();
if (sourceChatRoom.isSystem()) {
ChatRoomProviderWrapper serverWrapper=chatRoomList.findServerWrapperFromProvider(sourceChatRoom.getParentProvider());
chatPanel=chatWindowManager.getMultiChat(serverWrapper.getSystemRoomWrapper());
}
 else {
chatPanel=chatWindowManager.getMultiChat(sourceChatRoom,message.getMessageUID());
}
String messageContent=message.getContent();
chatPanel.addMessage(sourceMember.getName(),evt.getTimestamp(),messageType,messageContent,message.getContentType());
chatWindowManager.openChat(chatPanel,false);
boolean fireChatNotification;
if (sourceChatRoom.isSystem() || isPrivate(sourceChatRoom) || (messageContent == null)) fireChatNotification=true;
 else {
String nickname=sourceChatRoom.getUserNickname();
fireChatNotification=(nickname == null) || messageContent.toLowerCase().contains(nickname.toLowerCase());
}
if (fireChatNotification) {
String title=GuiActivator.getResources().getI18NString("service.gui.MSG_RECEIVED",new String[]{sourceMember.getName()});
NotificationManager.fireChatNotification(sourceChatRoom,NotificationManager.INCOMING_MESSAGE,title,messageContent);
}
}
