{
  ChatRoom sourceChatRoom=evt.getSourceChatRoom();
  ChatRoomMember sourceMember=evt.getSourceChatRoomMember();
  String messageType=null;
switch (evt.getEventType()) {
case ChatRoomMessageReceivedEvent.CONVERSATION_MESSAGE_RECEIVED:
    messageType=Chat.INCOMING_MESSAGE;
  break;
case ChatRoomMessageReceivedEvent.SYSTEM_MESSAGE_RECEIVED:
messageType=Chat.SYSTEM_MESSAGE;
break;
case ChatRoomMessageReceivedEvent.ACTION_MESSAGE_RECEIVED:
messageType=Chat.ACTION_MESSAGE;
break;
}
if (logger.isTraceEnabled()) logger.trace("MESSAGE RECEIVED from contact: " + sourceMember.getContactAddress());
Message message=evt.getMessage();
ChatPanel chatPanel=null;
ChatWindowManager chatWindowManager=GuiActivator.getUIService().getChatWindowManager();
if (sourceChatRoom.isSystem()) {
ChatRoomProviderWrapper serverWrapper=GuiActivator.getMUCService().findServerWrapperFromProvider(sourceChatRoom.getParentProvider());
chatPanel=chatWindowManager.getMultiChat(serverWrapper.getSystemRoomWrapper(),true);
}
 else {
chatPanel=chatWindowManager.getMultiChat(sourceChatRoom,true,message.getMessageUID());
}
String messageContent=message.getContent();
if (evt.isHistoryMessage()) {
Date timeStamp=chatPanel.getChatConversationPanel().getLastIncomingMsgTimestamp();
Collection<Object> c=chatPanel.getChatSession().getHistoryBeforeDate(new Date(timeStamp.equals(new Date(0)) ? System.currentTimeMillis() - 10000 : timeStamp.getTime()),20);
if (c.size() > 0) {
boolean isPresent=false;
for (Object o : c) {
if (o instanceof ChatRoomMessageDeliveredEvent) {
ChatRoomMessageDeliveredEvent ev=(ChatRoomMessageDeliveredEvent)o;
if (evt.getTimestamp() != null && evt.getTimestamp().equals(ev.getTimestamp())) {
isPresent=true;
break;
}
}
 else if (o instanceof ChatRoomMessageReceivedEvent) {
ChatRoomMessageReceivedEvent ev=(ChatRoomMessageReceivedEvent)o;
if (evt.getTimestamp() != null && evt.getTimestamp().equals(ev.getTimestamp())) {
isPresent=true;
break;
}
}
}
if (isPresent) return;
}
}
chatPanel.addMessage(sourceMember.getName(),null,evt.getTimestamp(),messageType,messageContent,message.getContentType(),message.getMessageUID(),null);
chatWindowManager.openChat(chatPanel,false);
}
