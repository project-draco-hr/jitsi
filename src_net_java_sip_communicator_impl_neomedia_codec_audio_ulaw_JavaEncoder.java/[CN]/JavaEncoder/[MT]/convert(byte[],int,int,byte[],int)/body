{
  int sample, signBit, inputSample;
  int i;
  for (i=inputOffset + msbOffset; i < (inputLength + inputOffset); ) {
    if (8 == inputSampleSize) {
      inputSample=input[i++] << 8;
      if (downmix)       inputSample=((inputSample & signMask) + ((input[i++] << 8) & signMask)) >> 1;
    }
 else {
      inputSample=(input[i] << 8) + (0xff & input[i + lsbOffset]);
      i+=2;
      if (downmix) {
        inputSample=((inputSample & signMask) + (((input[i] << 8) + (0xff & input[i + lsbOffset])) & signMask)) >> 1;
        i+=2;
      }
    }
    sample=(int)((short)(inputSample + inputBias));
    if (sample >= 0) {
      signBit=0x80;
    }
 else {
      sample=-sample;
      signBit=0x00;
    }
    sample=(132 + sample) >> 3;
    outData[outputOffset++]=(byte)((sample < 0x0020) ? (signBit | (7 << 4) | (31 - (sample >> 0))) : (sample < 0x0040) ? (signBit | (6 << 4) | (31 - (sample >> 1))) : (sample < 0x0080) ? (signBit | (5 << 4) | (31 - (sample >> 2))) : (sample < 0x0100) ? (signBit | (4 << 4) | (31 - (sample >> 3))) : (sample < 0x0200) ? (signBit | (3 << 4) | (31 - (sample >> 4))) : (sample < 0x0400) ? (signBit | (2 << 4) | (31 - (sample >> 5))) : (sample < 0x0800) ? (signBit | (1 << 4) | (31 - (sample >> 6))) : (sample < 0x1000) ? (signBit | (0 << 4) | (31 - (sample >> 7))) : (signBit | (0 << 4) | (31 - (0xfff >> 7))));
  }
}
