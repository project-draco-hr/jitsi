{
  int bufferIx_tmp, bits_to_store, bits_in_stream, nBytes, mask;
  long base_Q24;
  base_Q24=psRC.base_Q32 >>> 8;
  int[] nBytes_ptr=new int[1];
  bits_in_stream=SKP_Silk_range_coder_get_length(psRC,nBytes_ptr);
  nBytes=nBytes_ptr[0];
  bits_to_store=bits_in_stream - (psRC.bufferIx << 3);
  base_Q24+=0x00800000 >>> (bits_to_store - 1);
  base_Q24=base_Q24 & 0xFFFFFFFFL;
  base_Q24&=0xFFFFFFFF << (24 - bits_to_store);
  if ((base_Q24 & 0x01000000) != 0) {
    bufferIx_tmp=psRC.bufferIx;
    while ((++(psRC.buffer[--bufferIx_tmp])) == 0)     ;
  }
  if (psRC.bufferIx < psRC.bufferLength) {
    psRC.buffer[psRC.bufferIx++]=(byte)(base_Q24 >>> 16);
    if (bits_to_store > 8) {
      if (psRC.bufferIx < psRC.bufferLength) {
        psRC.buffer[psRC.bufferIx++]=(byte)(base_Q24 >>> 8);
      }
    }
  }
  if ((bits_in_stream & 7) != 0) {
    mask=0xFF >> (bits_in_stream & 7);
    if (nBytes - 1 < psRC.bufferLength) {
      psRC.buffer[nBytes - 1]|=mask;
    }
  }
}
