{
  this.grabSnapshot=new JButton();
  this.grabSnapshot.setText(DesktopUtilActivator.getResources().getI18NString("service.gui.avatar.imagepicker.CLICK"));
  this.grabSnapshot.setName("grab");
  this.grabSnapshot.addActionListener(this);
  this.grabSnapshot.setEnabled(false);
  JButton cancelButton=new JButton(DesktopUtilActivator.getResources().getI18NString("service.gui.avatar.imagepicker.CANCEL"));
  cancelButton.setName("cancel");
  cancelButton.addActionListener(this);
  initAccessWebcam();
  TransparentPanel timerPanel=new TransparentPanel();
  timerPanel.setLayout(new GridLayout(0,timerImages.length));
  TransparentPanel tp;
  for (int i=0; i < this.timerImages.length; i++) {
    this.timerImages[i]=new TimerImage("" + (timerImages.length - i));
    tp=new TransparentPanel();
    tp.add(this.timerImages[i],BorderLayout.CENTER);
    timerPanel.add(tp);
  }
  TransparentPanel buttonsPanel=new TransparentPanel(new FlowLayout(FlowLayout.RIGHT));
  buttonsPanel.add(this.grabSnapshot);
  buttonsPanel.add(cancelButton);
  TransparentPanel southPanel=new TransparentPanel(new BorderLayout());
  southPanel.add(timerPanel,BorderLayout.CENTER);
  southPanel.add(buttonsPanel,BorderLayout.SOUTH);
  TransparentPanel videoPanel=new TransparentPanel(new FlowLayout(FlowLayout.CENTER));
  videoPanel.add(this.videoContainer);
  this.add(videoPanel,BorderLayout.CENTER);
  this.add(southPanel,BorderLayout.SOUTH);
  this.setResizable(false);
}
