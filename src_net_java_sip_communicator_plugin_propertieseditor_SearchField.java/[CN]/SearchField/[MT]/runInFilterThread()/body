{
  String prevFilter=null;
  long prevFilterTime=0;
  do {
    final String filter;
synchronized (filterSyncRoot) {
      filter=this.filter;
      if ((prevFilterTime != 0) && StringUtils.isEquals(filter,prevFilter)) {
        long timeout=FILTER_THREAD_TIMEOUT - (System.currentTimeMillis() - prevFilterTime);
        if (timeout > 0) {
          try {
            filterSyncRoot.wait(timeout);
            continue;
          }
 catch (          InterruptedException ie) {
          }
        }
        if (Thread.currentThread().equals(filterThread))         filterThread=null;
        break;
      }
    }
    List<String> properties=confService.getAllPropertyNames();
    final List<Object[]> rows=new ArrayList<Object[]>(properties.size());
    for (    String property : properties) {
      if ((filter == null) || property.contains(filter)) {
        rows.add(new Object[]{property,confService.getProperty(property)});
      }
    }
    if (StringUtils.isEquals(filter,this.filter)) {
      LowPriorityEventQueue.invokeLater(new Runnable(){
        public void run(){
          DefaultTableModel model=(DefaultTableModel)table.getModel();
          model.setRowCount(0);
          for (          Object[] row : rows) {
            model.addRow(row);
            if (filter != SearchField.this.filter)             return;
          }
        }
      }
);
    }
    prevFilter=filter;
    prevFilterTime=System.currentTimeMillis();
  }
 while (true);
}
