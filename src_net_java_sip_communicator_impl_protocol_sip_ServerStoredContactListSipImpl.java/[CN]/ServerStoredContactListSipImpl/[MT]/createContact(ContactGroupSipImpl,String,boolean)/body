{
  if (parentGroup == null) {
    throw new IllegalArgumentException("Parent group cannot be null");
  }
  if (contactId == null || contactId.trim().length() == 0) {
    throw new IllegalArgumentException("Contact identifier cannot be null or empty");
  }
  if (logger.isTraceEnabled()) {
    logger.trace(String.format("createContact %1s, %2s, %3s",parentGroup.getGroupName(),contactId,persistent));
  }
  if (parentGroup.getContact(contactId) != null) {
    throw new OperationFailedException("Contact " + contactId + " already exists.",OperationFailedException.SUBSCRIPTION_ALREADY_EXISTS);
  }
  Address contactAddress;
  try {
    contactAddress=sipProvider.parseAddressString(contactId);
  }
 catch (  ParseException ex) {
    throw new IllegalArgumentException(contactId + " is not a valid string.",ex);
  }
  ContactSipImpl newContact=new ContactSipImpl(contactAddress,sipProvider);
  newContact.setPersistent(persistent);
  String name=((SipURI)contactAddress.getURI()).getUser();
  newContact.setDisplayName(name);
  parentGroup.addContact(newContact);
  if (newContact.isPersistent()) {
    try {
      updateResourceLists();
    }
 catch (    XCapException e) {
      parentGroup.removeContact(newContact);
      throw new OperationFailedException("Error while creating XCAP contact",OperationFailedException.NETWORK_FAILURE,e);
    }
    newContact.setResolved(true);
    newContact.setXCapResolved(true);
    if (!isContactExistsInWhiteRule(contactId)) {
      addContactToWhiteList(newContact);
      try {
        updatePresRules();
      }
 catch (      XCapException e) {
        logger.error("Error while creating XCAP contact",e);
      }
    }
  }
  fireContactAdded(parentGroup,newContact);
  return newContact;
}
