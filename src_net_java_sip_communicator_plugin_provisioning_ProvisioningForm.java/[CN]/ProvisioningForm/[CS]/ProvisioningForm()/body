{
  super(new BorderLayout());
  final ResourceManagementService resources=ProvisioningActivator.getResourceService();
  ConfigurationService config=ProvisioningActivator.getConfigurationService();
  enableCheckBox=new SIPCommCheckBox(resources.getI18NString("plugin.provisioning.ENABLE_DISABLE"));
  dhcpButton=new SIPCommRadioButton(resources.getI18NString("plugin.provisioning.DHCP"));
  dnsButton=new SIPCommRadioButton(resources.getI18NString("plugin.provisioning.DNS"));
  bonjourButton=new SIPCommRadioButton(resources.getI18NString("plugin.provisioning.BONJOUR"));
  manualButton=new SIPCommRadioButton(resources.getI18NString("plugin.provisioning.MANUAL"));
  uriField=new SIPCommTextField(resources.getI18NString("plugin.provisioning.URI"));
  JPanel mainPanel=new TransparentPanel();
  add(mainPanel,BorderLayout.NORTH);
  mainPanel.setLayout(new GridBagLayout());
  GridBagConstraints c=new GridBagConstraints();
  enableCheckBox.setAlignmentX(Component.LEFT_ALIGNMENT);
  c.fill=GridBagConstraints.HORIZONTAL;
  c.weightx=1.0;
  c.gridx=0;
  c.gridy=0;
  c.insets=new Insets(0,0,10,0);
  mainPanel.add(enableCheckBox,c);
  final ButtonGroup buttonGroup=new ButtonGroup();
  buttonGroup.add(dhcpButton);
  buttonGroup.add(bonjourButton);
  buttonGroup.add(dnsButton);
  buttonGroup.add(manualButton);
  final JPanel radioButtonPanel=new TransparentPanel(new GridLayout(0,1));
  radioButtonPanel.setBorder(BorderFactory.createTitledBorder(resources.getI18NString("plugin.provisioning.AUTO")));
  radioButtonPanel.add(dhcpButton);
  radioButtonPanel.add(bonjourButton);
  radioButtonPanel.add(dnsButton);
  c.fill=GridBagConstraints.HORIZONTAL;
  c.weightx=1.0;
  c.insets=new Insets(0,20,0,0);
  c.gridx=0;
  c.gridy=1;
  mainPanel.add(radioButtonPanel,c);
  c.fill=GridBagConstraints.HORIZONTAL;
  c.weightx=1.0;
  c.insets=new Insets(0,26,0,0);
  c.gridx=0;
  c.gridy=2;
  mainPanel.add(manualButton,c);
  c.fill=GridBagConstraints.HORIZONTAL;
  c.weightx=1.0;
  c.insets=new Insets(0,51,0,0);
  c.gridx=0;
  c.gridy=3;
  mainPanel.add(uriField,c);
  JPanel uuidPanel=new TransparentPanel(new FlowLayout(FlowLayout.LEFT));
  final JTextField uuidPane=new JTextField();
  uuidPane.setEditable(false);
  uuidPane.setOpaque(false);
  uuidPane.setText(config.getString(ProvisioningServiceImpl.PROVISIONING_UUID_PROP));
  uuidPanel.add(new JLabel(resources.getI18NString("plugin.provisioning.UUID")));
  uuidPanel.add(uuidPane);
  c.fill=GridBagConstraints.HORIZONTAL;
  c.weightx=0;
  c.insets=new Insets(10,10,0,0);
  c.gridwidth=GridBagConstraints.REMAINDER;
  c.gridx=0;
  c.gridy=4;
  mainPanel.add(uuidPanel,c);
  JButton clipboardBtn=new JButton(resources.getI18NString("plugin.provisioning.COPYTOCLIPBOARD"));
  clipboardBtn.addActionListener(new ActionListener(){
    /** 
 * {@inheritsDoc}
 */
    public void actionPerformed(    ActionEvent evt){
      Clipboard clipboard=Toolkit.getDefaultToolkit().getSystemClipboard();
      if (clipboard != null) {
        String selection=uuidPane.getText();
        StringSelection data=new StringSelection(selection);
        clipboard.setContents(data,data);
      }
 else {
        JOptionPane.showMessageDialog(ProvisioningForm.this,resources.getI18NString("plugin.provisioning.CLIPBOARD_FAILED"),resources.getI18NString("plugin.provisioning.CLIPBOARD_FAILED"),JOptionPane.ERROR_MESSAGE);
      }
    }
  }
);
  c.fill=GridBagConstraints.HORIZONTAL;
  c.weightx=1.0;
  c.insets=new Insets(5,10,0,0);
  c.gridwidth=0;
  c.gridx=0;
  c.gridy=5;
  mainPanel.add(clipboardBtn,c);
  JPanel userPassPanel=new TransparentPanel(new BorderLayout());
  userPassPanel.setBorder(BorderFactory.createTitledBorder(ProvisioningActivator.getResourceService().getI18NString("plugin.provisioning.CREDENTIALS")));
  JPanel labelPanel=new TransparentPanel(new GridLayout(0,1));
  labelPanel.setBorder(BorderFactory.createEmptyBorder(4,8,4,0));
  JPanel valuesPanel=new TransparentPanel(new GridLayout(0,1));
  valuesPanel.setBorder(BorderFactory.createEmptyBorder(4,4,4,0));
  labelPanel.add(new JLabel(ProvisioningActivator.getResourceService().getI18NString("plugin.simpleaccregwizz.LOGIN_USERNAME")));
  labelPanel.add(new JLabel(ProvisioningActivator.getResourceService().getI18NString("service.gui.PASSWORD")));
  usernameField=new JTextField();
  usernameField.setEditable(false);
  passwordField=new JPasswordField();
  passwordField.setEditable(false);
  valuesPanel.add(usernameField);
  valuesPanel.add(passwordField);
  userPassPanel.add(labelPanel,BorderLayout.WEST);
  userPassPanel.add(valuesPanel,BorderLayout.CENTER);
  JPanel buttonPanel=new TransparentPanel(new FlowLayout(FlowLayout.RIGHT));
  forgetPasswordButton=new JButton("Forget Password!");
  buttonPanel.add(forgetPasswordButton);
  userPassPanel.add(buttonPanel,BorderLayout.SOUTH);
  c.fill=GridBagConstraints.HORIZONTAL;
  c.weightx=1.0;
  c.insets=new Insets(5,10,0,0);
  c.gridwidth=0;
  c.gridx=0;
  c.gridy=6;
  mainPanel.add(userPassPanel,c);
  JTextPane pane=new JTextPane();
  pane.setForeground(Color.RED);
  pane.setEditable(false);
  pane.setOpaque(false);
  pane.setText(ProvisioningActivator.getResourceService().getI18NString("plugin.provisioning.RESTART_WARNING",new String[]{ProvisioningActivator.getResourceService().getSettingsString("service.gui.APPLICATION_NAME")}));
  c.gridy=7;
  mainPanel.add(pane,c);
  initButtonStates();
  initListeners();
}
