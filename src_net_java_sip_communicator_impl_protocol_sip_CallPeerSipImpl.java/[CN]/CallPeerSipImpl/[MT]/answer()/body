{
  Transaction transaction=getLatestInviteTransaction();
  if (transaction == null || !(transaction instanceof ServerTransaction)) {
    setState(CallPeerState.DISCONNECTED);
    throw new OperationFailedException("Failed to extract a ServerTransaction " + "from the call's associated dialog!",OperationFailedException.INTERNAL_ERROR);
  }
  CallPeerState peerState=getState();
  if (peerState.equals(CallPeerState.CONNECTED) || CallPeerState.isOnHold(peerState)) {
    logger.info("Ignoring user request to answer a CallPeer " + "that is already connected. CP:");
    return;
  }
  ServerTransaction serverTransaction=(ServerTransaction)transaction;
  Request invite=serverTransaction.getRequest();
  Response ok=null;
  try {
    ok=messageFactory.createResponse(Response.OK,invite);
    reflectConferenceFocus(ok);
  }
 catch (  ParseException ex) {
    setState(CallPeerState.DISCONNECTED);
    ProtocolProviderServiceSipImpl.throwOperationFailedException("Failed to construct an OK response to an INVITE request",OperationFailedException.INTERNAL_ERROR,ex,logger);
  }
  ContentTypeHeader contentTypeHeader=null;
  try {
    contentTypeHeader=getProtocolProvider().getHeaderFactory().createContentTypeHeader("application","sdp");
  }
 catch (  ParseException ex) {
    setState(CallPeerState.DISCONNECTED);
    ProtocolProviderServiceSipImpl.throwOperationFailedException("Failed to create a content type header for the OK response",OperationFailedException.INTERNAL_ERROR,ex,logger);
  }
  String sdpOffer=null;
  try {
    ContentLengthHeader cl=invite.getContentLength();
    if (cl != null && cl.getContentLength() > 0) {
      sdpOffer=SdpUtils.getContentAsString(invite);
    }
    String sdp;
    if ((sdpOffer != null) && (sdpOffer.length() > 0)) {
      sdp=getMediaHandler().processOffer(sdpOffer);
    }
 else {
      sdp=getMediaHandler().createOffer();
    }
    ok.setContent(sdp,contentTypeHeader);
  }
 catch (  Exception ex) {
    logger.error("Failed to create an SDP description for an OK response " + "to an INVITE request!",ex);
    getProtocolProvider().sayError(serverTransaction,Response.NOT_ACCEPTABLE_HERE);
  }
  try {
    serverTransaction.sendResponse(ok);
    if (logger.isDebugEnabled())     logger.debug("sent response\n" + ok);
  }
 catch (  Exception ex) {
    setState(CallPeerState.DISCONNECTED);
    ProtocolProviderServiceSipImpl.throwOperationFailedException("Failed to send an OK response to an INVITE request",OperationFailedException.NETWORK_FAILURE,ex,logger);
  }
  fireRequestProcessed(invite,ok);
  if (sdpOffer != null && sdpOffer.length() > 0)   setState(CallPeerState.CONNECTING_INCOMING_CALL_WITH_MEDIA);
 else   setState(CallPeerState.CONNECTING_INCOMING_CALL);
}
