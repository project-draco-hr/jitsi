{
  bundleContext=bc;
  ServiceReference uiServiceRef=bundleContext.getServiceReference(UIService.class.getName());
  uiService=(UIService)bundleContext.getService(uiServiceRef);
  Dictionary<String,String> properties=new Hashtable<String,String>();
  if (!getConfigurationService().getBoolean(DISABLED_PROP,false)) {
    ConfigurationManager.loadGuiConfigurations();
    properties.put(ConfigurationForm.FORM_TYPE,ConfigurationForm.GENERAL_TYPE);
    bundleContext.registerService(ConfigurationForm.class.getName(),new LazyConfigurationForm("net.java.sip.communicator.plugin." + "generalconfig.GeneralConfigurationPanel",getClass().getClassLoader(),"plugin.generalconfig.PLUGIN_ICON","service.gui.GENERAL",0),properties);
  }
  if (!getConfigurationService().getBoolean(SIP_CONFIG_DISABLED_PROP,false)) {
    properties.put(ConfigurationForm.FORM_TYPE,ConfigurationForm.ADVANCED_TYPE);
    bundleContext.registerService(ConfigurationForm.class.getName(),new LazyConfigurationForm(SIPConfigForm.class.getName(),getClass().getClassLoader(),null,"plugin.generalconfig.SIP_CALL_CONFIG",52,true),properties);
  }
  properties.put(ConfigurationForm.FORM_TYPE,ConfigurationForm.ADVANCED_TYPE);
  bundleContext.registerService(ConfigurationForm.class.getName(),new LazyConfigurationForm(SilkConfigForm.class.getName(),getClass().getClassLoader(),null,"plugin.generalconfig.SILK_CONFIG",0,true),properties);
  bundleContext.registerService(ConfigurationForm.class.getName(),new LazyConfigurationForm(OpusConfigForm.class.getName(),getClass().getClassLoader(),null,"plugin.generalconfig.OPUS_CONFIG",0,true),properties);
  ServiceReference[] protocolRefs=bundleContext.getServiceReferences(ProtocolProviderService.class.getName(),null);
  if (protocolRefs != null && protocolRefs.length > 0) {
    try {
synchronized (GeneralConfigPluginActivator.class) {
        if (!startThreadIsCalled) {
          startThread();
          startThreadIsCalled=true;
        }
      }
    }
 catch (    Throwable t) {
      logger.error("Error starting auto away thread",t);
    }
  }
 else   bundleContext.addServiceListener(this);
  if (logger.isInfoEnabled())   logger.info("PREFERENCES PLUGIN... [REGISTERED]");
}
