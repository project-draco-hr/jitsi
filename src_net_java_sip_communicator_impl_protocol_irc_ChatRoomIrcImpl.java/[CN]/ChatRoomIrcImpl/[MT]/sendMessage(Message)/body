{
  assertConnected();
  String[] splitMessages=message.getContent().split("\n");
  String messagePortion=null;
  for (int i=0; i < splitMessages.length; i++) {
    messagePortion=splitMessages[i];
    if (messagePortion.equals("\n") || messagePortion.matches("[\\ ]*")) {
      continue;
    }
    final IrcConnection connection=this.parentProvider.getIrcStack().getConnection();
    if (connection == null) {
      throw new IllegalStateException("Connection is not available.");
    }
    if (((MessageIrcImpl)message).isCommand()) {
      try {
        connection.getMessageManager().command(this,messagePortion);
        this.fireMessageReceivedEvent(message,this.user,new Date(),ChatRoomMessageReceivedEvent.SYSTEM_MESSAGE_RECEIVED);
      }
 catch (      final UnsupportedCommandException e) {
        this.fireMessageDeliveryFailedEvent(ChatRoomMessageDeliveryFailedEvent.UNSUPPORTED_OPERATION,e.getMessage(),new Date(),message);
      }
catch (      BadCommandException e) {
        LOGGER.error("An error occurred while constructing " + "the command. This is most likely due to a bug " + "in the implementation of the command. Message: " + message + "'",e);
        this.fireMessageDeliveryFailedEvent(ChatRoomMessageDeliveryFailedEvent.INTERNAL_ERROR,"Command cannot be executed. This is most likely due " + "to a bug in the implementation.",new Date(),message);
      }
catch (      BadCommandInvocationException e) {
        StringBuilder helpText=new StringBuilder();
        if (e.getCause() != null) {
          helpText.append(e.getCause().getMessage());
          helpText.append('\n');
        }
        helpText.append(e.getHelp());
        MessageIrcImpl helpMessage=new MessageIrcImpl(helpText.toString(),OperationSetBasicInstantMessaging.DEFAULT_MIME_TYPE,OperationSetBasicInstantMessaging.DEFAULT_MIME_ENCODING,"Command usage:");
        this.fireMessageReceivedEvent(helpMessage,this.user,new Date(),MessageReceivedEvent.SYSTEM_MESSAGE_RECEIVED);
      }
    }
 else {
      connection.getMessageManager().message(this,messagePortion);
      this.fireMessageDeliveredEvent(new MessageIrcImpl(messagePortion,message.getContentType(),message.getEncoding(),message.getSubject()));
    }
  }
}
