{
  if (!started && enableZrtp && ownSSRC != 0)   startZrtp();
  if (!ZrtpRawPacket.isZrtpData(pkt)) {
    if (srtpInTransformer == null) {
      if (muted) {
        return null;
      }
 else       return pkt;
    }
    RawPacket pkt2=srtpInTransformer.reverseTransform(pkt);
    if ((pkt2 != null) && started && zrtpEngine.inState(ZrtpStateClass.ZrtpStates.WaitConfAck)) {
      zrtpEngine.conf2AckSecure();
    }
    return pkt2;
  }
  if (enableZrtp && started) {
    ZrtpRawPacket zPkt=new ZrtpRawPacket(pkt);
    if (!zPkt.checkCrc()) {
      securityEventManager.showMessage(ZrtpCodes.MessageSeverity.Warning,EnumSet.of(ZrtpCodes.WarningCodes.WarningCRCmismatch));
    }
 else     if (zPkt.hasMagic()) {
      int extHeaderOffset=zPkt.getHeaderLength() - zPkt.getExtensionLength() - RawPacket.EXT_HEADER_SIZE;
      byte[] extHeader=zPkt.readRegion(extHeaderOffset,RawPacket.EXT_HEADER_SIZE + zPkt.getExtensionLength() + zPkt.getPayloadLength());
      zrtpEngine.processZrtpMessage(extHeader,zPkt.getSSRC());
    }
  }
  return null;
}
