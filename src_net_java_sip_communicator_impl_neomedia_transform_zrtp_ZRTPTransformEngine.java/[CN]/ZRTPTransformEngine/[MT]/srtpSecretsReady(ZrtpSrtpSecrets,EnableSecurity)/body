{
  SRTPPolicy srtpPolicy=null;
  int cipher=0, authn=0, authKeyLen=0;
  if (secrets.getAuthAlgorithm() == ZrtpConstants.SupportedAuthAlgos.HS) {
    authn=SRTPPolicy.HMACSHA1_AUTHENTICATION;
    authKeyLen=20;
  }
  if (secrets.getAuthAlgorithm() == ZrtpConstants.SupportedAuthAlgos.SK) {
    authn=SRTPPolicy.SKEIN_AUTHENTICATION;
    authKeyLen=32;
  }
  if (secrets.getSymEncAlgorithm() == ZrtpConstants.SupportedSymAlgos.AES)   cipher=SRTPPolicy.AESCM_ENCRYPTION;
  if (secrets.getSymEncAlgorithm() == ZrtpConstants.SupportedSymAlgos.TwoFish)   cipher=SRTPPolicy.TWOFISH_ENCRYPTION;
  if (part == EnableSecurity.ForSender) {
    if (secrets.getRole() == Role.Initiator) {
      srtpPolicy=new SRTPPolicy(cipher,secrets.getInitKeyLen() / 8,authn,authKeyLen,secrets.getSrtpAuthTagLen() / 8,secrets.getInitSaltLen() / 8);
      SRTPTransformEngine engine=new SRTPTransformEngine(secrets.getKeyInitiator(),secrets.getSaltInitiator(),srtpPolicy,srtpPolicy);
      srtpOutTransformer=engine.getRTPTransformer();
      zrtcpTransformer.setSrtcpOut(engine.getRTCPTransformer());
    }
 else {
      srtpPolicy=new SRTPPolicy(cipher,secrets.getRespKeyLen() / 8,authn,authKeyLen,secrets.getSrtpAuthTagLen() / 8,secrets.getRespSaltLen() / 8);
      SRTPTransformEngine engine=new SRTPTransformEngine(secrets.getKeyResponder(),secrets.getSaltResponder(),srtpPolicy,srtpPolicy);
      srtpOutTransformer=engine.getRTPTransformer();
      zrtcpTransformer.setSrtcpOut(engine.getRTCPTransformer());
    }
  }
  if (part == EnableSecurity.ForReceiver) {
    if (secrets.getRole() == Role.Initiator) {
      srtpPolicy=new SRTPPolicy(cipher,secrets.getRespKeyLen() / 8,authn,authKeyLen,secrets.getSrtpAuthTagLen() / 8,secrets.getRespSaltLen() / 8);
      SRTPTransformEngine engine=new SRTPTransformEngine(secrets.getKeyResponder(),secrets.getSaltResponder(),srtpPolicy,srtpPolicy);
      srtpInTransformer=engine.getRTPTransformer();
      zrtcpTransformer.setSrtcpIn(engine.getRTCPTransformer());
      this.muted=false;
    }
 else {
      srtpPolicy=new SRTPPolicy(cipher,secrets.getInitKeyLen() / 8,authn,authKeyLen,secrets.getSrtpAuthTagLen() / 8,secrets.getInitSaltLen() / 8);
      SRTPTransformEngine engine=new SRTPTransformEngine(secrets.getKeyInitiator(),secrets.getSaltInitiator(),srtpPolicy,srtpPolicy);
      srtpInTransformer=engine.getRTPTransformer();
      zrtcpTransformer.setSrtcpIn(engine.getRTCPTransformer());
      this.muted=false;
    }
  }
  return true;
}
