{
synchronized (storedAccounts) {
    if (!storedAccounts.contains(accountID))     storedAccounts.add(accountID);
  }
  ConfigurationService configurationService=ProtocolProviderActivator.getConfigurationService();
  String factoryPackage=getFactoryImplPackageName(factory);
  List<String> storedAccounts=configurationService.getPropertyNamesByPrefix(factoryPackage,true);
  String accountUID=accountID.getAccountUniqueID();
  String accountNodeName=null;
  for (Iterator<String> storedAccountIter=storedAccounts.iterator(); storedAccountIter.hasNext(); ) {
    String storedAccount=storedAccountIter.next();
    String storedAccountUID=configurationService.getString(storedAccount + "." + ProtocolProviderFactory.ACCOUNT_UID);
    if (storedAccountUID.equals(accountUID))     accountNodeName=configurationService.getString(storedAccount);
  }
  Map<String,Object> configurationProperties=new HashMap<String,Object>();
  if (accountNodeName == null) {
    accountNodeName="acc" + Long.toString(System.currentTimeMillis());
    configurationProperties.put(factoryPackage + "." + accountNodeName,accountNodeName);
    configurationProperties.put(factoryPackage + "." + accountNodeName+ "."+ ProtocolProviderFactory.ACCOUNT_UID,accountID.getAccountUniqueID());
  }
  Map<String,String> accountProperties=accountID.getAccountProperties();
  for (  Map.Entry<String,String> entry : accountProperties.entrySet()) {
    String property=entry.getKey();
    String value=entry.getValue();
    String secureStorePrefix=null;
    if (property.equals(ProtocolProviderFactory.PASSWORD)) {
      String accountPrefix=factoryPackage + "." + accountNodeName;
      secureStorePrefix=accountPrefix;
    }
 else     if (property.endsWith("." + ProtocolProviderFactory.PASSWORD)) {
      secureStorePrefix=factoryPackage + "." + accountNodeName+ "."+ property.substring(0,property.lastIndexOf("."));
    }
    if (secureStorePrefix != null) {
      CredentialsStorageService credentialsStorage=ServiceUtils.getService(bundleContext,CredentialsStorageService.class);
      if ((value != null) && (value.length() != 0) && !credentialsStorage.storePassword(secureStorePrefix,value)) {
        throw new OperationFailedException("CredentialsStorageService failed to" + " storePassword",OperationFailedException.GENERAL_ERROR);
      }
    }
 else {
      configurationProperties.put(factoryPackage + "." + accountNodeName+ "."+ property,value);
    }
  }
  if (!accountProperties.containsKey(ProtocolProviderFactory.PASSWORD)) {
    CredentialsStorageService credentialsStorage=ServiceUtils.getService(bundleContext,CredentialsStorageService.class);
    credentialsStorage.removePassword(factoryPackage + "." + accountNodeName);
  }
  if (configurationProperties.size() > 0)   configurationService.setProperties(configurationProperties);
  if (logger.isDebugEnabled())   logger.debug("Stored account for id " + accountID.getAccountUniqueID() + " for package "+ factoryPackage);
}
