{
  super(new BorderLayout());
  this.enablePresOpButton=new SIPCommCheckBox(Resources.getString("plugin.sipaccregwizz.ENABLE_PRESENCE"),regform.getRegistration().isEnablePresence());
  this.forceP2PPresOpButton=new SIPCommCheckBox(Resources.getString("plugin.sipaccregwizz.FORCE_P2P_PRESENCE"),regform.getRegistration().isForceP2PMode());
  this.xCapEnableBox=new SIPCommCheckBox(Resources.getString("plugin.sipaccregwizz.XCAP_ENABLE"),regform.getRegistration().isXCapEnable());
  this.xCapUseSipCredetialsBox=new SIPCommCheckBox(Resources.getString("plugin.sipaccregwizz.XCAP_USE_SIP_CREDENTIALS"),regform.getRegistration().isXCapUseSipCredetials());
  if (regform.getRegistration().isXCapEnable())   this.xCapServerUriValue.setText(regform.getRegistration().getXCapServerUri());
  enablePresOpButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      JCheckBox cb=(JCheckBox)evt.getSource();
      setPresenceOptionsEnabled(cb.isSelected());
    }
  }
);
  labelsPresOpPanel.add(pollPeriodLabel);
  labelsPresOpPanel.add(subscribeExpiresLabel);
  valuesPresOpPanel.add(pollPeriodField);
  valuesPresOpPanel.add(subscribeExpiresField);
  buttonsPresOpPanel.add(enablePresOpButton);
  buttonsPresOpPanel.add(forceP2PPresOpButton);
  presenceOpPanel.add(buttonsPresOpPanel,BorderLayout.NORTH);
  presenceOpPanel.add(labelsPresOpPanel,BorderLayout.WEST);
  presenceOpPanel.add(valuesPresOpPanel,BorderLayout.CENTER);
  presenceOpPanel.setBorder(BorderFactory.createTitledBorder(Resources.getString("plugin.sipaccregwizz.PRESENCE_OPTIONS")));
  xCapEnableBox.setSelected(regform.getRegistration().isXCapEnable());
  xCapEnableBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      JCheckBox checkBox=(JCheckBox)evt.getSource();
      setXCapEnableEnabled(checkBox.isSelected());
    }
  }
);
  xCapUseSipCredetialsBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      JCheckBox checkBox=(JCheckBox)evt.getSource();
      setXCapUseSipCredetialsEnabled(checkBox.isSelected());
    }
  }
);
  setXCapEnableEnabled(xCapEnableBox.isSelected());
  JPanel xCapServerUriPanel=new TransparentPanel(new BorderLayout(10,10));
  xCapServerUriPanel.add(xCapServerUriLabel,BorderLayout.WEST);
  xCapServerUriPanel.add(xCapServerUriValue,BorderLayout.CENTER);
  String xcapUri=regform.getRegistration().getXCapServerUri();
  if (xcapUri != null)   xCapServerUriValue.setText(xcapUri);
  xCapButtonsPanel.add(xCapEnableBox);
  xCapButtonsPanel.add(xCapServerUriPanel);
  xCapButtonsPanel.add(xCapUseSipCredetialsBox);
  xCapCredetialsLabelsPanel.add(xCapUserLabel);
  xCapCredetialsLabelsPanel.add(xCapPasswordLabel);
  xCapCredetialsValuesPanel.add(xCapUserValue);
  xCapCredetialsValuesPanel.add(xCapPasswordValue);
  xCapPanel.add(xCapButtonsPanel,BorderLayout.NORTH);
  xCapPanel.add(xCapCredetialsLabelsPanel,BorderLayout.WEST);
  xCapPanel.add(xCapCredetialsValuesPanel,BorderLayout.CENTER);
  xCapPanel.setBorder(BorderFactory.createTitledBorder(Resources.getString("plugin.sipaccregwizz.XCAP_OPTIONS")));
  this.add(presenceOpPanel,BorderLayout.NORTH);
  this.add(xCapPanel,BorderLayout.SOUTH);
}
