{
  chkBackupDnsEnabled=new SIPCommCheckBox();
  spnDnsTimeout=new JSpinner(new SpinnerNumberModel(0,0,30000,100));
  spnDnsRedemption=new JSpinner(new SpinnerNumberModel(1,1,100,1));
  spnBackupResolverPort=new JSpinner(new SpinnerNumberModel(0,0,65536,1));
  txtBackupResolverFallbackIP=new JFormattedTextField(createIPFormatter());
  lblRedemption=new JLabel();
  txtBackupResolver=new JTextField();
  lblBackupResolver=new JLabel();
  lblBackupPort=new JLabel();
  lblBackupResolverFallbackIP=new JLabel();
  lblPatience=new JLabel();
  chkBackupDnsEnabled.setText(R.getI18NString("plugin.dnsconfig.chkBackupDnsEnabled.text"));
  lblRedemption.setText(R.getI18NString("plugin.dnsconfig.lblRedemption.text"));
  lblBackupResolver.setText(R.getI18NString("plugin.dnsconfig.lblBackupResolver.text"));
  lblBackupPort.setText(R.getI18NString("plugin.dnsconfig.lblBackupPort.text"));
  lblBackupResolverFallbackIP.setText(R.getI18NString("plugin.dnsconfig.lblBackupResolverFallbackIP.text"));
  lblPatience.setText(R.getI18NString("plugin.dnsconfig.lblPatience.text"));
  this.setLayout(new BorderLayout());
  JPanel mainPanel=new TransparentPanel();
  mainPanel.setLayout(new GridBagLayout());
  mainPanel.setBorder(BorderFactory.createTitledBorder(R.getI18NString("plugin.dnsconfig.border.TITLE")));
  GridBagConstraints cl=new GridBagConstraints();
  GridBagConstraints cr=new GridBagConstraints();
  chkBackupDnsEnabled.setAlignmentX(Component.LEFT_ALIGNMENT);
  JPanel enablePanel=new TransparentPanel(new FlowLayout(FlowLayout.LEFT));
  enablePanel.add(chkBackupDnsEnabled);
  add(enablePanel,BorderLayout.NORTH);
  JPanel centerPanel=new TransparentPanel();
  centerPanel.setLayout(new BorderLayout());
  centerPanel.add(mainPanel,BorderLayout.NORTH);
  add(centerPanel,BorderLayout.CENTER);
  cl.fill=GridBagConstraints.HORIZONTAL;
  cl.gridx=0;
  cl.gridy=0;
  cl.insets=new Insets(0,3,0,0);
  mainPanel.add(lblBackupResolver,cl);
  cr.fill=GridBagConstraints.HORIZONTAL;
  cr.anchor=GridBagConstraints.WEST;
  cr.insets=new Insets(0,3,0,3);
  cr.weightx=1.0;
  cr.gridx=1;
  cr.gridy=0;
  mainPanel.add(txtBackupResolver,cr);
  cl.gridy=1;
  cl.insets=new Insets(5,3,0,0);
  cr.gridy=1;
  cr.insets=new Insets(5,3,0,3);
  mainPanel.add(lblBackupResolverFallbackIP,cl);
  mainPanel.add(txtBackupResolverFallbackIP,cr);
  cl.gridy=2;
  cr.gridy=2;
  mainPanel.add(lblBackupPort,cl);
  mainPanel.add(spnBackupResolverPort,cr);
  cl.gridy=3;
  cr.gridy=3;
  mainPanel.add(lblPatience,cl);
  mainPanel.add(spnDnsTimeout,cr);
  String label=R.getI18NString("plugin.dnsconfig.lblPatience.description");
  JLabel descriptionLabel=new JLabel(label);
  descriptionLabel.setToolTipText(label);
  descriptionLabel.setForeground(Color.GRAY);
  Font f=descriptionLabel.getFont().deriveFont(8);
  descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(11f));
  cr.gridy=4;
  mainPanel.add(descriptionLabel,cr);
  cl.gridy=5;
  cr.gridy=5;
  mainPanel.add(lblRedemption,cl);
  mainPanel.add(spnDnsRedemption,cr);
  label=R.getI18NString("plugin.dnsconfig.lblRedemption.description");
  descriptionLabel=new JLabel(label);
  descriptionLabel.setToolTipText(label);
  descriptionLabel.setForeground(Color.GRAY);
  descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(11f));
  cr.gridy=6;
  cr.insets=new Insets(5,3,3,3);
  mainPanel.add(descriptionLabel,cr);
}
