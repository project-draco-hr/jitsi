{
  int i, mHalf, m;
  float min_nrg, nrg, t, km, Atmp1, Atmp2;
  min_nrg=1e-12f * corr[0] + 1e-9f;
  nrg=corr[0];
  nrg=Math.max(min_nrg,nrg);
  A[A_offset]=corr[1] / nrg;
  nrg-=A[A_offset] * corr[1];
  nrg=Math.max(min_nrg,nrg);
  for (m=1; m < order; m++) {
    t=corr[m + 1];
    for (i=0; i < m; i++) {
      t-=A[A_offset + i] * corr[m - i];
    }
    km=t / nrg;
    nrg-=km * t;
    nrg=Math.max(min_nrg,nrg);
    mHalf=m >> 1;
    for (i=0; i < mHalf; i++) {
      Atmp1=A[A_offset + i];
      Atmp2=A[A_offset + m - i - 1];
      A[A_offset + m - i - 1]-=km * Atmp1;
      A[A_offset + i]-=km * Atmp2;
    }
    if ((m & 1) != 0) {
      A[A_offset + mHalf]-=km * A[A_offset + mHalf];
    }
    A[A_offset + m]=km;
  }
  return nrg;
}
