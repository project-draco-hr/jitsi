{
  URL rssURL=null;
  String contactIdentifierURL=contactIdentifier;
  if (contactIdentifierURL.startsWith("feed:https")) {
    contactIdentifierURL=contactIdentifierURL.replaceFirst("feed:https","https");
  }
 else   if (contactIdentifierURL.startsWith("feed")) {
    contactIdentifierURL=contactIdentifierURL.replaceFirst("feed","http");
  }
  if (findContactByID(contactIdentifier) != null) {
    logger.debug("contact with same id already exists - " + contactIdentifier);
    return;
  }
  try {
    rssURL=new URL(contactIdentifierURL);
  }
 catch (  MalformedURLException ex) {
    throw new IllegalArgumentException("failed to create a URL for address " + contactIdentifier + ". Error was: "+ ex.getMessage());
  }
  RssFeedReader rssFeedReader=new RssFeedReader(rssURL);
  try {
    rssFeedReader.retrieveFlow();
  }
 catch (  FileNotFoundException ex) {
    logger.debug("failed to create a URL for address " + contactIdentifier + ". Error was: "+ ex.getMessage(),ex);
  }
  ContactRssImpl contact=new ContactRssImpl(contactIdentifier,rssURL,rssFeedReader,parentProvider);
  ((ContactGroupRssImpl)parent).addContact(contact);
  fireSubscriptionEvent(contact,parent,SubscriptionEvent.SUBSCRIPTION_CREATED);
  changePresenceStatusForContact(contact,getPresenceStatus());
  parentProvider.getBasicInstantMessaging().threadedContactFeedUpdate(contact);
}
