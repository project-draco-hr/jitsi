{
  URL rssURL=null;
  String contactIdentifierURL=address;
  if (contactIdentifierURL.startsWith("feed:https")) {
    contactIdentifierURL=contactIdentifierURL.replaceFirst("feed:https","https");
  }
 else   if (contactIdentifierURL.startsWith("feed")) {
    contactIdentifierURL=contactIdentifierURL.replaceFirst("feed","http");
  }
  try {
    rssURL=new URL(contactIdentifierURL);
  }
 catch (  MalformedURLException ex) {
    throw new IllegalArgumentException("failed to create a URL for address " + address + ". Error was: "+ ex.getMessage());
  }
  try {
    ContactRssImpl contact=new ContactRssImpl(address,rssURL,persistentData,parentProvider);
    contact.setResolved(false);
    ((ContactGroupRssImpl)parent).addContact(contact);
    fireSubscriptionEvent(contact,parent,SubscriptionEvent.SUBSCRIPTION_CREATED);
    contact.setResolved(true);
    fireSubscriptionEvent(contact,parent,SubscriptionEvent.SUBSCRIPTION_RESOLVED);
    changePresenceStatusForContact(contact,getPresenceStatus());
    contact.getImage();
    return contact;
  }
 catch (  FileNotFoundException ex) {
    logger.debug("failed to create a URL for address " + rssURL + ". Error was: "+ ex.getMessage(),ex);
  }
catch (  OperationFailedException ex) {
    logger.debug("failed to create a URL for address " + rssURL + ". Error was: "+ ex.getMessage(),ex);
  }
  return null;
}
