{
  JingleIQ jingleIQ=new JingleIQ();
  String sessionID=null;
  String initiator=null;
  String responder=null;
  boolean done=false;
  JingleContent currentContent=null;
  JingleContentProvider jcp=new JingleContentProvider();
  JingleDescriptionProvider jdpAudio=new JingleDescriptionProvider.Audio();
  JingleTransportProvider jtpRawUdp=new JingleTransportProvider.RawUdp();
  JingleTransportProvider jtpIce=new JingleTransportProvider.Ice();
  JingleContentInfoProvider jmipAudio=new JingleContentInfoProvider.Audio();
  int eventType;
  String elementName;
  String namespace;
  sessionID=parser.getAttributeValue("","sid");
  action=JingleActionEnum.getAction(parser.getAttributeValue("","action"));
  initiator=parser.getAttributeValue("","initiator");
  responder=parser.getAttributeValue("","responder");
  jingleIQ.setSid(sessionID);
  jingleIQ.setAction(action);
  jingleIQ.setInitiator(initiator);
  jingleIQ.setResponder(responder);
  while (!done) {
    eventType=parser.next();
    elementName=parser.getName();
    namespace=parser.getNamespace();
    if (eventType == XmlPullParser.START_TAG) {
      if (elementName.equals(JingleContent.NODENAME)) {
        currentContent=(JingleContent)jcp.parseExtension(parser);
        jingleIQ.addContent(currentContent);
      }
 else       if (elementName.equals(JingleDescription.NODENAME) && namespace.equals(JingleDescription.Audio.NAMESPACE)) {
        currentContent.setDescription((JingleDescription)jdpAudio.parseExtension(parser));
      }
 else       if (elementName.equals(JingleTransport.NODENAME)) {
        if (namespace.equals(JingleTransport.RawUdp.NAMESPACE)) {
          currentContent.addJingleTransport((JingleTransport)jtpRawUdp.parseExtension(parser));
        }
 else         if (namespace.equals(JingleTransport.Ice.NAMESPACE)) {
          currentContent.addJingleTransport((JingleTransport)jtpIce.parseExtension(parser));
        }
 else {
          throw new XMPPException("Unknown transport namespace \"" + namespace + "\" in Jingle packet.");
        }
      }
 else       if (namespace.equals(JingleContentInfo.Audio.NAMESPACE)) {
        jingleIQ.setContentInfo((JingleContentInfo)jmipAudio.parseExtension(parser));
      }
 else {
        throw new XMPPException("Unknown combination of namespace \"" + namespace + "\" and element name \""+ elementName+ "\" in Jingle packet.");
      }
    }
 else     if (eventType == XmlPullParser.END_TAG) {
      if (parser.getName().equals(Jingle.getElementName())) {
        done=true;
      }
    }
  }
  return jingleIQ;
}
