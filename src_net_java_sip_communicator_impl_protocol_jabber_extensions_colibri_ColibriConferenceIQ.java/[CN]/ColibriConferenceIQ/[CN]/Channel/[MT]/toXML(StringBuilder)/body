{
  xml.append('<').append(ELEMENT_NAME);
  MediaDirection direction=getDirection();
  if ((direction != null) && (direction != MediaDirection.SENDRECV)) {
    xml.append(' ').append(DIRECTION_ATTR_NAME).append("='").append(direction.toString()).append('\'');
  }
  String endpoint=getEndpoint();
  if (endpoint != null) {
    xml.append(' ').append(ENDPOINT_ATTR_NAME).append("='").append(endpoint).append('\'');
  }
  int expire=getExpire();
  if (expire >= 0) {
    xml.append(' ').append(EXPIRE_ATTR_NAME).append("='").append(expire).append('\'');
  }
  String host=getHost();
  if (host != null) {
    xml.append(' ').append(HOST_ATTR_NAME).append("='").append(host).append('\'');
  }
  String id=getID();
  if (id != null) {
    xml.append(' ').append(ID_ATTR_NAME).append("='").append(id).append('\'');
  }
  Boolean initiator=isInitiator();
  if (initiator != null) {
    xml.append(' ').append(INITIATOR_ATTR_NAME).append("='").append(initiator).append('\'');
  }
  Integer lastN=getLastN();
  if (lastN != null) {
    xml.append(' ').append(LAST_N_ATTR_NAME).append("='").append(lastN).append('\'');
  }
  int rtcpPort=getRTCPPort();
  if (rtcpPort > 0) {
    xml.append(' ').append(RTCP_PORT_ATTR_NAME).append("='").append(rtcpPort).append('\'');
  }
  RTPLevelRelayType rtpLevelRelayType=getRTPLevelRelayType();
  if (rtpLevelRelayType != null) {
    xml.append(' ').append(RTP_LEVEL_RELAY_TYPE_ATTR_NAME).append("='").append(rtpLevelRelayType).append('\'');
  }
  int rtpPort=getRTPPort();
  if (rtpPort > 0) {
    xml.append(' ').append(RTP_PORT_ATTR_NAME).append("='").append(rtpPort).append('\'');
  }
  List<PayloadTypePacketExtension> payloadTypes=getPayloadTypes();
  boolean hasPayloadTypes=!payloadTypes.isEmpty();
  List<SourcePacketExtension> sources=getSources();
  boolean hasSources=!sources.isEmpty();
  int[] ssrcs=getSSRCs();
  boolean hasSSRCs=(ssrcs.length != 0);
  IceUdpTransportPacketExtension transport=getTransport();
  boolean hasTransport=(transport != null);
  if (hasPayloadTypes || hasSources || hasSSRCs|| hasTransport) {
    xml.append('>');
    if (hasPayloadTypes) {
      for (      PayloadTypePacketExtension payloadType : payloadTypes)       xml.append(payloadType.toXML());
    }
    if (hasSources) {
      for (      SourcePacketExtension source : sources)       xml.append(source.toXML());
    }
    if (hasSSRCs) {
      for (int i=0; i < ssrcs.length; i++) {
        xml.append('<').append(SSRC_ELEMENT_NAME).append('>').append(Long.toString(ssrcs[i] & 0xFFFFFFFFL)).append("</").append(SSRC_ELEMENT_NAME).append('>');
      }
    }
    if (hasTransport)     xml.append(transport.toXML());
    xml.append("</").append(ELEMENT_NAME).append('>');
  }
 else {
    xml.append(" />");
  }
}
