{
  int M=Ld8k.M;
  float s, at, err;
  int i, j, l;
  rc[0]=(-r[1]) / r[0];
  a[a_offset + 0]=1.0f;
  a[a_offset + 1]=rc[0];
  err=r[0] + r[1] * rc[0];
  for (i=2; i <= M; i++) {
    s=0.0f;
    for (j=0; j < i; j++)     s+=r[i - j] * a[a_offset + j];
    rc[i - 1]=(-s) / (err);
    for (j=1; j <= (i / 2); j++) {
      l=i - j;
      at=a[a_offset + j] + rc[i - 1] * a[a_offset + l];
      a[a_offset + l]+=rc[i - 1] * a[a_offset + j];
      a[a_offset + j]=at;
    }
    a[a_offset + i]=rc[i - 1];
    err+=rc[i - 1] * s;
    if (err <= 0.0f)     err=0.001f;
  }
  return (err);
}
