{
  int GRID_POINTS=Ld8k.GRID_POINTS;
  int M=Ld8k.M;
  int NC=Ld8k.NC;
  float[] grid=TabLd8k.grid;
  int i, j, nf, ip;
  float xlow, ylow, xhigh, yhigh, xmid, ymid, xint;
  float[] coef;
  float[] f1=new float[NC + 1], f2=new float[NC + 1];
  f1[0]=1.0f;
  f2[0]=1.0f;
  for (i=1, j=a_offset + M; i <= NC; i++, j--) {
    float ai=a[a_offset + i];
    float aj=a[j];
    f1[i]=ai + aj - f1[i - 1];
    f2[i]=ai - aj + f2[i - 1];
  }
  nf=0;
  ip=0;
  coef=f1;
  xlow=grid[0];
  ylow=chebyshev(xlow,coef,NC);
  j=0;
  while ((nf < M) && (j < GRID_POINTS)) {
    j++;
    xhigh=xlow;
    yhigh=ylow;
    xlow=grid[j];
    ylow=chebyshev(xlow,coef,NC);
    if (ylow * yhigh <= 0.0f) {
      j--;
      for (i=0; i < 4; i++) {
        xmid=0.5f * (xlow + xhigh);
        ymid=chebyshev(xmid,coef,NC);
        if (ylow * ymid <= 0.0f) {
          yhigh=ymid;
          xhigh=xmid;
        }
 else {
          ylow=ymid;
          xlow=xmid;
        }
      }
      xint=xlow - ylow * (xhigh - xlow) / (yhigh - ylow);
      lsp[nf]=xint;
      nf++;
      ip=1 - ip;
      coef=(ip != 0) ? f2 : f1;
      xlow=xint;
      ylow=chebyshev(xlow,coef,NC);
    }
  }
  if (nf < M)   for (i=0; i < M; i++)   lsp[i]=old_lsp[i];
}
