{
  final JComboBox comboBox=new JComboBox();
  comboBox.setEditable(false);
  comboBox.setModel(new DeviceConfigurationComboBoxModel(mediaService.getDeviceConfiguration(),type));
  final JPanel portAudioPanel;
  final JPanel portAudioParentPanel;
  if (type == DeviceConfigurationComboBoxModel.AUDIO) {
    portAudioPanel=new TransparentPanel(new GridBagLayout());
    portAudioParentPanel=new TransparentPanel(new BorderLayout());
    comboBox.addItemListener(new ItemListener(){
      public void itemStateChanged(      ItemEvent e){
        if (e.getStateChange() == ItemEvent.SELECTED) {
          if (DeviceConfiguration.AUDIO_SYSTEM_PORTAUDIO.equals(e.getItem())) {
            createPortAudioControls(portAudioPanel,portAudioParentPanel);
          }
 else {
            portAudioPanel.removeAll();
            portAudioParentPanel.setBorder(null);
            revalidate();
            repaint();
          }
        }
      }
    }
);
    if (comboBox.getSelectedItem().equals(DeviceConfiguration.AUDIO_SYSTEM_PORTAUDIO))     createPortAudioControls(portAudioPanel,portAudioParentPanel);
  }
 else {
    portAudioPanel=null;
    portAudioParentPanel=null;
  }
  JLabel label=new JLabel(getLabelText(type));
  label.setDisplayedMnemonic(getDisplayedMnemonic(type));
  label.setLabelFor(comboBox);
  Container firstContainer=new TransparentPanel(new GridBagLayout());
  GridBagConstraints firstConstraints=new GridBagConstraints();
  firstConstraints.anchor=GridBagConstraints.NORTHWEST;
  firstConstraints.gridx=0;
  firstConstraints.gridy=0;
  firstConstraints.weightx=0;
  firstContainer.add(label,firstConstraints);
  firstConstraints.gridx=1;
  firstConstraints.weightx=1;
  firstContainer.add(comboBox,firstConstraints);
  Container secondContainer=new TransparentPanel(new GridLayout(1,0,HGAP,VGAP));
  if (portAudioPanel != null) {
    portAudioParentPanel.add(portAudioPanel,BorderLayout.NORTH);
    secondContainer.add(portAudioParentPanel);
  }
 else {
    comboBox.setLightWeightPopupEnabled(false);
    secondContainer.add(createPreview(type,comboBox));
  }
  secondContainer.add(createEncodingControls(type));
  Container container=new TransparentPanel(new GridBagLayout());
  GridBagConstraints constraints=new GridBagConstraints();
  constraints.fill=GridBagConstraints.HORIZONTAL;
  constraints.gridx=0;
  constraints.gridy=0;
  constraints.weightx=1;
  constraints.weighty=0;
  container.add(firstContainer,constraints);
  constraints.fill=GridBagConstraints.BOTH;
  constraints.gridy=1;
  constraints.weighty=1;
  container.add(secondContainer,constraints);
  return container;
}
